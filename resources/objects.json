{
  "$schema": "schema.json",
  "version": "5.199",
  "title": "VK API JSON Schema - objects",
  "description": "Contains JSON Schema documents explaining the VK.COM API - objects",
  "termsOfService": "https://dev.vk.com/rules",
  "definitions": {
    "account_account_counters": {
      "type": "object",
      "properties": {
        "app_requests": {
          "type": "integer",
          "description": "New app requests number",
          "minimum": 1
        },
        "events": {
          "type": "integer",
          "description": "New events number",
          "minimum": 1
        },
        "faves": {
          "type": "integer",
          "description": "New faves number",
          "minimum": 1
        },
        "friends": {
          "type": "integer",
          "description": "New friends requests number",
          "minimum": 1
        },
        "friends_recommendations": {
          "type": "integer",
          "description": "New friends recommendations number",
          "minimum": 1
        },
        "gifts": {
          "type": "integer",
          "description": "New gifts number",
          "minimum": 1
        },
        "groups": {
          "type": "integer",
          "description": "New groups number",
          "minimum": 1
        },
        "messages": {
          "type": "integer",
          "description": "New messages number",
          "minimum": 1
        },
        "memories": {
          "type": "integer",
          "description": "New memories number",
          "minimum": 1
        },
        "notes": {
          "type": "integer",
          "description": "New notes number",
          "minimum": 1
        },
        "notifications": {
          "type": "integer",
          "description": "New notifications number",
          "minimum": 1
        },
        "photos": {
          "type": "integer",
          "description": "New photo tags number",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "account_counters_filter": {
      "type": "string",
      "enum": [
        "app_requests",
        "events",
        "friends",
        "friends_recommendations",
        "gifts",
        "groups",
        "messages",
        "notes",
        "notifications",
        "photos",
        "faves",
        "memories"
      ]
    },
    "account_info": {
      "type": "object",
      "properties": {
        "2fa_required": {
          "description": "Two factor authentication is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "country": {
          "type": "string",
          "description": "Country code"
        },
        "https_required": {
          "description": "Information whether HTTPS-only is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "intro": {
          "description": "Information whether user has been processed intro",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "lang": {
          "type": "integer",
          "description": "Language ID"
        },
        "no_wall_replies": {
          "description": "Information whether wall comments should be hidden",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "own_posts_default": {
          "description": "Information whether only owners posts should be shown",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "account_name_request": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First name in request"
        },
        "id": {
          "type": "integer",
          "description": "Request ID needed to cancel the request"
        },
        "last_name": {
          "type": "string",
          "description": "Last name in request"
        },
        "status": {
          "$ref": "objects.json#/definitions/account_name_request_status"
        },
        "lang": {
          "type": "string",
          "description": "Text to display to user"
        },
        "link_href": {
          "type": "string",
          "description": "href for link in lang field"
        },
        "link_label": {
          "type": "string",
          "description": "label to display for link in lang field"
        }
      },
      "additionalProperties": false
    },
    "account_name_request_status": {
      "type": "string",
      "description": "Request status",
      "enum": [
        "success",
        "processing",
        "declined",
        "was_accepted",
        "was_declined",
        "declined_with_link",
        "response",
        "response_with_link"
      ]
    },
    "account_offer": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Offer description"
        },
        "id": {
          "type": "integer",
          "description": "Offer ID"
        },
        "img": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "instruction": {
          "type": "string",
          "description": "Instruction how to process the offer"
        },
        "instruction_html": {
          "type": "string",
          "description": "Instruction how to process the offer (HTML format)"
        },
        "price": {
          "type": "integer",
          "description": "Offer price"
        },
        "short_description": {
          "type": "string",
          "description": "Offer short description"
        },
        "tag": {
          "type": "string",
          "description": "Offer tag"
        },
        "title": {
          "type": "string",
          "description": "Offer title"
        },
        "currency_amount": {
          "type": "number",
          "description": "Currency amount"
        },
        "link_id": {
          "type": "integer",
          "description": "Link id"
        },
        "link_type": {
          "type": "string",
          "description": "Link type",
          "enum": [
            "profile",
            "group",
            "app"
          ]
        }
      },
      "additionalProperties": false
    },
    "account_push_conversations": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Items count"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_conversations_item"
          }
        }
      },
      "additionalProperties": false
    },
    "account_push_conversations_item": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in seconds",
          "required": true
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID",
          "required": true
        },
        "sound": {
          "description": "Information whether the sound are enabled",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "disabled_mentions": {
          "description": "Information whether the mentions are disabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "disabled_mass_mentions": {
          "description": "Information whether the mass mentions (like '@all', '@online') are disabled. Can be affected by 'disabled_mentions'",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "account_push_params": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_mode"
          }
        },
        "chat": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_mode"
          }
        },
        "like": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_settings"
          }
        },
        "repost": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_settings"
          }
        },
        "comment": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_settings"
          }
        },
        "mention": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_settings"
          }
        },
        "reply": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "new_post": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "wall_post": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "wall_publish": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "friend": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "friend_found": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "friend_accepted": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "group_invite": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "group_accepted": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "birthday": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "event_soon": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "app_request": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        },
        "sdk_open": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/account_push_params_onoff"
          }
        }
      },
      "additionalProperties": false
    },
    "account_push_params_mode": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "no_sound",
        "no_text"
      ]
    },
    "account_push_params_onoff": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off"
      ]
    },
    "account_push_params_settings": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "fr_of_fr"
      ]
    },
    "account_push_settings": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Information whether notifications are disabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in Unixtime"
        },
        "settings": {
          "$ref": "objects.json#/definitions/account_push_params"
        },
        "conversations": {
          "$ref": "objects.json#/definitions/account_push_conversations"
        }
      },
      "additionalProperties": false
    },
    "account_user_settings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_min"
        },
        {
          "$ref": "objects.json#/definitions/users_user_settings_xtr"
        },
        {
          "properties": {
            "photo_200": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 200 pixels in width"
            },
            "is_service_account": {
              "type": "boolean",
              "description": "flag about service account"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "account_user_settings_interest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_user_settings_interests": {
      "type": "object",
      "properties": {
        "activities": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "interests": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "music": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "tv": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "movies": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "books": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "games": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "quotes": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        },
        "about": {
          "$ref": "objects.json#/definitions/account_user_settings_interest"
        }
      },
      "additionalProperties": false
    },
    "address_fields": {
      "type": "string",
      "enum": [
        "id",
        "title",
        "address",
        "additional_address",
        "country_id",
        "country",
        "city_id",
        "city",
        "metro_station_id",
        "metro_station",
        "latitude",
        "longitude",
        "distance",
        "work_info_status",
        "timetable",
        "phone",
        "time_offset"
      ]
    },
    "addresses_fields": {
      "type": "string",
      "enum": [
        "id",
        "title",
        "address",
        "additional_address",
        "country_id",
        "city_id",
        "metro_station_id",
        "latitude",
        "longitude",
        "distance",
        "work_info_status",
        "timetable",
        "phone",
        "time_offset"
      ]
    },
    "ads_access_role": {
      "type": "string",
      "description": "Current user's role",
      "enum": [
        "admin",
        "manager",
        "reports"
      ]
    },
    "ads_access_role_public": {
      "type": "string",
      "description": "Current user's role",
      "enum": [
        "manager",
        "reports"
      ]
    },
    "ads_accesses": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Client ID"
        },
        "role": {
          "$ref": "objects.json#/definitions/ads_access_role"
        }
      },
      "additionalProperties": false
    },
    "ads_account": {
      "type": "object",
      "properties": {
        "access_role": {
          "$ref": "objects.json#/definitions/ads_access_role",
          "required": true
        },
        "account_id": {
          "type": "integer",
          "description": "Account ID",
          "required": true
        },
        "account_status": {
          "description": "Information whether account is active",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "account_type": {
          "$ref": "objects.json#/definitions/ads_account_type",
          "required": true
        },
        "account_name": {
          "type": "string",
          "description": "Account name",
          "required": true
        },
        "can_view_budget": {
          "type": "boolean",
          "description": "Can user view account budget",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_account_type": {
      "type": "string",
      "description": "Account type",
      "enum": [
        "general",
        "agency"
      ]
    },
    "ads_ad": {
      "type": "object",
      "properties": {
        "ad_format": {
          "type": "integer",
          "description": "Ad format",
          "required": true
        },
        "ad_platform": {
          "type": [
            "integer",
            "string"
          ],
          "required": true,
          "description": "Ad platform"
        },
        "all_limit": {
          "type": "string",
          "description": "Total limit",
          "required": true
        },
        "approved": {
          "$ref": "objects.json#/definitions/ads_ad_approved",
          "required": true
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        },
        "category1_id": {
          "type": "integer",
          "description": "Category ID"
        },
        "category2_id": {
          "type": "integer",
          "description": "Additional category ID"
        },
        "cost_type": {
          "$ref": "objects.json#/definitions/ads_ad_cost_type",
          "required": true
        },
        "cpc": {
          "type": "string",
          "description": "Cost of a click, kopecks"
        },
        "cpm": {
          "type": "string",
          "description": "Cost of 1000 impressions, kopecks"
        },
        "cpa": {
          "type": "string",
          "description": "Cost of an action, kopecks"
        },
        "ocpm": {
          "type": "string",
          "description": "Cost of 1000 impressions optimized, kopecks"
        },
        "autobidding": {
          "description": "Autobidding",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "autobidding_max_cost": {
          "type": "string",
          "description": "Max cost of target actions for autobidding, kopecks"
        },
        "disclaimer_medical": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "disclaimer_specialist": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "disclaimer_supplements": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Ad ID",
          "required": true
        },
        "impressions_limit": {
          "type": "integer",
          "description": "Impressions limit"
        },
        "impressions_limit_period": {
          "type": "integer",
          "description": "Impressions limit period"
        },
        "impressions_limited": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether impressions are limited"
        },
        "name": {
          "type": "string",
          "description": "Ad title",
          "required": true
        },
        "status": {
          "$ref": "objects.json#/definitions/ads_ad_status",
          "required": true
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "day_limit": {
          "type": "string",
          "description": "Day limit"
        },
        "goal_type": {
          "type": "integer",
          "description": "Goal type"
        },
        "user_goal_type": {
          "type": "integer",
          "description": "User goal type"
        },
        "age_restriction": {
          "type": "integer",
          "description": "Age restriction"
        },
        "conversion_pixel_id": {
          "type": "integer",
          "description": "Conversion pixel id"
        },
        "conversion_event_id": {
          "type": "integer",
          "description": "Conversion event id"
        },
        "create_time": {
          "type": "integer",
          "description": "Create time"
        },
        "update_time": {
          "type": "integer",
          "description": "Update time"
        },
        "start_time": {
          "type": "integer",
          "description": "Start time"
        },
        "stop_time": {
          "type": "integer",
          "description": "Stop time"
        },
        "publisher_platforms_auto": {
          "description": "Publisher platform auto",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "publisher_platforms": {
          "type": "string",
          "description": "Publisher platforms"
        },
        "link_url": {
          "type": "string",
          "description": "Link url"
        },
        "link_owner_id": {
          "type": "integer",
          "format": "int64",
          "description": "Link owner id"
        },
        "link_id": {
          "type": "integer",
          "description": "Link id"
        },
        "has_campaign_budget_optimization": {
          "type": "boolean",
          "description": "Has campaign budget optimization"
        },
        "events_retargeting_groups": {
          "type": "array",
          "description": "Events retargeting groups",
          "items": {
            "$ref": "objects.json#/definitions/ads_events_retargeting_group"
          }
        },
        "weekly_schedule_hours": {
          "type": "array",
          "description": "Weekly schedule hours",
          "items": {
            "type": "string"
          }
        },
        "weekly_schedule_use_holidays": {
          "type": "integer",
          "description": "Weekly schedule use holidays"
        },
        "ad_platform_no_ad_network": {
          "type": "integer",
          "description": "Ad platform no ad network"
        },
        "ad_platform_no_wall": {
          "type": "integer",
          "description": "Ad platform no wall"
        },
        "disclaimer_finance": {
          "type": "integer",
          "description": "Disclaimer finance"
        },
        "disclaimer_finance_name": {
          "type": "string",
          "description": "Disclaimer finance name"
        },
        "disclaimer_finance_license_no": {
          "type": "string",
          "description": "Disclaimer finance license no"
        },
        "is_promo": {
          "type": "boolean",
          "description": "is promo"
        },
        "suggested_criteria": {
          "type": "integer",
          "description": "Suggested criteria"
        }
      },
      "additionalProperties": false
    },
    "ads_ad_approved": {
      "type": "integer",
      "description": "Review status",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not moderated",
        "pending moderation",
        "approved",
        "rejected"
      ]
    },
    "ads_ad_cost_type": {
      "type": "integer",
      "description": "Cost type",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "per clicks",
        "per impressions",
        "per actions",
        "per impressions optimized"
      ]
    },
    "ads_ad_layout": {
      "type": "object",
      "properties": {
        "ad_format": {
          "type": "integer",
          "description": "Ad format",
          "required": true
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        },
        "cost_type": {
          "$ref": "objects.json#/definitions/ads_ad_cost_type",
          "required": true
        },
        "description": {
          "type": "string",
          "description": "Ad description",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Ad ID",
          "required": true
        },
        "image_src": {
          "type": "string",
          "format": "uri",
          "description": "Image URL",
          "required": true
        },
        "image_src_2x": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image in double size"
        },
        "link_domain": {
          "type": "string",
          "description": "Domain of advertised object"
        },
        "link_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of advertised object",
          "required": true
        },
        "link_type": {
          "type": "integer",
          "description": "Type of advertised object",
          "required": true
        },
        "preview_link": {
          "type": "string",
          "description": "link to preview an ad as it is shown on the website"
        },
        "title": {
          "type": "string",
          "description": "Ad title",
          "required": true
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "social": {
          "type": "boolean",
          "description": "Social"
        },
        "okved": {
          "type": "string",
          "description": "Okved"
        },
        "age_restriction": {
          "type": "integer",
          "description": "Age restriction"
        },
        "goal_type": {
          "type": "integer",
          "description": "Goal type"
        },
        "link_title": {
          "type": "string",
          "description": "Link title"
        },
        "link_button": {
          "type": "string",
          "description": "Link button"
        },
        "repeat_video": {
          "type": "integer",
          "description": "Repeat video"
        },
        "video_src_240": {
          "type": "string",
          "description": "Video source 240p"
        },
        "video_src_360": {
          "type": "string",
          "description": "Video source 360p"
        },
        "video_src_480": {
          "type": "string",
          "description": "Video source 480p"
        },
        "video_src_720": {
          "type": "string",
          "description": "Video source 720p"
        },
        "video_src_1080": {
          "type": "string",
          "description": "Video source 1080p"
        },
        "video_image_src": {
          "type": "string",
          "description": "Video image source"
        },
        "video_image_src_2x": {
          "type": "string",
          "description": "Video image source 2x"
        },
        "video_duration": {
          "type": "integer",
          "description": "Video duration"
        },
        "icon_src": {
          "type": "string",
          "description": "Icon source"
        },
        "icon_src_2x": {
          "type": "string",
          "description": "Icon source 2x"
        },
        "post": {
          "$ref": "objects.json#/definitions/ads_post"
        },
        "stories_data": {
          "$ref": "objects.json#/definitions/ads_stories"
        },
        "clips_list": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_clip_item"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_ad_status": {
      "type": "integer",
      "description": "Ad atatus",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign": {
      "type": "object",
      "properties": {
        "ads_count": {
          "type": "integer",
          "description": "Amount of active ads in campaign"
        },
        "all_limit": {
          "type": "string",
          "description": "Campaign's total limit, rubles",
          "required": true
        },
        "create_time": {
          "type": "integer",
          "description": "Campaign create time, as Unixtime"
        },
        "goal_type": {
          "type": "integer",
          "description": "Campaign goal type"
        },
        "user_goal_type": {
          "type": "integer",
          "description": "Campaign user goal type"
        },
        "is_cbo_enabled": {
          "type": "boolean",
          "description": "Shows if Campaign Budget Optimization is on"
        },
        "day_limit": {
          "type": "string",
          "description": "Campaign's day limit, rubles",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Campaign title",
          "required": true
        },
        "start_time": {
          "type": "integer",
          "description": "Campaign start time, as Unixtime",
          "required": true
        },
        "status": {
          "$ref": "objects.json#/definitions/ads_campaign_status",
          "required": true
        },
        "stop_time": {
          "type": "integer",
          "description": "Campaign stop time, as Unixtime",
          "required": true
        },
        "type": {
          "$ref": "objects.json#/definitions/ads_campaign_type",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Campaign update time, as Unixtime"
        },
        "views_limit": {
          "type": "integer",
          "description": "Limit of views per user per campaign"
        }
      },
      "additionalProperties": false
    },
    "ads_campaign_status": {
      "type": "integer",
      "description": "Campaign status",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign_type": {
      "type": "string",
      "description": "Campaign type",
      "enum": [
        "normal",
        "vk_apps_managed",
        "mobile_apps",
        "promoted_posts",
        "adaptive_ads",
        "stories"
      ]
    },
    "ads_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_category"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_client": {
      "type": "object",
      "properties": {
        "all_limit": {
          "type": "string",
          "description": "Client's total limit, rubles",
          "required": true
        },
        "day_limit": {
          "type": "string",
          "description": "Client's day limit, rubles",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Client ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "required": true
        },
        "ord_data": {
          "description": "Ord data",
          "$ref": "objects.json#/definitions/ads_ord_data",
          "required": false
        }
      },
      "additionalProperties": false
    },
    "ads_clip_item": {
      "type": "object",
      "properties": {
        "video_id": {
          "type": "integer",
          "description": "Video id"
        },
        "preview_url": {
          "type": "string",
          "description": "Preview url"
        },
        "link": {
          "$ref": "objects.json#/definitions/ads_clip_item_link"
        }
      },
      "additionalProperties": false
    },
    "ads_clip_item_link": {
      "type": "object",
      "description": "Link",
      "properties": {
        "text": {
          "type": "string",
          "description": "Text"
        },
        "key": {
          "type": "string",
          "description": "Key"
        },
        "url": {
          "type": "string",
          "description": "Url"
        }
      },
      "additionalProperties": false
    },
    "ads_create_ad_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Ad ID",
          "required": true
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Stealth Post ID"
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_create_campaign_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Campaign ID",
          "required": true
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_create_clients_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Client ID",
          "required": true
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_criteria": {
      "type": "object",
      "properties": {
        "age_from": {
          "type": "string",
          "description": "Age from"
        },
        "age_to": {
          "type": "string",
          "description": "Age to"
        },
        "apps": {
          "type": "string",
          "description": "Apps IDs"
        },
        "apps_not": {
          "type": "string",
          "description": "Apps IDs to except"
        },
        "birthday": {
          "type": "string",
          "description": "Days to birthday"
        },
        "cities": {
          "type": "string",
          "description": "Cities IDs"
        },
        "cities_not": {
          "type": "string",
          "description": "Cities IDs to except"
        },
        "country": {
          "type": "string",
          "description": "Country ID"
        },
        "districts": {
          "type": "string",
          "description": "Districts IDs"
        },
        "groups": {
          "type": "string",
          "description": "Communities IDs"
        },
        "interest_categories": {
          "type": "string",
          "description": "Interests categories IDs"
        },
        "interests": {
          "type": "string",
          "description": "Interests"
        },
        "paying": {
          "type": "string",
          "description": "Information whether the user has proceeded VK payments before"
        },
        "positions": {
          "type": "string",
          "description": "Positions IDs"
        },
        "religions": {
          "type": "string",
          "description": "Religions IDs"
        },
        "retargeting_groups": {
          "type": "string",
          "description": "Retargeting groups ids"
        },
        "retargeting_groups_not": {
          "type": "string",
          "description": "Retargeting groups NOT ids"
        },
        "school_from": {
          "type": "string",
          "description": "School graduation year from"
        },
        "school_to": {
          "type": "string",
          "description": "School graduation year to"
        },
        "schools": {
          "type": "string",
          "description": "Schools IDs"
        },
        "sex": {
          "$ref": "objects.json#/definitions/ads_criteria_sex"
        },
        "stations": {
          "type": "string",
          "description": "Stations IDs"
        },
        "statuses": {
          "type": "string",
          "description": "Relationship statuses"
        },
        "streets": {
          "type": "string",
          "description": "Streets IDs"
        },
        "travellers": {
          "type": "string",
          "description": "Travellers"
        },
        "ab_test": {
          "type": "string",
          "description": "AB test"
        },
        "uni_from": {
          "type": "string",
          "description": "University graduation year from"
        },
        "uni_to": {
          "type": "string",
          "description": "University graduation year to"
        },
        "user_browsers": {
          "type": "string",
          "description": "Browsers"
        },
        "user_devices": {
          "type": "string",
          "description": "Devices"
        },
        "user_os": {
          "type": "string",
          "description": "Operating systems"
        },
        "suggested_criteria": {
          "type": "string",
          "description": "Suggested criteria"
        },
        "groups_not": {
          "type": "string",
          "description": "Group not"
        },
        "price_list_audience_type": {
          "type": "string",
          "description": "Price list audience type"
        },
        "count": {
          "type": "string",
          "description": "Count"
        },
        "groups_active_formula": {
          "type": "string",
          "description": "Group active formula"
        },
        "interest_categories_formula": {
          "type": "string",
          "description": "Interest categories formula"
        },
        "groups_formula": {
          "type": "string",
          "description": "Groups formula"
        },
        "groups_active": {
          "type": "string",
          "description": "Groups active"
        },
        "group_types": {
          "type": "string",
          "description": "Group types"
        },
        "key_phrases": {
          "type": "string",
          "description": "Key phrases"
        },
        "key_phrases_days": {
          "type": "string",
          "description": "Key phrases days"
        },
        "geo_near": {
          "type": "string",
          "description": "Geo near"
        },
        "geo_point_type": {
          "type": "string",
          "description": "Geo point type"
        },
        "price_list_id": {
          "type": "string",
          "description": "Price list id"
        },
        "groups_recommended": {
          "type": "string",
          "description": "Groups recommended ids"
        },
        "groups_active_recommended": {
          "type": "string",
          "description": "Groups active recommended ids"
        },
        "music_artists_formula": {
          "type": "string",
          "description": "Music artists formula"
        },
        "price_list_retargeting_formula": {
          "type": "string",
          "description": "Price list retargeting formula"
        },
        "tags": {
          "type": "string",
          "description": "Tags"
        },
        "browsers": {
          "type": "string",
          "description": "Browsers"
        },
        "mobile_os_min_version": {
          "type": "string",
          "description": "Mobile os min version"
        },
        "mobile_apps_events_formula": {
          "type": "string",
          "description": "Mobile apps events formula"
        },
        "mobile_os_max_version": {
          "type": "string",
          "description": "Mobile os max version"
        },
        "operators": {
          "type": "string",
          "description": "operators"
        },
        "wifi_only": {
          "type": "string",
          "description": "wifi_only"
        },
        "mobile_manufacturers": {
          "type": "string",
          "description": "mobile_manufacturers"
        }
      },
      "additionalProperties": false
    },
    "ads_criteria_sex": {
      "type": "string",
      "description": "Sex",
      "enum": [
        "0",
        "1",
        "2"
      ],
      "enumNames": [
        "any",
        "male",
        "female"
      ]
    },
    "ads_demo_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_demostats_format"
          }
        },
        "type": {
          "$ref": "objects.json#/definitions/ads_object_type"
        }
      },
      "additionalProperties": false
    },
    "ads_demographic_stats_period_item_base": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        }
      },
      "additionalProperties": false
    },
    "ads_demostats_format": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_stats_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_stats_cities"
          }
        },
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "day_from": {
          "type": "string"
        },
        "day_to": {
          "type": "string"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_stats_sex"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_events_retargeting_group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_flood_stats": {
      "type": "object",
      "properties": {
        "left": {
          "type": "integer",
          "description": "Requests left",
          "required": true
        },
        "refresh": {
          "type": "integer",
          "description": "Time to refresh in seconds",
          "required": true
        },
        "stats_by_user": {
          "type": "array",
          "description": "Used requests per user",
          "items": {
            "$ref": "objects.json#/definitions/ads_flood_stats_by_user_item"
          },
          "required": false
        }
      },
      "additionalProperties": false
    },
    "ads_flood_stats_by_user_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "required": true,
          "entity": "owner",
          "format": "int64"
        },
        "requests_count": {
          "type": "integer",
          "description": "Used requests",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_link_status": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Reject reason"
        },
        "redirect_url": {
          "type": "string",
          "format": "uri",
          "description": "URL"
        },
        "status": {
          "type": "string",
          "description": "Link status",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_lookalike_request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Lookalike request ID",
          "minimum": 1,
          "required": true
        },
        "create_time": {
          "type": "integer",
          "description": "Lookalike request create time, as Unixtime",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Lookalike request update time, as Unixtime",
          "required": true
        },
        "scheduled_delete_time": {
          "type": "integer",
          "description": "Time by which lookalike request would be deleted, as Unixtime"
        },
        "status": {
          "type": "string",
          "enum": [
            "search_in_progress",
            "search_failed",
            "search_done",
            "save_in_progress",
            "save_failed",
            "save_done"
          ],
          "description": "Lookalike request status",
          "required": true
        },
        "source_type": {
          "type": "string",
          "enum": [
            "retargeting_group"
          ],
          "description": "Lookalike request source type",
          "required": true
        },
        "source_retargeting_group_id": {
          "type": "integer",
          "minimum": 1,
          "description": "Retargeting group id, which was used as lookalike seed"
        },
        "source_name": {
          "type": "string",
          "description": "Lookalike request seed name (retargeting group name)"
        },
        "audience_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Lookalike request seed audience size"
        },
        "save_audience_levels": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_lookalike_request_save_audience_level"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_lookalike_request_save_audience_level": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "minimum": 1,
          "description": "Save audience level id, which is used in save audience queries"
        },
        "audience_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Saved audience audience size for according level"
        }
      },
      "additionalProperties": false
    },
    "ads_mobile_stat_item": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "ads_musician": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Targeting music artist ID",
          "minimum": 1,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Music artist name",
          "required": true
        },
        "avatar": {
          "type": "string",
          "description": "Music artist photo"
        }
      },
      "additionalProperties": false
    },
    "ads_object_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "ad",
        "campaign",
        "client",
        "office"
      ]
    },
    "ads_ord_client_type": {
      "type": "string",
      "required": true,
      "enum": [
        "person",
        "individual",
        "legal",
        "foreign",
        "unknown"
      ]
    },
    "ads_ord_data": {
      "type": "object",
      "properties": {
        "client_type": {
          "required": true,
          "$ref": "objects.json#/definitions/ads_ord_client_type"
        },
        "client_name": {
          "type": "string",
          "required": true
        },
        "inn": {
          "type": "string",
          "required": false
        },
        "phone": {
          "type": "string",
          "required": true
        },
        "subagent": {
          "required": false,
          "$ref": "objects.json#/definitions/ads_ord_subagent"
        },
        "contract_number": {
          "type": "string",
          "required": true
        },
        "contract_date": {
          "type": "string",
          "required": true
        },
        "contract_type": {
          "type": "string",
          "required": true
        },
        "contract_object": {
          "type": "string",
          "required": true
        },
        "with_vat": {
          "type": "boolean",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_ord_subagent": {
      "type": "object",
      "properties": {
        "type": {
          "required": true,
          "$ref": "objects.json#/definitions/ads_ord_client_type"
        },
        "name": {
          "type": "string",
          "required": true
        },
        "inn": {
          "type": "string",
          "required": false
        },
        "phone": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Post id"
        },
        "from_id": {
          "type": "integer",
          "description": "From id"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner id",
          "entity": "owner",
          "format": "int64"
        },
        "date": {
          "type": "integer",
          "description": "Date"
        },
        "edited": {
          "type": "integer",
          "description": "Edited date"
        },
        "is_pinned": {
          "type": "integer",
          "description": "Is pinned"
        },
        "marked_as_ads": {
          "type": "integer",
          "description": "Marked as ads"
        },
        "ads_easy_promote": {
          "$ref": "objects.json#/definitions/ads_post_easy_promote"
        },
        "donut": {
          "$ref": "objects.json#/definitions/ads_post_donut"
        },
        "comments": {
          "$ref": "objects.json#/definitions/ads_post_comments"
        },
        "short_text_rate": {
          "type": "number",
          "description": "Short text rate"
        },
        "type": {
          "type": "string",
          "description": "Type"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Is favorite"
        },
        "likes": {
          "$ref": "objects.json#/definitions/ads_post_likes"
        },
        "views": {
          "$ref": "objects.json#/definitions/ads_post_views"
        },
        "post_type": {
          "type": "string",
          "description": "Post type"
        },
        "reposts": {
          "$ref": "objects.json#/definitions/ads_post_reposts"
        },
        "text": {
          "type": "string",
          "description": "Text"
        },
        "is_promoted_post_stealth": {
          "type": "boolean",
          "description": "Is promoted post stealth"
        },
        "hash": {
          "type": "string",
          "description": "Hash"
        },
        "owner": {
          "$ref": "objects.json#/definitions/ads_post_owner"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wallpost_attachment"
          }
        },
        "created_by": {
          "type": "integer",
          "description": "Created by"
        },
        "carousel_offset": {
          "type": "integer",
          "description": "Carousel offset"
        },
        "can_edit": {
          "type": "integer",
          "description": "Can edit"
        },
        "can_delete": {
          "type": "integer",
          "description": "Can delete"
        },
        "can_pin": {
          "type": "integer",
          "description": "Can pin"
        }
      },
      "additionalProperties": false
    },
    "ads_post_comments": {
      "type": "object",
      "description": "Comments",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count"
        }
      },
      "additionalProperties": false
    },
    "ads_post_donut": {
      "type": "object",
      "description": "Donut",
      "properties": {
        "is_donut": {
          "type": "boolean",
          "description": "Is donut"
        }
      },
      "additionalProperties": false
    },
    "ads_post_easy_promote": {
      "type": "object",
      "description": "Ads easy promote",
      "properties": {
        "type": {
          "type": "integer",
          "description": "Type"
        },
        "text": {
          "type": "string",
          "description": "Text"
        },
        "label_text": {
          "type": "string",
          "description": "Label text"
        },
        "button_text": {
          "type": "string",
          "description": "Button text"
        },
        "is_ad_not_easy": {
          "type": "boolean",
          "description": "Is ad not easy"
        },
        "ad_id": {
          "type": "integer",
          "description": "Ad id"
        },
        "top_union_id": {
          "type": "integer",
          "description": "Top union id"
        }
      },
      "additionalProperties": false
    },
    "ads_post_likes": {
      "type": "object",
      "description": "Likes",
      "properties": {
        "can_like": {
          "type": "integer",
          "description": "Can like"
        },
        "count": {
          "type": "integer",
          "description": "Count"
        },
        "user_likes": {
          "type": "integer",
          "description": "User likes"
        }
      },
      "additionalProperties": false
    },
    "ads_post_owner": {
      "type": "object",
      "description": "Owner",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Owner id"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "photo": {
          "type": "string",
          "description": "Photo url"
        },
        "url": {
          "type": "string",
          "description": "Profile url"
        }
      },
      "additionalProperties": false
    },
    "ads_post_reposts": {
      "type": "object",
      "description": "Reposts",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count"
        },
        "wall_count": {
          "type": "integer",
          "description": "Wall count"
        },
        "mail_count": {
          "type": "integer",
          "description": "Mail count"
        }
      },
      "additionalProperties": false
    },
    "ads_post_views": {
      "type": "object",
      "description": "Views",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count"
        }
      },
      "additionalProperties": false
    },
    "ads_promoted_post_reach": {
      "type": "object",
      "properties": {
        "hide": {
          "type": "integer",
          "description": "Hides amount",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Object ID from 'ids' parameter",
          "required": true
        },
        "join_group": {
          "type": "integer",
          "description": "Community joins",
          "required": true
        },
        "links": {
          "type": "integer",
          "description": "Link clicks",
          "required": true
        },
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach",
          "required": true
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach",
          "required": true
        },
        "report": {
          "type": "integer",
          "description": "Reports amount",
          "required": true
        },
        "to_group": {
          "type": "integer",
          "description": "Community clicks",
          "required": true
        },
        "unsubscribe": {
          "type": "integer",
          "description": "'Unsubscribe' events amount",
          "required": true
        },
        "video_views_100p": {
          "type": "integer",
          "description": "Video views for 100 percent"
        },
        "video_views_25p": {
          "type": "integer",
          "description": "Video views for 25 percent"
        },
        "video_views_3s": {
          "type": "integer",
          "description": "Video views for 3 seconds"
        },
        "video_views_10s": {
          "type": "integer",
          "description": "Video views for 10 seconds"
        },
        "video_views_50p": {
          "type": "integer",
          "description": "Video views for 50 percent"
        },
        "video_views_75p": {
          "type": "integer",
          "description": "Video views for 75 percent"
        },
        "video_views_start": {
          "type": "integer",
          "description": "Video starts"
        },
        "pretty_cards_clicks": {
          "type": "integer",
          "description": "Pretty cards clicks"
        }
      },
      "additionalProperties": false
    },
    "ads_reject_reason": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment text"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_rules"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_rules": {
      "type": "object",
      "properties": {
        "help_url": {
          "$ref": "objects.json#/definitions/ads_rules_help_url",
          "description": "Help url"
        },
        "help_label": {
          "type": "string",
          "description": "Label"
        },
        "content_html": {
          "type": "string",
          "description": "Content Html"
        },
        "help_chat": {
          "type": "boolean",
          "description": "Help chat"
        }
      },
      "additionalProperties": false
    },
    "ads_rules_help_url": {
      "type": "object",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "ads_statistic_click_action": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "load",
            "impression",
            "click_deeplink",
            "click",
            "click_post_owner",
            "click_post_link",
            "click_pretty_card",
            "like_post",
            "share_post",
            "video_start",
            "video_pause",
            "video_resume",
            "video_play_3s",
            "video_play_10s",
            "video_play_25",
            "video_play_50",
            "video_play_75",
            "video_play_95",
            "video_play_100",
            "video_volume_on",
            "video_volume_off",
            "video_fullscreen_on",
            "video_fullscreen_off",
            "hide"
          ]
        },
        "url": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ads_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_stats_format"
          }
        },
        "type": {
          "$ref": "objects.json#/definitions/ads_object_type"
        },
        "views_times": {
          "$ref": "objects.json#/definitions/ads_stats_views_times"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_age": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "value": {
              "type": "string",
              "description": "Age interval"
            }
          }
        },
        {
          "$ref": "objects.json#/definitions/ads_demographic_stats_period_item_base"
        }
      ],
      "additionalProperties": false
    },
    "ads_stats_cities": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "City name"
            },
            "value": {
              "type": [
                "integer",
                "string"
              ],
              "description": "City ID"
            }
          }
        },
        {
          "$ref": "objects.json#/definitions/ads_demographic_stats_period_item_base"
        }
      ],
      "additionalProperties": false
    },
    "ads_stats_format": {
      "type": "object",
      "properties": {
        "clicks": {
          "type": "integer",
          "description": "Clicks number"
        },
        "link_external_clicks": {
          "type": "integer",
          "description": "External clicks number"
        },
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "join_rate": {
          "type": "integer",
          "description": "Events number"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "year": {
          "type": "integer",
          "description": "Year as YYYY"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "reach": {
          "type": "integer",
          "description": "Reach "
        },
        "spent": {
          "type": "string",
          "description": "Spent funds"
        },
        "video_plays_unique_started": {
          "type": "integer",
          "description": "Video plays unique started count"
        },
        "video_plays_unique_3_seconds": {
          "type": "integer",
          "description": "Video plays unique 3 seconds count"
        },
        "video_plays_unique_10_seconds": {
          "type": "integer",
          "description": "Video plays unique 10 seconds count"
        },
        "video_plays_unique_25_percents": {
          "type": "integer",
          "description": "Video plays unique 25 percents count"
        },
        "video_plays_unique_50_percents": {
          "type": "integer",
          "description": "Video plays unique 50 percents count"
        },
        "video_plays_unique_75_percents": {
          "type": "integer",
          "description": "Video plays unique 75 percents count"
        },
        "video_plays_unique_100_percents": {
          "type": "integer",
          "description": "Video plays unique 100 percents count"
        },
        "effective_cost_per_click": {
          "type": "string",
          "description": "Effective cost per click"
        },
        "effective_cost_per_mille": {
          "type": "string",
          "description": "Effective cost per mille"
        },
        "effective_cpf": {
          "type": "string",
          "description": "Effective cpf"
        },
        "effective_cost_per_message": {
          "type": "string",
          "description": "Effective cost per message"
        },
        "message_sends": {
          "type": "integer",
          "description": "Message sends count"
        },
        "message_sends_by_any_user": {
          "type": "integer",
          "description": "Message sends by anu user"
        },
        "conversions_external": {
          "type": "integer",
          "description": "Conversions external"
        },
        "conversion_count": {
          "type": "integer",
          "description": "Conversions count"
        },
        "conversion_cr": {
          "type": "string",
          "description": "Conversions CR"
        },
        "day_from": {
          "type": "string",
          "description": "Day from"
        },
        "day_to": {
          "type": "string",
          "description": "Day to"
        },
        "ctr": {
          "type": "string",
          "description": "Ctr"
        },
        "uniq_views_count": {
          "type": "integer",
          "description": "Unique views count"
        },
        "mobile_app_stat": {
          "type": "array",
          "description": "Mobile app stat",
          "items": {
            "$ref": "objects.json#/definitions/ads_mobile_stat_item"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_stats_sex": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "value": {
              "$ref": "objects.json#/definitions/ads_stats_sex_value"
            }
          }
        },
        {
          "$ref": "objects.json#/definitions/ads_demographic_stats_period_item_base"
        }
      ],
      "additionalProperties": false
    },
    "ads_stats_sex_age": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "value": {
              "type": "string",
              "description": "Sex and age interval"
            }
          }
        },
        {
          "$ref": "objects.json#/definitions/ads_demographic_stats_period_item_base"
        }
      ],
      "additionalProperties": false
    },
    "ads_stats_sex_value": {
      "type": "string",
      "description": "Sex",
      "enum": [
        "f",
        "m"
      ],
      "enumNames": [
        "female",
        "male"
      ]
    },
    "ads_stats_views_times": {
      "type": "object",
      "properties": {
        "views_ads_times_1": {
          "type": "integer"
        },
        "views_ads_times_2": {
          "type": "integer"
        },
        "views_ads_times_3": {
          "type": "integer"
        },
        "views_ads_times_4": {
          "type": "integer"
        },
        "views_ads_times_5": {
          "type": "string"
        },
        "views_ads_times_6": {
          "type": "integer"
        },
        "views_ads_times_7": {
          "type": "integer"
        },
        "views_ads_times_8": {
          "type": "integer"
        },
        "views_ads_times_9": {
          "type": "integer"
        },
        "views_ads_times_10": {
          "type": "integer"
        },
        "views_ads_times_11_plus": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ads_stories": {
      "type": "object",
      "properties": {
        "stories": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_story_item"
          }
        },
        "owner": {
          "$ref": "objects.json#/definitions/ads_stories_owner"
        },
        "stories_disclaimers_text": {
          "type": "string",
          "description": "Stories disclaimers text"
        }
      },
      "additionalProperties": false
    },
    "ads_stories_owner": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Owner id"
        },
        "href": {
          "type": "string",
          "description": "Href"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "photo": {
          "type": "string",
          "description": "Photo"
        },
        "verify": {
          "type": "string",
          "description": "Verify"
        },
        "gender": {
          "type": "string",
          "description": "Gender"
        },
        "name_get": {
          "type": "string",
          "description": "Name get"
        },
        "firstName": {
          "type": "string",
          "description": "First name"
        },
        "first_name_gen": {
          "type": "string",
          "description": "First name gen"
        },
        "first_name_ins": {
          "type": "string",
          "description": "First name ins"
        },
        "can_follow": {
          "type": "boolean",
          "description": "Can follow"
        }
      },
      "additionalProperties": false
    },
    "ads_story_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Story id"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner id",
          "entity": "owner",
          "format": "int64"
        },
        "raw_id": {
          "type": "string",
          "description": "Story raw id"
        },
        "date": {
          "type": "string",
          "description": "Date"
        },
        "time": {
          "type": "integer",
          "description": "Time"
        },
        "type": {
          "type": "string",
          "description": "Type"
        },
        "unread": {
          "type": "boolean",
          "description": "Is unread"
        },
        "canLike": {
          "type": "boolean",
          "description": "Can like"
        },
        "can_comment": {
          "type": "boolean",
          "description": "Can comment"
        },
        "can_share": {
          "type": "boolean",
          "description": "Can share"
        },
        "can_remove": {
          "type": "boolean",
          "description": "Can remove"
        },
        "can_manage": {
          "type": "boolean",
          "description": "Can manage"
        },
        "can_ask": {
          "type": "boolean",
          "description": "Can ask"
        },
        "can_ask_anonymous": {
          "type": "boolean",
          "description": "Can ask anonymous"
        },
        "isProfileQuestion": {
          "type": "boolean",
          "description": "Is profile question"
        },
        "stats": {
          "$ref": "objects.json#/definitions/ads_story_item_stats"
        },
        "link": {
          "$ref": "objects.json#/definitions/ads_story_item_link"
        },
        "photo_url": {
          "type": "string",
          "description": "Photo url"
        },
        "preview_url": {
          "type": "string",
          "description": "Preview url"
        },
        "track_code": {
          "type": "string",
          "description": "Track code"
        },
        "isPartOfNarrative": {
          "type": "boolean",
          "description": "Is part of narrative"
        },
        "isAds": {
          "type": "boolean",
          "description": "Is ads"
        },
        "video_url": {
          "type": "string",
          "description": "Video url"
        },
        "first_frame": {
          "type": "string",
          "description": "First frame"
        },
        "small_preview": {
          "type": "string",
          "description": "Small preview"
        },
        "isLiked": {
          "type": "boolean",
          "description": "Is liked"
        }
      },
      "additionalProperties": false
    },
    "ads_story_item_link": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key"
        },
        "text": {
          "type": "string",
          "description": "Text"
        },
        "url": {
          "type": "string",
          "description": "Url"
        },
        "raw_url": {
          "type": "string",
          "description": "Raw url"
        }
      },
      "additionalProperties": false
    },
    "ads_story_item_stats": {
      "type": "object",
      "properties": {
        "follow": {
          "$ref": "objects.json#/definitions/ads_story_item_stats_follow"
        },
        "url_view": {
          "$ref": "objects.json#/definitions/ads_story_item_stats_url_view"
        }
      },
      "additionalProperties": false
    },
    "ads_story_item_stats_follow": {
      "type": "object",
      "description": "Follow event stats",
      "properties": {
        "event_type": {
          "type": "string",
          "description": "Event type"
        },
        "rhash": {
          "type": "string",
          "description": "Event hash"
        }
      },
      "additionalProperties": false
    },
    "ads_story_item_stats_url_view": {
      "type": "object",
      "description": "Url view event stats",
      "properties": {
        "event_type": {
          "type": "string",
          "description": "Event type"
        },
        "rhash": {
          "type": "string",
          "description": "Event hash"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_settings": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "Ad ID"
            },
            "campaign_id": {
              "type": "string",
              "description": "Campaign ID"
            }
          }
        },
        {
          "$ref": "objects.json#/definitions/ads_criteria"
        }
      ],
      "additionalProperties": false
    },
    "ads_targ_stats": {
      "type": "object",
      "properties": {
        "audience_count": {
          "type": "integer",
          "description": "Audience",
          "required": true
        },
        "recommended_cpc": {
          "type": "string",
          "description": "Recommended CPC value for 50% reach (old format)"
        },
        "recommended_cpm": {
          "type": "string",
          "description": "Recommended CPM value for 50% reach (old format)"
        },
        "recommended_cpc_50": {
          "type": "string",
          "description": "Recommended CPC value for 50% reach"
        },
        "recommended_cpm_50": {
          "type": "string",
          "description": "Recommended CPM value for 50% reach"
        },
        "recommended_cpc_70": {
          "type": "string",
          "description": "Recommended CPC value for 70% reach"
        },
        "recommended_cpm_70": {
          "type": "string",
          "description": "Recommended CPM value for 70% reach"
        },
        "recommended_cpc_90": {
          "type": "string",
          "description": "Recommended CPC value for 90% reach"
        },
        "recommended_cpm_90": {
          "type": "string",
          "description": "Recommended CPM value for 90% reach"
        },
        "total_alive_audience": {
          "type": "integer",
          "description": "Total alive audience"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "type": {
          "type": "string",
          "description": "Object type"
        },
        "parent": {
          "type": "string",
          "description": "Parent"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_cities": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "parent": {
          "type": "string",
          "description": "Parent object"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_regions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "type": {
          "type": "string",
          "description": "Object type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string",
          "description": "Full school title"
        },
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School title"
        },
        "parent": {
          "type": "string",
          "description": "City name"
        },
        "type": {
          "$ref": "objects.json#/definitions/ads_targ_suggestions_schools_type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools_type": {
      "type": "string",
      "description": "School type",
      "enum": [
        "school",
        "university",
        "faculty",
        "chair"
      ]
    },
    "ads_target_group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Group ID"
        },
        "name": {
          "type": "string",
          "description": "Group name"
        },
        "is_audience": {
          "type": "boolean",
          "description": "Is audience"
        },
        "is_shared": {
          "type": "boolean",
          "description": "Is shared"
        },
        "file_source": {
          "type": "boolean",
          "description": "File source"
        },
        "api_source": {
          "type": "boolean",
          "description": "API source"
        },
        "lookalike_source": {
          "type": "boolean",
          "description": "File source"
        },
        "audience_count": {
          "type": "integer",
          "description": "Audience"
        },
        "domain": {
          "type": "string",
          "description": "Site domain",
          "default": ""
        },
        "lifetime": {
          "type": "integer",
          "description": "Number of days for user to be in group"
        },
        "pixel": {
          "type": "string",
          "description": "Pixel code"
        },
        "target_pixel_id": {
          "type": "integer",
          "description": "Target Pixel id"
        },
        "target_pixel_rules": {
          "type": "array",
          "description": "Target Pixel rules",
          "items": {
            "$ref": "objects.json#/definitions/ads_target_group_target_pixel_rule"
          }
        },
        "last_updated": {
          "type": "integer",
          "description": "Last updated"
        }
      },
      "additionalProperties": false
    },
    "ads_target_group_target_pixel_rule": {
      "type": "object",
      "properties": {
        "url_full_match": {
          "type": "string"
        },
        "event_full_match": {
          "type": "string"
        },
        "url_substrings_match": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "event_substrings_match": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "url_regex_match": {
          "type": "string"
        },
        "event_regex_match": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ads_target_pixel_info": {
      "type": "object",
      "properties": {
        "target_pixel_id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "domain": {
          "type": "string",
          "required": true
        },
        "category_id": {
          "type": "integer",
          "required": true
        },
        "last_updated": {
          "type": "integer",
          "required": true
        },
        "pixel": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_updateOfficeUsers_result": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "is_success": {
          "type": "boolean",
          "default": true,
          "required": true
        },
        "error": {
          "$ref": "objects.json#/definitions/base_error"
        }
      },
      "additionalProperties": false
    },
    "ads_update_ads_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Ad ID",
          "required": true
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_update_clients_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Client ID",
          "required": true
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_user_specification": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "role": {
          "$ref": "objects.json#/definitions/ads_access_role_public",
          "required": true
        },
        "grant_access_to_all_clients": {
          "type": "boolean",
          "default": false
        },
        "client_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0
          }
        },
        "view_budget": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ads_user_specification_cutted": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "role": {
          "$ref": "objects.json#/definitions/ads_access_role_public",
          "required": true
        },
        "client_id": {
          "type": "integer",
          "minimum": 0
        },
        "view_budget": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ads_users": {
      "type": "object",
      "properties": {
        "accesses": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/ads_accesses"
          },
          "required": true
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdCategories_response_categories_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdUnits_response_ad_units_ad_unit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "site_id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "adsweb_getFraudHistory_response_entries_entry": {
      "type": "object",
      "properties": {
        "site_id": {
          "type": "integer",
          "required": true
        },
        "day": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getSites_response_sites_site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "status_user": {
          "type": "string"
        },
        "status_moder": {
          "type": "string"
        },
        "domains": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "adsweb_getStatistics_response_items_item": {
      "type": "object",
      "properties": {
        "site_id": {
          "type": "integer"
        },
        "ad_unit_id": {
          "type": "integer"
        },
        "overall_count": {
          "type": "integer"
        },
        "months_count": {
          "type": "integer"
        },
        "month_min": {
          "type": "string"
        },
        "month_max": {
          "type": "string"
        },
        "days_count": {
          "type": "integer"
        },
        "day_min": {
          "type": "string"
        },
        "day_max": {
          "type": "string"
        },
        "hours_count": {
          "type": "integer"
        },
        "hour_min": {
          "type": "string"
        },
        "hour_max": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "appWidgets_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Image ID",
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_photos": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/appWidgets_photo"
          }
        }
      },
      "additionalProperties": false
    },
    "apps_app": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/apps_app_min"
        },
        {
          "properties": {
            "author_url": {
              "type": "string",
              "format": "uri",
              "description": "Application author's URL"
            },
            "banner_1120": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app banner with 1120 px in width"
            },
            "banner_560": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app banner with 560 px in width"
            },
            "icon_16": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app icon with 16 px in width"
            },
            "is_new": {
              "description": "Is new flag",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "push_enabled": {
              "description": "Is push enabled",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "friends": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0
              }
            },
            "catalog_position": {
              "type": "integer",
              "description": "Catalog position"
            },
            "description": {
              "type": "string",
              "description": "Application description"
            },
            "genre": {
              "type": "string",
              "description": "Genre name"
            },
            "genre_id": {
              "type": "integer",
              "description": "Genre ID"
            },
            "international": {
              "type": "boolean",
              "description": "Information whether the application is multilanguage"
            },
            "is_in_catalog": {
              "type": "integer",
              "description": "Information whether application is in mobile catalog"
            },
            "leaderboard_type": {
              "$ref": "objects.json#/definitions/apps_app_leaderboard_type"
            },
            "members_count": {
              "type": "integer",
              "description": "Members number"
            },
            "platform_id": {
              "type": "string",
              "description": "Application ID in store"
            },
            "published_date": {
              "type": "integer",
              "description": "Date when the application has been published in Unixtime"
            },
            "screen_name": {
              "type": "string",
              "description": "Screen name"
            },
            "section": {
              "type": "string",
              "description": "Application section name"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "apps_app_fields": {
      "type": "string",
      "description": "App fields available for response",
      "enum": [
        "author_group",
        "author_id",
        "author_url",
        "banner_1120",
        "banner_560",
        "banner_186",
        "banner_896",
        "icon_16",
        "icon_25",
        "icon_50",
        "icon_100",
        "icon_200",
        "icon_128",
        "icon_256",
        "is_new",
        "new",
        "is_html5_app",
        "push_enabled",
        "catalog_banner",
        "friends",
        "catalog_position",
        "description",
        "genre",
        "genre_id",
        "international",
        "is_in_catalog",
        "installed",
        "leaderboard_type",
        "members_count",
        "platform_id",
        "published_date",
        "screen_name",
        "section",
        "type",
        "id",
        "title",
        "author_owner_id",
        "is_installed",
        "icon_139",
        "icon_150",
        "icon_278",
        "icon_576",
        "background_loader_color",
        "loader_icon",
        "icon_75",
        "open_in_external_browser",
        "ad_config",
        "screen_orientation"
      ]
    },
    "apps_app_leaderboard_type": {
      "type": "integer",
      "description": "Leaderboard type",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "not supported",
        "levels",
        "points"
      ]
    },
    "apps_app_min": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/apps_app_type",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Application ID",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Application title",
          "required": true
        },
        "author_owner_id": {
          "type": "integer",
          "description": "Application author's ID"
        },
        "is_installed": {
          "type": "boolean",
          "description": "Is application installed"
        },
        "icon_139": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 139 px in width"
        },
        "icon_150": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 150 px in width"
        },
        "icon_278": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 278 px in width"
        },
        "icon_576": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 576 px in width"
        },
        "background_loader_color": {
          "type": "string",
          "description": "Hex color code without hash sign"
        },
        "loader_icon": {
          "type": "string",
          "description": "SVG data"
        },
        "icon_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 75 px in width"
        },
        "screen_orientation": {
          "type": "integer",
          "description": "Screen orientation"
        }
      },
      "additionalProperties": false
    },
    "apps_app_type": {
      "type": "string",
      "description": "Application type",
      "enum": [
        "app",
        "game",
        "site",
        "standalone",
        "vk_app",
        "community_app",
        "html5_game",
        "mini_app"
      ]
    },
    "apps_catalog_list": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Total number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/apps_app"
          },
          "required": true
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/users_user_min"
          }
        }
      },
      "additionalProperties": false
    },
    "apps_leaderboard": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "points": {
          "type": "integer",
          "description": "Points number"
        },
        "score": {
          "type": "integer",
          "description": "Score number"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_scope": {
      "type": "object",
      "description": "Scope description",
      "properties": {
        "name": {
          "type": "string",
          "description": "Scope name",
          "enum": [
            "friends",
            "photos",
            "video",
            "pages",
            "status",
            "notes",
            "wall",
            "docs",
            "groups",
            "stats",
            "market",
            "stories",
            "app_widget",
            "messages",
            "manage",
            "notify",
            "audio",
            "support",
            "menu",
            "wallmenu",
            "ads",
            "offline",
            "notifications",
            "email",
            "adsweb",
            "leads",
            "group_messages",
            "exchange",
            "phone"
          ],
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Scope title"
        }
      },
      "additionalProperties": false
    },
    "apps_testing_group": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "entity": "owner",
            "format": "int64"
          },
          "required": true
        },
        "group_id": {
          "type": "integer",
          "minimum": 1,
          "maximum": 25,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "name": {
          "type": "string"
        },
        "webview": {
          "type": "string"
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "mobile",
              "web",
              "mvk"
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "asr_task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task ID in UUID format.",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "Status of the task.",
          "enum": [
            "processing",
            "finished",
            "internal_error",
            "transcoding_error",
            "recognition_error"
          ],
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Recognised text, if task is `finished`.",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "audio_audio": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the audio"
        },
        "artist": {
          "type": "string",
          "description": "Artist name",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Audio ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "entity": "owner",
          "type": "integer",
          "description": "Audio owner's ID",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Title",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of mp3 file"
        },
        "duration": {
          "type": "integer",
          "description": "Duration in seconds",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "minimum": 0
        },
        "performer": {
          "type": "string",
          "description": "Performer name"
        }
      },
      "additionalProperties": false
    },
    "base_bool_int": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "no",
        "yes"
      ]
    },
    "base_city": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "City title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_comments_info": {
      "type": "object",
      "properties": {
        "can_post": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "can_open": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_close": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_view": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can view the comments"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "groups_can_post": {
          "type": "boolean",
          "description": "Information whether groups can comment the post"
        },
        "donut": {
          "$ref": "objects.json#/definitions/wall_wallpost_comments_donut"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wall_comment"
          }
        }
      },
      "additionalProperties": false
    },
    "base_country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 1,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Country title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_crop_photo": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo",
          "required": true
        },
        "crop": {
          "$ref": "objects.json#/definitions/base_crop_photo_crop",
          "required": true
        },
        "rect": {
          "$ref": "objects.json#/definitions/base_crop_photo_rect",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_crop_photo_crop": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner",
          "required": true
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner",
          "required": true
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner",
          "required": true
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_crop_photo_rect": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner",
          "required": true
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner",
          "required": true
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner",
          "required": true
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_error": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "integer",
          "description": "Error code",
          "required": true
        },
        "error_subcode": {
          "type": "integer",
          "description": "Error subcode"
        },
        "error_msg": {
          "type": "string",
          "description": "Error message"
        },
        "error_text": {
          "type": "string",
          "description": "Localized error message"
        },
        "request_params": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_request_param"
          }
        }
      },
      "additionalProperties": false
    },
    "base_geo": {
      "type": "object",
      "properties": {
        "coordinates": {
          "$ref": "objects.json#/definitions/base_geo_coordinates"
        },
        "place": {
          "$ref": "objects.json#/definitions/base_place"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      },
      "additionalProperties": false
    },
    "base_geo_coordinates": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "required": true
        },
        "longitude": {
          "type": "number",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_gradient_point": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Hex color code without #",
          "required": true
        },
        "position": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Point position",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Image url",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Image width",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Image height",
          "minimum": 0,
          "required": true
        },
        "theme": {
          "type": "string",
          "enum": [
            "light",
            "dark"
          ]
        }
      },
      "additionalProperties": false
    },
    "base_lang": {
      "type": "string",
      "enum": [
        "ru",
        "ua",
        "be",
        "en",
        "es",
        "fi",
        "de",
        "it"
      ],
      "enumNames": [
        "russian",
        "ukrainian",
        "belarusian",
        "english",
        "spanish",
        "finnish",
        "german",
        "italian"
      ]
    },
    "base_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "user_likes": {
          "description": "Information whether current user likes the photo",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "base_likes_info": {
      "type": "object",
      "properties": {
        "can_like": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can like the post",
          "required": true
        },
        "can_publish": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can repost"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number",
          "required": true
        },
        "user_likes": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current uer has liked the post",
          "required": true
        },
        "repost_disabled": {
          "type": "boolean",
          "description": "Remove repost feature for post"
        }
      },
      "additionalProperties": false
    },
    "base_link": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/base_link_no_product"
        },
        {
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            },
            "product": {
              "$ref": "objects.json#/definitions/base_link_product"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "base_link_application": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "number",
          "description": "Application Id"
        },
        "store": {
          "$ref": "objects.json#/definitions/base_link_application_store"
        }
      },
      "additionalProperties": false
    },
    "base_link_application_store": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Store Id"
        },
        "name": {
          "type": "string",
          "description": "Store name"
        }
      },
      "additionalProperties": false
    },
    "base_link_button": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "objects.json#/definitions/base_link_button_action",
          "description": "Button action"
        },
        "title": {
          "type": "string",
          "description": "Button title"
        },
        "block_id": {
          "type": "string",
          "description": "Target block id"
        },
        "section_id": {
          "type": "string",
          "description": "Target section id"
        },
        "artist_id": {
          "type": "string",
          "description": "artist id"
        },
        "curator_id": {
          "type": "integer",
          "description": "curator id"
        },
        "album_id": {
          "type": "integer",
          "minimum": 1,
          "description": "Video album id"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner id",
          "entity": "owner",
          "format": "int64"
        },
        "icon": {
          "type": "string",
          "description": "Button icon name, e.g. 'phone' or 'gift'"
        },
        "style": {
          "$ref": "objects.json#/definitions/base_link_button_style"
        },
        "audio_id": {
          "type": "integer"
        },
        "hashtag": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/base_link_button_action_type",
          "required": true
        },
        "url": {
          "type": "string",
          "description": "Action URL"
        },
        "consume_reason": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action_type": {
      "type": "string",
      "description": "Action type",
      "enum": [
        "open_url",
        "market_clear_recent_queries",
        "close_web_app",
        "open_search_tab",
        "import_contacts",
        "add_friends",
        "onboarding"
      ]
    },
    "base_link_button_style": {
      "type": "string",
      "description": "Button style",
      "enum": [
        "primary",
        "secondary"
      ],
      "enumNames": [
        "primary",
        "secondary"
      ]
    },
    "base_link_no_product": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "objects.json#/definitions/base_link_application"
        },
        "button": {
          "$ref": "objects.json#/definitions/base_link_button"
        },
        "caption": {
          "type": "string",
          "description": "Link caption"
        },
        "description": {
          "type": "string",
          "description": "Link description"
        },
        "id": {
          "type": "string",
          "description": "Link ID"
        },
        "is_favorite": {
          "type": "boolean"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "preview_page": {
          "type": "string",
          "description": "String ID of the page with article preview"
        },
        "preview_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with article preview"
        },
        "rating": {
          "$ref": "objects.json#/definitions/base_link_rating"
        },
        "title": {
          "type": "string",
          "description": "Link title"
        },
        "url": {
          "type": "string",
          "description": "Link URL",
          "required": true
        },
        "target_object": {
          "$ref": "objects.json#/definitions/link_target_object"
        },
        "is_external": {
          "type": "boolean",
          "description": "Information whether the current link is external"
        },
        "video": {
          "$ref": "objects.json#/definitions/video_video_full",
          "description": "Video from link"
        }
      },
      "additionalProperties": false
    },
    "base_link_product": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "objects.json#/definitions/market_price",
          "required": true
        },
        "merchant": {
          "type": "string"
        },
        "category": {
          "$ref": "objects.json#/definitions/base_link_product_category"
        },
        "geo": {
          "$ref": "objects.json#/definitions/base_geo_coordinates"
        },
        "distance": {
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "status": {
          "$ref": "objects.json#/definitions/base_link_product_status"
        },
        "orders_count": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "product"
          ],
          "default": "product"
        }
      },
      "additionalProperties": false
    },
    "base_link_product_category": {
      "type": "object",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "objects.json#/definitions/market_market_category_nested"
        }
      ]
    },
    "base_link_product_status": {
      "type": "string",
      "description": "Status representation",
      "enum": [
        "active",
        "blocked",
        "sold",
        "deleted",
        "archived"
      ]
    },
    "base_link_rating": {
      "type": "object",
      "properties": {
        "reviews_count": {
          "type": "integer",
          "description": "Count of reviews"
        },
        "stars": {
          "type": "number",
          "description": "Count of stars"
        },
        "type": {
          "type": "string",
          "enum": [
            "rating"
          ],
          "default": "rating"
        }
      },
      "additionalProperties": false
    },
    "base_message_error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "Error code"
        },
        "description": {
          "type": "string",
          "description": "Error message"
        }
      },
      "additionalProperties": false
    },
    "base_name_case": {
      "type": "string",
      "default": "Nom",
      "enum": [
        "Nom",
        "Gen",
        "Dat",
        "Acc",
        "Ins",
        "Abl"
      ],
      "enumNames": [
        "nominative",
        "genitive",
        "dative",
        "accusative",
        "instrumental",
        "prepositional"
      ]
    },
    "base_object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Object title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_object_count": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Items count"
        }
      },
      "additionalProperties": false
    },
    "base_object_with_name": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Object name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_owner_cover": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Information whether cover is enabled",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "crop_params": {
          "$ref": "objects.json#/definitions/base_owner_cover_crop_params"
        },
        "original_image": {
          "$ref": "objects.json#/definitions/base_image"
        },
        "photo_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "base_owner_cover_crop_params": {
      "type": "object",
      "properties": {
        "x": {
          "type": "integer"
        },
        "y": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "base_place": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Place address"
        },
        "checkins": {
          "type": "integer",
          "description": "Checkins number"
        },
        "city": {
          "type": "string",
          "description": "City name"
        },
        "country": {
          "type": "string",
          "description": "Country name"
        },
        "created": {
          "type": "integer",
          "description": "Date of the place creation in Unixtime"
        },
        "icon": {
          "type": "string",
          "format": "uri",
          "description": "URL of the place's icon"
        },
        "id": {
          "type": "integer",
          "description": "Place ID"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "title": {
          "type": "string",
          "description": "Place title"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      },
      "additionalProperties": false
    },
    "base_property_exists": {
      "type": "integer",
      "enum": [
        1
      ],
      "enumNames": [
        "Property exists"
      ]
    },
    "base_reposts_info": {
      "type": "object",
      "description": "Count of views",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total reposts counter. Sum of wall and mail reposts counters",
          "required": true
        },
        "wall_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Wall reposts counter"
        },
        "mail_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Mail reposts counter"
        },
        "user_reposted": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user has reposted the post"
        }
      },
      "additionalProperties": false
    },
    "base_request_param": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Parameter name",
          "required": true
        },
        "value": {
          "type": "string",
          "description": "Parameter value",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_sex": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "unknown",
        "female",
        "male"
      ]
    },
    "base_sticker": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/base_sticker_old",
          "description": "Deprecated from 5.74, but still used in later versions in queue"
        },
        {
          "$ref": "objects.json#/definitions/base_sticker_new"
        }
      ]
    },
    "base_sticker_animation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "light",
            "dark"
          ],
          "description": "Type of animation script"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of animation script"
        }
      },
      "additionalProperties": false
    },
    "base_sticker_new": {
      "type": "object",
      "properties": {
        "sticker_id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "product_id": {
          "type": "integer",
          "description": "Pack ID"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "images_with_background": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "animation_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of sticker animation script"
        },
        "animations": {
          "type": "array",
          "description": "Array of sticker animation script objects",
          "items": {
            "$ref": "objects.json#/definitions/base_sticker_animation"
          }
        },
        "is_allowed": {
          "type": "boolean",
          "description": "Information whether the sticker is allowed"
        }
      },
      "additionalProperties": false
    },
    "base_sticker_old": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "product_id": {
          "type": "integer",
          "description": "Pack ID"
        },
        "width": {
          "type": "integer",
          "description": "Width in px"
        },
        "height": {
          "type": "integer",
          "description": "Height in px"
        },
        "photo_128": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 128 px in height"
        },
        "photo_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 256 px in height"
        },
        "photo_352": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 352 px in height"
        },
        "photo_512": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 512 px in height"
        },
        "photo_64": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 64 px in height"
        },
        "is_allowed": {
          "type": "boolean",
          "description": "Information whether the sticker is allowed"
        }
      },
      "additionalProperties": false
    },
    "base_stickers_list": {
      "type": "array",
      "items": {
        "$ref": "objects.json#/definitions/base_sticker_new"
      }
    },
    "base_upload_server": {
      "type": "object",
      "properties": {
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "Upload URL",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_user_group_fields": {
      "type": "string",
      "enum": [
        "about",
        "action_button",
        "activities",
        "activity",
        "addresses",
        "admin_level",
        "age_limits",
        "author_id",
        "ban_info",
        "bdate",
        "blacklisted",
        "blacklisted_by_me",
        "books",
        "can_ban",
        "can_create_topic",
        "can_message",
        "can_post",
        "can_see_all_posts",
        "can_see_audio",
        "can_send_friend_request",
        "can_upload_video",
        "can_write_private_message",
        "career",
        "city",
        "common_count",
        "connections",
        "contacts",
        "counters",
        "country",
        "cover",
        "crop_photo",
        "deactivated",
        "description",
        "domain",
        "education",
        "exports",
        "finish_date",
        "fixed_post",
        "followers_count",
        "friend_status",
        "games",
        "has_market_app",
        "has_mobile",
        "has_photo",
        "home_town",
        "id",
        "interests",
        "is_admin",
        "is_closed",
        "is_favorite",
        "is_friend",
        "is_best_friend",
        "is_hidden_from_feed",
        "is_member",
        "is_messages_blocked",
        "can_send_notify",
        "is_subscribed",
        "last_seen",
        "links",
        "lists",
        "maiden_name",
        "main_album_id",
        "main_section",
        "market",
        "member_status",
        "members_count",
        "military",
        "movies",
        "music",
        "name",
        "nickname",
        "occupation",
        "online",
        "online_status",
        "personal",
        "phone",
        "photo_100",
        "photo_200",
        "photo_200_orig",
        "photo_400_orig",
        "photo_50",
        "photo_id",
        "photo_max",
        "photo_max_orig",
        "photo_avg_color",
        "quotes",
        "relation",
        "relatives",
        "schools",
        "screen_name",
        "sex",
        "site",
        "start_date",
        "status",
        "timezone",
        "trending",
        "tv",
        "type",
        "universities",
        "verified",
        "wall_comments",
        "wiki_page",
        "first_name",
        "first_name_acc",
        "first_name_dat",
        "first_name_gen",
        "last_name",
        "last_name_acc",
        "last_name_dat",
        "last_name_gen",
        "can_subscribe_stories",
        "is_subscribed_stories",
        "vk_admin_status",
        "can_upload_story",
        "clips_count",
        "image_status",
        "is_nft",
        "is_nft_photo"
      ]
    },
    "base_user_id": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "board_default_order": {
      "type": "integer",
      "description": "Sort type",
      "enum": [
        1,
        2,
        -1,
        -2
      ],
      "enumNames": [
        "desc_updated",
        "desc_created",
        "asc_updated",
        "asc_created"
      ]
    },
    "board_topic": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments number"
        },
        "created": {
          "type": "integer",
          "description": "Date when the topic has been created in Unixtime"
        },
        "created_by": {
          "type": "integer",
          "description": "Creator ID",
          "entity": "owner",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "description": "Topic ID"
        },
        "is_closed": {
          "description": "Information whether the topic is closed",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "is_fixed": {
          "description": "Information whether the topic is fixed",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "title": {
          "type": "string",
          "description": "Topic title"
        },
        "updated": {
          "type": "integer",
          "description": "Date when the topic has been updated in Unixtime"
        },
        "updated_by": {
          "type": "integer",
          "description": "ID of user who updated the topic",
          "entity": "owner",
          "format": "int64"
        },
        "first_comment": {
          "type": "string",
          "description": "First comment text"
        },
        "last_comment": {
          "type": "string",
          "description": "Last comment text"
        }
      },
      "additionalProperties": false
    },
    "board_topic_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_comment_attachment"
          }
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1,
          "required": true
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        },
        "text": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "can_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can edit the comment"
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_likes_info"
        }
      },
      "additionalProperties": false
    },
    "bugtracker_add_company_groups_members_error": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "integer",
          "minimum": 0,
          "required": true,
          "entity": "groups",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "bugtracker_attachment": {
      "type": "object",
      "properties": {
        "doc": {
          "$ref": "objects.json#/definitions/docs_doc"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "type": {
          "type": "string",
          "enum": [
            "photo",
            "doc"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "bugtracker_bugreport_subscribe_state": {
      "type": "object",
      "properties": {
        "can_set_subscribe": {
          "type": "boolean",
          "required": true
        },
        "is_subscribed": {
          "type": "boolean"
        },
        "set_subscribe_hash": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "bugtracker_comment": {
      "type": "object",
      "properties": {
        "bugreport_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "comment_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "created": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "required": true
        },
        "meta_text": {
          "type": "string"
        },
        "from_id": {
          "type": "integer"
        },
        "author_name": {
          "type": "string"
        },
        "author_photo": {
          "type": "string"
        },
        "edit_hash": {
          "type": "string"
        },
        "remove_hash": {
          "type": "string"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/bugtracker_attachment"
          }
        },
        "is_unread": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "bugtracker_company_member": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "company_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "role": {
          "type": "integer",
          "required": true
        },
        "role_name": {
          "type": "string",
          "required": true
        },
        "ts": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "groups_count": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "products_count": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "reporter_url": {
          "type": "string",
          "required": true
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/bugtracker_company_member_product"
          }
        }
      },
      "additionalProperties": false
    },
    "bugtracker_company_member_product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string"
        },
        "photo_url": {
          "type": "string"
        },
        "access": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "status": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "licence_status_text": {
          "type": "string",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "callback_base": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/callback_type",
          "required": true
        },
        "group_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "event_id": {
          "type": "string",
          "description": "Unique event id. If it passed twice or more - you should ignore it.",
          "required": true
        },
        "v": {
          "type": "string",
          "description": "API object version",
          "required": true
        },
        "secret": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "callback_board_post_delete": {
      "type": "object",
      "properties": {
        "topic_owner_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "topic_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_confirmation": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "objects.json#/definitions/callback_type",
              "default": "confirmation"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_donut_money_withdraw": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "minimum": 0,
          "required": true
        },
        "amount_without_fee": {
          "type": "number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_donut_money_withdraw_error": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_cancelled": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_create": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_without_fee": {
          "type": "number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_expired": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_price_changed": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "amount_old": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_new": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_diff": {
          "type": "number",
          "minimum": 0
        },
        "amount_diff_without_fee": {
          "type": "number",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_prolonged": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_without_fee": {
          "type": "number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_change_photo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_change_settings": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "self": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_join": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "join_type": {
          "$ref": "objects.json#/definitions/callback_group_join_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_join_type": {
      "type": "string",
      "enum": [
        "join",
        "unsure",
        "accepted",
        "approved",
        "request"
      ]
    },
    "callback_group_leave": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "self": {
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "callback_group_market": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "disabled",
        "open"
      ]
    },
    "callback_group_officer_role": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "none",
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "callback_group_officers_edit": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "level_old": {
          "$ref": "objects.json#/definitions/callback_group_officer_role",
          "required": true
        },
        "level_new": {
          "$ref": "objects.json#/definitions/callback_group_officer_role",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_settings_changes": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "access": {
          "$ref": "objects.json#/definitions/groups_group_is_closed"
        },
        "screen_name": {
          "type": "string"
        },
        "public_category": {
          "type": "integer"
        },
        "public_subcategory": {
          "type": "integer"
        },
        "age_limits": {
          "$ref": "objects.json#/definitions/groups_group_full_age_limits"
        },
        "website": {
          "type": "string"
        },
        "enable_status_default": {
          "$ref": "objects.json#/definitions/groups_group_wall"
        },
        "enable_audio": {
          "$ref": "objects.json#/definitions/groups_group_audio"
        },
        "enable_video": {
          "$ref": "objects.json#/definitions/groups_group_video"
        },
        "enable_photo": {
          "$ref": "objects.json#/definitions/groups_group_photos"
        },
        "enable_market": {
          "$ref": "objects.json#/definitions/callback_group_market"
        }
      },
      "additionalProperties": false
    },
    "callback_like_add_remove": {
      "type": "object",
      "properties": {
        "liker_id": {
          "type": "integer",
          "required": true
        },
        "object_type": {
          "type": "string",
          "enum": [
            "video",
            "photo",
            "post",
            "comment",
            "note",
            "topic_comment",
            "photo_comment",
            "video_comment",
            "market",
            "market_comment"
          ],
          "required": true
        },
        "object_owner_id": {
          "type": "integer",
          "required": true
        },
        "object_id": {
          "type": "integer",
          "required": true
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "thread_reply_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "callback_market_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string"
        },
        "market_owner_id": {
          "type": "integer"
        },
        "photo_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "callback_market_comment_delete": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "item_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_message_allow": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "objects.json#/definitions/callback_type",
              "default": "message_allow"
            },
            "object": {
              "$ref": "objects.json#/definitions/callback_message_allow_object",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_message_allow_object": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "key": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_message_deny": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_message_edit": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "objects.json#/definitions/callback_type",
              "default": "message_edit"
            },
            "object": {
              "$ref": "objects.json#/definitions/messages_message",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_message_new": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "objects.json#/definitions/callback_type",
              "default": "message_new"
            },
            "object": {
              "type": "object",
              "$ref": "objects.json#/definitions/callback_message_object",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_message_object": {
      "type": "object",
      "properties": {
        "client_info": {
          "$ref": "objects.json#/definitions/client_info_for_bots"
        },
        "message": {
          "$ref": "objects.json#/definitions/messages_message"
        }
      },
      "additionalProperties": false
    },
    "callback_message_reply": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "objects.json#/definitions/callback_type",
              "default": "message_reply"
            },
            "object": {
              "$ref": "objects.json#/definitions/messages_message",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_photo_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "required": true
        },
        "photo_owner_id": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_photo_comment_delete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_poll_vote_new": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "poll_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "option_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_type": {
      "type": "string",
      "enum": [
        "audio_new",
        "board_post_new",
        "board_post_edit",
        "board_post_restore",
        "board_post_delete",
        "confirmation",
        "group_leave",
        "group_join",
        "group_change_photo",
        "group_change_settings",
        "group_officers_edit",
        "lead_forms_new",
        "market_comment_new",
        "market_comment_delete",
        "market_comment_edit",
        "market_comment_restore",
        "market_order_new",
        "market_order_edit",
        "message_new",
        "message_reply",
        "message_edit",
        "message_allow",
        "message_deny",
        "message_read",
        "message_typing_state",
        "messages_edit",
        "message_reaction_event",
        "photo_new",
        "photo_comment_new",
        "photo_comment_delete",
        "photo_comment_edit",
        "photo_comment_restore",
        "poll_vote_new",
        "user_block",
        "user_unblock",
        "video_new",
        "video_comment_new",
        "video_comment_delete",
        "video_comment_edit",
        "video_comment_restore",
        "wall_post_new",
        "wall_reply_new",
        "wall_reply_edit",
        "wall_reply_delete",
        "wall_reply_restore",
        "wall_repost"
      ]
    },
    "callback_user_block": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "unblock_date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "reason": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "comment": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "callback_user_unblock": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "by_end_date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_video_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "required": true
        },
        "video_owner_id": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_video_comment_delete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "video_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_wall_comment_delete": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "calls_call": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "description": "Call duration",
          "minimum": 0
        },
        "initiator_id": {
          "type": "integer",
          "description": "Caller initiator",
          "minimum": 0,
          "required": true
        },
        "receiver_id": {
          "type": "integer",
          "description": "Caller receiver",
          "minimum": 0,
          "required": true
        },
        "state": {
          "$ref": "objects.json#/definitions/calls_end_state",
          "required": true
        },
        "time": {
          "type": "integer",
          "description": "Timestamp for call",
          "required": true
        },
        "video": {
          "type": "boolean",
          "description": "Was this call initiated as video call"
        },
        "participants": {
          "$ref": "objects.json#/definitions/calls_participants"
        }
      },
      "additionalProperties": false
    },
    "calls_end_state": {
      "type": "string",
      "description": "State in which call ended up",
      "enum": [
        "canceled_by_initiator",
        "canceled_by_receiver",
        "reached"
      ]
    },
    "calls_participants": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Participants count"
        }
      },
      "additionalProperties": false
    },
    "client_info_for_bots": {
      "type": "object",
      "properties": {
        "button_actions": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_template_action_type_names"
          }
        },
        "keyboard": {
          "type": "boolean",
          "description": "client has support keyboard"
        },
        "inline_keyboard": {
          "type": "boolean",
          "description": "client has support inline keyboard"
        },
        "carousel": {
          "type": "boolean",
          "description": "client has support carousel"
        },
        "lang_id": {
          "type": "integer",
          "description": "client or user language id"
        }
      },
      "additionalProperties": false
    },
    "comment_thread": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wall_comment"
          }
        },
        "can_post": {
          "type": "boolean",
          "description": "Information whether current user can comment the post"
        },
        "show_reply_button": {
          "type": "boolean",
          "description": "Information whether recommended to display reply button"
        },
        "groups_can_post": {
          "type": "boolean",
          "description": "Information whether groups can comment the post"
        }
      },
      "additionalProperties": false
    },
    "database_city": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/base_object"
        },
        {
          "properties": {
            "area": {
              "type": "string",
              "description": "Area title"
            },
            "region": {
              "type": "string",
              "description": "Region title"
            },
            "country": {
              "type": "string",
              "description": "Country title"
            },
            "important": {
              "description": "Information whether the city is included in important cities list",
              "$ref": "objects.json#/definitions/base_bool_int"
            }
          },
          "additionalProperties": false
        }
      ],
      "additionalProperties": false
    },
    "database_city_by_id": {
      "type": "object",
      "$ref": "objects.json#/definitions/base_object",
      "additionalProperties": false
    },
    "database_faculty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "title": {
          "type": "string",
          "description": "Faculty title"
        }
      },
      "additionalProperties": false
    },
    "database_language_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Language ID",
          "required": true
        },
        "native_name": {
          "type": "string",
          "description": "Language native name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Region ID"
        },
        "title": {
          "type": "string",
          "description": "Region title"
        }
      },
      "additionalProperties": false
    },
    "database_school": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "title": {
          "type": "string",
          "description": "School title"
        }
      },
      "additionalProperties": false
    },
    "database_school_class": {
      "type": "object",
      "$ref": "objects.json#/definitions/base_object",
      "additionalProperties": false
    },
    "database_station": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1
        },
        "color": {
          "type": "string",
          "description": "Hex color code without #"
        },
        "id": {
          "type": "integer",
          "description": "Station ID",
          "minimum": 1,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Station name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_university": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "title": {
          "type": "string",
          "description": "University title"
        }
      },
      "additionalProperties": false
    },
    "docs_doc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Document ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Document owner ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Document title",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "File size in bites",
          "minimum": 0,
          "required": true
        },
        "ext": {
          "type": "string",
          "description": "File extension",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "File URL"
        },
        "date": {
          "type": "integer",
          "description": "Date when file has been uploaded in Unixtime",
          "minimum": 0,
          "required": true
        },
        "type": {
          "type": "integer",
          "description": "Document type",
          "required": true
        },
        "preview": {
          "$ref": "objects.json#/definitions/docs_doc_preview"
        },
        "is_licensed": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the document"
        },
        "tags": {
          "type": "array",
          "description": "Document tags",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "docs_doc_attachment_type": {
      "type": "string",
      "description": "Doc attachment type",
      "enum": [
        "doc",
        "graffiti",
        "audio_message"
      ]
    },
    "docs_doc_preview": {
      "type": "object",
      "properties": {
        "audio_msg": {
          "$ref": "objects.json#/definitions/docs_doc_preview_audio_msg"
        },
        "graffiti": {
          "$ref": "objects.json#/definitions/docs_doc_preview_graffiti"
        },
        "photo": {
          "$ref": "objects.json#/definitions/docs_doc_preview_photo"
        },
        "video": {
          "$ref": "objects.json#/definitions/docs_doc_preview_video"
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_audio_msg": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "description": "Audio message duration in seconds",
          "minimum": 0,
          "required": true
        },
        "link_mp3": {
          "type": "string",
          "format": "uri",
          "description": "MP3 file URL",
          "required": true
        },
        "link_ogg": {
          "type": "string",
          "format": "uri",
          "description": "OGG file URL",
          "required": true
        },
        "waveform": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Sound visualisation",
            "minimum": 0
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_graffiti": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti file URL",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_photo": {
      "type": "object",
      "properties": {
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/docs_doc_preview_photo_sizes"
          }
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_photo_sizes": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Width in px",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Height in px",
          "minimum": 0,
          "required": true
        },
        "type": {
          "$ref": "objects.json#/definitions/photos_photo_sizes_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_video": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "Video URL",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Video's width in pixels",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Video's height in pixels",
          "minimum": 0,
          "required": true
        },
        "file_size": {
          "type": "integer",
          "description": "Video file size in bites",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_types": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Doc type ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Doc type title",
          "required": true
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of docs",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "donut_donator_subscription_info": {
      "description": "Info about user VK Donut subscription",
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "next_payment_date": {
          "type": "integer",
          "required": true
        },
        "amount": {
          "type": "integer",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "expiring"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "events_event_attach": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address of event"
        },
        "button_text": {
          "type": "string",
          "description": "text of attach",
          "required": true
        },
        "friends": {
          "type": "array",
          "description": "array of friends ids",
          "items": {
            "type": "integer",
            "entity": "profiles",
            "format": "int64"
          },
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "event ID",
          "minimum": 0,
          "required": true,
          "entity": "groups",
          "format": "int64"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "is favorite",
          "required": true
        },
        "member_status": {
          "$ref": "objects.json#/definitions/groups_group_full_member_status",
          "description": "Current user's member status"
        },
        "text": {
          "type": "string",
          "description": "text of attach",
          "required": true
        },
        "time": {
          "type": "integer",
          "description": "event start time"
        }
      },
      "additionalProperties": false
    },
    "fave_bookmark": {
      "type": "object",
      "properties": {
        "added_date": {
          "type": "integer",
          "description": "Timestamp, when this item was bookmarked",
          "minimum": 0,
          "required": true
        },
        "link": {
          "$ref": "objects.json#/definitions/base_link"
        },
        "post": {
          "$ref": "objects.json#/definitions/wall_wallpost_full"
        },
        "product": {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        "seen": {
          "type": "boolean",
          "description": "Has user seen this item",
          "required": true
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/fave_tag"
          },
          "required": true
        },
        "type": {
          "description": "Item type",
          "$ref": "objects.json#/definitions/fave_bookmark_type",
          "required": true
        },
        "video": {
          "$ref": "objects.json#/definitions/video_video_full"
        }
      },
      "additionalProperties": false
    },
    "fave_bookmark_type": {
      "type": "string",
      "enum": [
        "post",
        "video",
        "product",
        "article",
        "link",
        "clip"
      ]
    },
    "fave_page": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Some info about user or group",
          "required": true
        },
        "group": {
          "$ref": "objects.json#/definitions/groups_group_full"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/fave_tag"
          },
          "required": true
        },
        "type": {
          "description": "Item type",
          "$ref": "objects.json#/definitions/fave_page_type",
          "required": true
        },
        "updated_date": {
          "type": "integer",
          "description": "Timestamp, when this page was bookmarked",
          "minimum": 0
        },
        "user": {
          "$ref": "objects.json#/definitions/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "fave_page_type": {
      "type": "string",
      "enum": [
        "user",
        "group",
        "hints"
      ]
    },
    "fave_tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Tag id",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Tag name"
        }
      },
      "additionalProperties": false
    },
    "friends_friend_extended_status": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/friends_friend_status"
        },
        {
          "properties": {
            "is_request_unread": {
              "type": "boolean",
              "description": "Is friend request from other user unread"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "friends_friend_status": {
      "type": "object",
      "properties": {
        "friend_status": {
          "$ref": "objects.json#/definitions/friends_friend_status_status",
          "required": true
        },
        "sign": {
          "type": "string",
          "description": "MD5 hash for the result validation"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_friend_status_status": {
      "type": "integer",
      "description": "Friend status with the user",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not a friend",
        "outcoming request",
        "incoming request",
        "is friend"
      ]
    },
    "friends_friends_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "List title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_mutual_friend": {
      "type": "object",
      "properties": {
        "common_count": {
          "type": "integer",
          "description": "Total mutual friends number"
        },
        "common_friends": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1,
            "entity": "owner",
            "format": "int64"
          }
        },
        "id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "friends_requests_mutual": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total mutual friends number"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "entity": "owner",
            "format": "int64",
            "description": "User ID",
            "required": true
          }
        }
      },
      "additionalProperties": false
    },
    "friends_requests_xtr_message": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/friends_requests_xtr_mutual"
        },
        {
          "properties": {
            "message": {
              "type": "string",
              "description": "Message sent with a request"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "friends_requests_xtr_mutual": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_full"
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "entity": "owner",
              "format": "int64",
              "description": "User ID"
            },
            "user_id": {
              "type": "integer",
              "entity": "owner",
              "format": "int64",
              "description": "User ID",
              "required": true
            },
            "from": {
              "type": "string",
              "description": "ID of the user by whom friend has been suggested"
            },
            "mutual": {
              "$ref": "objects.json#/definitions/friends_requests_mutual"
            },
            "track_code": {
              "type": "string"
            },
            "message": {
              "type": "string",
              "description": "Message sent with a request"
            },
            "timestamp": {
              "type": "integer",
              "description": "Request timestamp"
            },
            "descriptions": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Description"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "friends_user_xtr_phone": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_full"
        },
        {
          "properties": {
            "phone": {
              "type": "string",
              "description": "User phone"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "gifts_gift": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when gist has been sent in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Gift sender ID",
          "entity": "owner",
          "format": "int64"
        },
        "gift": {
          "$ref": "objects.json#/definitions/gifts_layout"
        },
        "gift_hash": {
          "type": "string",
          "description": "Hash"
        },
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "message": {
          "type": "string",
          "description": "Comment text"
        },
        "privacy": {
          "$ref": "objects.json#/definitions/gifts_gift_privacy"
        }
      },
      "additionalProperties": false
    },
    "gifts_gift_privacy": {
      "type": "integer",
      "description": "Gift privacy",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "name and message for all",
        "name for all",
        "name and message for recipient only"
      ]
    },
    "gifts_layout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "thumb_512": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 512 px in width"
        },
        "thumb_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 256 px in width"
        },
        "thumb_48": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 48 px in width"
        },
        "thumb_96": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 96 px in width"
        },
        "stickers_product_id": {
          "type": "integer",
          "minimum": 0,
          "description": "ID of the sticker pack, if the gift is representing one"
        },
        "is_stickers_style": {
          "type": "boolean",
          "description": "Information whether gift represents a stickers style"
        },
        "build_id": {
          "type": "string",
          "description": "ID of the build of constructor gift"
        },
        "keywords": {
          "type": "string",
          "description": "Keywords used for search"
        }
      },
      "additionalProperties": false
    },
    "groups_address": {
      "type": "object",
      "properties": {
        "additional_address": {
          "type": "string",
          "description": "Additional address to the place (6 floor, left door)"
        },
        "address": {
          "type": "string",
          "description": "String address to the place (Nevsky, 28)"
        },
        "city_id": {
          "type": "integer",
          "description": "City id of address",
          "minimum": 0
        },
        "country_id": {
          "type": "integer",
          "description": "Country id of address",
          "minimum": 0
        },
        "city": {
          "description": "City for address",
          "$ref": "objects.json#/definitions/database_city_by_id"
        },
        "metro_station": {
          "description": "Metro for address",
          "$ref": "objects.json#/definitions/database_station"
        },
        "country": {
          "description": "Country for address",
          "$ref": "objects.json#/definitions/base_country"
        },
        "distance": {
          "type": "integer",
          "description": "Distance from the point"
        },
        "id": {
          "type": "integer",
          "description": "Address id",
          "required": true
        },
        "latitude": {
          "type": "number",
          "description": "Address latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Address longitude"
        },
        "metro_station_id": {
          "type": "integer",
          "description": "Metro id of address",
          "minimum": 0
        },
        "phone": {
          "type": "string",
          "description": "Address phone"
        },
        "time_offset": {
          "type": "integer",
          "description": "Time offset int minutes from utc time"
        },
        "timetable": {
          "description": "Week timetable for the address",
          "$ref": "objects.json#/definitions/groups_address_timetable"
        },
        "title": {
          "type": "string",
          "description": "Title of the place (Zinger, etc)"
        },
        "work_info_status": {
          "description": "Status of information about timetable",
          "$ref": "objects.json#/definitions/groups_address_work_info_status"
        },
        "place_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "groups_address_timetable": {
      "type": "object",
      "description": "Timetable for a week",
      "properties": {
        "fri": {
          "description": "Timetable for friday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        },
        "mon": {
          "description": "Timetable for monday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        },
        "sat": {
          "description": "Timetable for saturday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        },
        "sun": {
          "description": "Timetable for sunday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        },
        "thu": {
          "description": "Timetable for thursday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        },
        "tue": {
          "description": "Timetable for tuesday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        },
        "wed": {
          "description": "Timetable for wednesday",
          "$ref": "objects.json#/definitions/groups_address_timetable_day"
        }
      },
      "additionalProperties": false
    },
    "groups_address_timetable_day": {
      "type": "object",
      "description": "Timetable for one day",
      "properties": {
        "break_close_time": {
          "type": "integer",
          "description": "Close time of the break in minutes"
        },
        "break_open_time": {
          "type": "integer",
          "description": "Start time of the break in minutes"
        },
        "close_time": {
          "type": "integer",
          "description": "Close time in minutes",
          "required": true
        },
        "open_time": {
          "type": "integer",
          "description": "Open time in minutes",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_address_work_info_status": {
      "type": "string",
      "description": "Status of information about timetable",
      "enum": [
        "no_information",
        "temporarily_closed",
        "always_opened",
        "timetable",
        "forever_closed"
      ]
    },
    "groups_addresses_info": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "description": "Information whether addresses is enabled",
          "type": "boolean",
          "required": true
        },
        "main_address_id": {
          "type": "integer",
          "description": "Main address id for group"
        },
        "main_address": {
          "description": "Main address",
          "$ref": "objects.json#/definitions/groups_address"
        },
        "count": {
          "type": "integer",
          "description": "Count of addresses",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "groups_ban_info": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "description": "Administrator ID",
          "minimum": 1
        },
        "comment": {
          "type": "string",
          "description": "Comment for a ban"
        },
        "comment_visible": {
          "type": "boolean",
          "description": "Show comment for user"
        },
        "is_closed": {
          "type": "boolean"
        },
        "date": {
          "type": "integer",
          "description": "Date when user has been added to blacklist in Unixtime",
          "minimum": 0
        },
        "end_date": {
          "type": "integer",
          "description": "Date when user will be removed from blacklist in Unixtime",
          "minimum": 0
        },
        "reason": {
          "$ref": "objects.json#/definitions/groups_ban_info_reason"
        }
      },
      "additionalProperties": false
    },
    "groups_ban_info_reason": {
      "type": "integer",
      "description": "Ban reason",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "enumNames": [
        "other",
        "spam",
        "verbal abuse",
        "strong language",
        "flood"
      ]
    },
    "groups_banned_item": {
      "type": "object",
      "$ref": "objects.json#/definitions/groups_owner_xtr_ban_info"
    },
    "groups_callback_server": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string",
          "required": true
        },
        "creator_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "url": {
          "type": "string",
          "required": true
        },
        "secret_key": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": [
            "unconfigured",
            "failed",
            "wait",
            "ok"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_callback_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "objects.json#/definitions/groups_long_poll_events"
        }
      },
      "additionalProperties": false
    },
    "groups_classifieds_properties": {
      "type": "object",
      "additionalProperties": false,
      "properties": []
    },
    "groups_contacts_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        },
        "desc": {
          "type": "string",
          "description": "Contact description"
        },
        "phone": {
          "type": "string",
          "description": "Contact phone"
        },
        "email": {
          "type": "string",
          "description": "Contact email"
        }
      },
      "additionalProperties": false
    },
    "groups_counters_group": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "integer",
          "description": "Addresses number"
        },
        "albums": {
          "type": "integer",
          "description": "Photo albums number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "audio_playlists": {
          "type": "integer",
          "description": "Audio playlists number"
        },
        "docs": {
          "type": "integer",
          "description": "Docs number"
        },
        "market": {
          "type": "integer",
          "description": "Market items number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "topics": {
          "type": "integer",
          "description": "Topics number"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        },
        "video_playlists": {
          "type": "integer",
          "description": "Playlists number"
        },
        "market_services": {
          "type": "integer",
          "description": "Market services number"
        },
        "podcasts": {
          "type": "integer",
          "description": "Podcasts number"
        },
        "articles": {
          "type": "integer",
          "description": "Articles number"
        },
        "narratives": {
          "type": "integer",
          "description": "Narratives number"
        },
        "clips": {
          "type": "integer",
          "format": "int64",
          "description": "Clips number"
        },
        "clips_followers": {
          "type": "integer",
          "format": "int64",
          "description": "Clips followers number"
        },
        "videos_followers": {
          "type": "integer",
          "format": "int64",
          "description": "Videos followers number"
        },
        "clips_views": {
          "type": "integer",
          "format": "int64",
          "description": "Clips views number"
        },
        "clips_likes": {
          "type": "integer",
          "format": "int64",
          "description": "Clips likes number"
        }
      },
      "additionalProperties": false
    },
    "groups_fields": {
      "type": "string",
      "enum": [
        "id",
        "name",
        "screen_name",
        "is_closed",
        "type",
        "is_admin",
        "admin_level",
        "is_member",
        "is_advertiser",
        "start_date",
        "finish_date",
        "deactivated",
        "photo_50",
        "photo_100",
        "photo_200",
        "photo_200_orig",
        "photo_400",
        "photo_400_orig",
        "photo_max",
        "photo_max_orig",
        "est_date",
        "public_date_label",
        "photo_max_size",
        "is_video_live_notifications_blocked",
        "video_live",
        "market",
        "member_status",
        "is_adult",
        "is_hidden_from_feed",
        "is_favorite",
        "is_subscribed",
        "city",
        "country",
        "verified",
        "description",
        "wiki_page",
        "members_count",
        "members_count_text",
        "requests_count",
        "video_live_level",
        "video_live_count",
        "clips_count",
        "textlives_count",
        "counters",
        "cover",
        "can_post",
        "can_suggest",
        "can_upload_story",
        "can_upload_doc",
        "can_upload_video",
        "can_upload_clip",
        "can_see_all_posts",
        "can_create_topic",
        "activity",
        "fixed_post",
        "has_photo",
        "crop_photo",
        "status",
        "status_audio",
        "main_album_id",
        "links",
        "contacts",
        "wall",
        "site",
        "main_section",
        "secondary_section",
        "trending",
        "can_message",
        "is_messages_blocked",
        "can_send_notify",
        "online_status",
        "invited_by",
        "age_limits",
        "ban_info",
        "has_market_app",
        "using_vkpay_market_app",
        "has_group_channel",
        "addresses",
        "is_subscribed_podcasts",
        "can_subscribe_podcasts",
        "can_subscribe_posts",
        "live_covers",
        "stories_archive_count",
        "has_unseen_stories",
        "rating"
      ]
    },
    "groups_filter": {
      "type": "string",
      "enum": [
        "admin",
        "editor",
        "moder",
        "advertiser",
        "groups",
        "publics",
        "events",
        "has_addresses"
      ]
    },
    "groups_group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "groups",
          "format": "int64",
          "description": "Community ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Community name"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain of the community page"
        },
        "is_closed": {
          "$ref": "objects.json#/definitions/groups_group_is_closed"
        },
        "type": {
          "$ref": "objects.json#/definitions/groups_group_type"
        },
        "is_admin": {
          "description": "Information whether current user is administrator",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "admin_level": {
          "$ref": "objects.json#/definitions/groups_group_admin_level"
        },
        "is_member": {
          "description": "Information whether current user is member",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "is_advertiser": {
          "description": "Information whether current user is advertiser",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "start_date": {
          "description": "Start date in Unixtime format",
          "type": "integer"
        },
        "finish_date": {
          "description": "Finish date in Unixtime format",
          "type": "integer"
        },
        "verified": {
          "description": "Information whether community is verified",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "deactivated": {
          "type": "string",
          "description": "Information whether community is banned"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 50 pixels in width"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 100 pixels in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 200 pixels in width"
        },
        "photo_200_orig": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 200 pixels in width original"
        },
        "photo_400": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 400 pixels in width"
        },
        "photo_400_orig": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 400 pixels in width original"
        },
        "photo_max": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with max pixels in width"
        },
        "photo_max_orig": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with max pixels in width original"
        },
        "est_date": {
          "type": "string",
          "description": "Established date"
        },
        "public_date_label": {
          "type": "string",
          "description": "Public date label"
        },
        "photo_max_size": {
          "$ref": "objects.json#/definitions/groups_photo_size"
        },
        "is_video_live_notifications_blocked": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "video_live": {
          "$ref": "objects.json#/definitions/video_live_info"
        }
      },
      "additionalProperties": false
    },
    "groups_group_access": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ]
    },
    "groups_group_admin_level": {
      "type": "integer",
      "description": "Level of current user's credentials as manager",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group_age_limits": {
      "type": "integer",
      "default": 1,
      "minimum": 0,
      "enumNames": [
        "unlimited",
        "16 plus",
        "18 plus"
      ],
      "enum": [
        1,
        2,
        3
      ]
    },
    "groups_group_attach": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "group ID",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "description": "text of attach",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "activity or category of group",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "size of group",
          "required": true
        },
        "is_favorite": {
          "type": "boolean",
          "description": "is favorite",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_group_audio": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_ban_info": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Ban comment"
        },
        "end_date": {
          "type": "integer",
          "description": "End date of ban in Unixtime"
        },
        "reason": {
          "$ref": "objects.json#/definitions/groups_ban_info_reason"
        }
      },
      "additionalProperties": false
    },
    "groups_group_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/groups_group_subcategory"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_category_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "page_count": {
          "type": "integer",
          "description": "Pages number",
          "required": true
        },
        "page_previews": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/groups_group"
          },
          "required": true
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/groups_group_category"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_category_type": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_group_docs": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/groups_group"
        },
        {
          "$ref": "objects.json#/definitions/groups_market_properties"
        },
        {
          "$ref": "objects.json#/definitions/groups_classifieds_properties"
        },
        {
          "properties": {
            "member_status": {
              "$ref": "objects.json#/definitions/groups_group_full_member_status",
              "description": "Current user's member status"
            },
            "is_adult": {
              "description": "Information whether community is adult",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_hidden_from_feed": {
              "description": "Information whether community is hidden from current user's newsfeed",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_favorite": {
              "description": "Information whether community is in faves",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_subscribed": {
              "description": "Information whether current user is subscribed",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "city": {
              "$ref": "objects.json#/definitions/base_object"
            },
            "country": {
              "$ref": "objects.json#/definitions/base_country"
            },
            "description": {
              "type": "string",
              "description": "Community description"
            },
            "wiki_page": {
              "type": "string",
              "description": "Community's main wiki page title"
            },
            "members_count": {
              "type": "integer",
              "minimum": 0,
              "description": "Community members number"
            },
            "members_count_text": {
              "type": "string",
              "description": "Info about number of users in group"
            },
            "requests_count": {
              "type": "integer",
              "minimum": 0,
              "description": "The number of incoming requests to the community"
            },
            "video_live_level": {
              "type": "integer",
              "description": "Community level live streams achievements",
              "minimum": 0
            },
            "video_live_count": {
              "type": "integer",
              "description": "Number of community's live streams",
              "minimum": 0
            },
            "clips_count": {
              "type": "integer",
              "description": "Number of community's clips",
              "minimum": 0
            },
            "counters": {
              "$ref": "objects.json#/definitions/groups_counters_group"
            },
            "textlives_count": {
              "type": "integer",
              "description": "Textlives number"
            },
            "cover": {
              "$ref": "objects.json#/definitions/base_owner_cover"
            },
            "can_post": {
              "description": "Information whether current user can post on community's wall",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_suggest": {
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_upload_story": {
              "description": "Information whether current user can upload story",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_call_to_community": {
              "description": "Information whether current user can call to community",
              "type": "boolean"
            },
            "can_upload_doc": {
              "description": "Information whether current user can upload doc",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_upload_video": {
              "description": "Information whether current user can upload video",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_upload_clip": {
              "description": "Information whether current user can upload clip",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see all posts on community's wall",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_create_topic": {
              "description": "Information whether current user can create topic",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "activity": {
              "type": "string",
              "description": "Type of group, start date of event or category of public page"
            },
            "fixed_post": {
              "type": "integer",
              "description": "Fixed post ID"
            },
            "has_photo": {
              "description": "Information whether community has photo",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "crop_photo": {
              "description": "Данные о точках, по которым вырезаны профильная и миниатюрная фотографии сообщества",
              "$ref": "objects.json#/definitions/base_crop_photo"
            },
            "status": {
              "type": "string",
              "description": "Community status"
            },
            "status_audio": {
              "$ref": "objects.json#/definitions/audio_audio"
            },
            "main_album_id": {
              "type": "integer",
              "description": "Community's main photo album ID"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/groups_links_item"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/groups_contacts_item"
              }
            },
            "wall": {
              "type": "integer",
              "description": "Information about wall status in community",
              "enum": [
                0,
                1,
                2,
                3
              ],
              "enumNames": [
                "disabled",
                "open",
                "limited",
                "restricted"
              ]
            },
            "site": {
              "type": "string",
              "description": "Community's website"
            },
            "main_section": {
              "$ref": "objects.json#/definitions/groups_group_full_section"
            },
            "secondary_section": {
              "$ref": "objects.json#/definitions/groups_group_full_section"
            },
            "trending": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether the community has a \"fire\" pictogram."
            },
            "can_message": {
              "description": "Information whether current user can send a message to community",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_messages_blocked": {
              "description": "Information whether community can send a message to current user",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_send_notify": {
              "description": "Information whether community can send notifications by phone number to current user",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "online_status": {
              "$ref": "objects.json#/definitions/groups_online_status",
              "description": "Status of replies in community messages"
            },
            "invited_by": {
              "type": "integer",
              "description": "Inviter ID",
              "minimum": 1
            },
            "age_limits": {
              "$ref": "objects.json#/definitions/groups_group_full_age_limits",
              "description": "Information whether age limit"
            },
            "ban_info": {
              "$ref": "objects.json#/definitions/groups_group_ban_info",
              "description": "User ban info"
            },
            "has_group_channel": {
              "type": "boolean"
            },
            "addresses": {
              "$ref": "objects.json#/definitions/groups_addresses_info",
              "description": "Info about addresses in groups"
            },
            "is_subscribed_podcasts": {
              "description": "Information whether current user is subscribed to podcasts",
              "type": "boolean"
            },
            "can_subscribe_podcasts": {
              "description": "Owner in whitelist or not",
              "type": "boolean"
            },
            "can_subscribe_posts": {
              "description": "Can subscribe to wall",
              "type": "boolean"
            },
            "live_covers": {
              "description": "Live covers state",
              "$ref": "objects.json#/definitions/groups_live_covers"
            },
            "stories_archive_count": {
              "type": "integer"
            },
            "has_unseen_stories": {
              "type": "boolean"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "groups_group_full_age_limits": {
      "type": "integer",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "no",
        "over 16",
        "over 18"
      ]
    },
    "groups_group_full_member_status": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "enumNames": [
        "not a member",
        "member",
        "not sure",
        "declined",
        "has sent a request",
        "invited"
      ]
    },
    "groups_group_full_section": {
      "type": "integer",
      "description": "Main section of community",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        24,
        26,
        27,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        54,
        55,
        57,
        58,
        59,
        60,
        61,
        62
      ],
      "enumNames": [
        "none",
        "photos",
        "topics",
        "audios",
        "videos",
        "market",
        "stories",
        "apps",
        "followers",
        "links",
        "events",
        "places",
        "contacts",
        "app_btns",
        "docs",
        "event_counters",
        "group_messages",
        "albums",
        "categories",
        "admin_help",
        "app_widget",
        "public_help",
        "hs_donation_app",
        "hs_market_app",
        "addresses",
        "artist_page",
        "podcast",
        "articles",
        "admin_tips",
        "menu",
        "fixed_post",
        "chats",
        "evergreen_notice",
        "musicians",
        "narratives",
        "donut_donate",
        "clips",
        "market_cart",
        "curators",
        "market_services",
        "classifieds",
        "textlives",
        "donut_for_dons",
        "badges",
        "chats_creation",
        "stream_creation",
        "rating",
        "service_rating",
        "recommended_tips_widget"
      ]
    },
    "groups_group_is_closed": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ],
      "description": "Information whether community is closed"
    },
    "groups_group_market_currency": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        643,
        980,
        398,
        978,
        840
      ],
      "enumNames": [
        "russian rubles",
        "ukrainian hryvnia",
        "kazakh tenge",
        "euro",
        "us dollars"
      ]
    },
    "groups_group_photos": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_public_category_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/groups_group_category_type"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_role": {
      "type": "string",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "advertiser"
      ]
    },
    "groups_group_subcategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Object name",
          "required": true
        },
        "genders": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_object_with_name"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_subject": {
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42
      ],
      "enumNames": [
        "auto",
        "activity holidays",
        "business",
        "pets",
        "health",
        "dating and communication",
        "games",
        "it",
        "cinema",
        "beauty and fashion",
        "cooking",
        "art and culture",
        "literature",
        "mobile services and internet",
        "music",
        "science and technology",
        "real estate",
        "news and media",
        "security",
        "education",
        "home and renovations",
        "politics",
        "food",
        "industry",
        "travel",
        "work",
        "entertainment",
        "religion",
        "family",
        "sports",
        "insurance",
        "television",
        "goods and services",
        "hobbies",
        "finance",
        "photo",
        "esoterics",
        "electronics and appliances",
        "erotic",
        "humor",
        "society_humanities",
        "design and graphics"
      ]
    },
    "groups_group_suggested_privacy": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "none",
        "all",
        "subscribers"
      ]
    },
    "groups_group_tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "color": {
          "type": "string",
          "enum": [
            "454647",
            "45678f",
            "4bb34b",
            "5181b8",
            "539b9c",
            "5c9ce6",
            "63b9ba",
            "6bc76b",
            "76787a",
            "792ec0",
            "7a6c4f",
            "7ececf",
            "9e8d6b",
            "a162de",
            "aaaeb3",
            "bbaa84",
            "e64646",
            "ff5c5c",
            "ffa000",
            "ffc107"
          ],
          "required": true
        },
        "uses": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "groups_group_topics": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_type": {
      "type": "string",
      "description": "Community type",
      "enum": [
        "group",
        "page",
        "event"
      ]
    },
    "groups_group_video": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_wall": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited",
        "closed"
      ]
    },
    "groups_group_wiki": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_groups_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Communities number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Community ID",
            "entity": "owner",
            "format": "int64"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_links_item": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Link title"
        },
        "desc": {
          "type": "string",
          "description": "Link description"
        },
        "edit_title": {
          "description": "Information whether the link title can be edited",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square image of the link with 100 pixels in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square image of the link with 50 pixels in width"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        },
        "image_processing": {
          "description": "Information whether the image on processing",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "groups_live_covers": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "description": "Information whether live covers is enabled",
          "type": "boolean",
          "required": true
        },
        "is_scalable": {
          "description": "Information whether live covers photo scaling is enabled",
          "type": "boolean"
        },
        "story_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_long_poll_events": {
      "type": "object",
      "properties": {
        "audio_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "board_post_delete": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "board_post_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "board_post_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "board_post_restore": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "group_change_photo": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "group_change_settings": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "group_join": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "group_leave": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "group_officers_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "lead_forms_new": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "market_comment_delete": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "market_comment_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "market_comment_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "market_comment_restore": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "market_order_new": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "market_order_edit": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "message_allow": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_deny": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_read": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_reply": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_typing_state": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "photo_comment_delete": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "photo_comment_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "photo_comment_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "photo_comment_restore": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "photo_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "poll_vote_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "user_block": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "user_unblock": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "video_comment_delete": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "video_comment_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "video_comment_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "video_comment_restore": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "video_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "message_reaction_event": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "wall_post_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "wall_reply_delete": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "wall_reply_edit": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "wall_reply_new": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "wall_reply_restore": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "wall_repost": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_subscription_create": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_subscription_prolonged": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_subscription_cancelled": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_subscription_expired": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_subscription_price_changed": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_money_withdraw": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "donut_money_withdraw_error": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_long_poll_server": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Long Poll key",
          "required": true
        },
        "server": {
          "type": "string",
          "format": "uri",
          "description": "Long Poll server address",
          "required": true
        },
        "ts": {
          "type": "string",
          "description": "Number of the last event",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_long_poll_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "objects.json#/definitions/groups_long_poll_events",
          "required": true
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Shows whether Long Poll is enabled",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_market_info": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Market type"
        },
        "contact_id": {
          "type": "integer",
          "description": "Contact person ID"
        },
        "currency": {
          "$ref": "objects.json#/definitions/market_currency"
        },
        "currency_text": {
          "type": "string",
          "description": "Currency name"
        },
        "is_show_header_items_link": {
          "description": "Shop header items link is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "enabled": {
          "description": "Information whether the market is enabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "main_album_id": {
          "type": "integer",
          "description": "Main market album ID"
        },
        "price_max": {
          "type": "string",
          "description": "Maximum price"
        },
        "price_min": {
          "type": "string",
          "description": "Minimum price"
        },
        "min_order_price": {
          "$ref": "objects.json#/definitions/market_price"
        }
      },
      "additionalProperties": false
    },
    "groups_market_properties": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "market": {
          "$ref": "objects.json#/definitions/groups_market_info"
        },
        "has_market_app": {
          "type": "boolean",
          "description": "Information whether community has installed market app"
        },
        "using_vkpay_market_app": {
          "type": "boolean"
        }
      }
    },
    "groups_market_state": {
      "type": "string",
      "description": "Declares state if market is enabled in group.",
      "enum": [
        "none",
        "basic",
        "advanced"
      ]
    },
    "groups_member_role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID",
          "required": true
        },
        "is_call_operator": {
          "type": "boolean",
          "description": "Allow the manager to accept community calls."
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/groups_member_role_permission"
          }
        },
        "role": {
          "$ref": "objects.json#/definitions/groups_member_role_status"
        }
      },
      "additionalProperties": false
    },
    "groups_member_role_permission": {
      "type": "string",
      "enum": [
        "ads"
      ]
    },
    "groups_member_role_status": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator",
        "advertiser"
      ]
    },
    "groups_member_status": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_member_status_full": {
      "type": "object",
      "properties": {
        "can_invite": {
          "description": "Information whether user can be invited",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_recall": {
          "description": "Information whether user's invite to the group can be recalled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "invitation": {
          "description": "Information whether user has been invited to the group",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "request": {
          "description": "Information whether user has send request to the group",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_online_status": {
      "type": "object",
      "description": "Online status of group",
      "properties": {
        "minutes": {
          "type": "integer",
          "description": "Estimated time of answer (for status = answer_mark)"
        },
        "status": {
          "$ref": "objects.json#/definitions/groups_online_status_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_online_status_type": {
      "type": "string",
      "description": "Type of online status of group",
      "enum": [
        "none",
        "online",
        "answer_mark"
      ]
    },
    "groups_owner_xtr_ban_info": {
      "type": "object",
      "properties": {
        "ban_info": {
          "$ref": "objects.json#/definitions/groups_ban_info"
        },
        "group": {
          "$ref": "objects.json#/definitions/groups_group",
          "description": "Information about group if type = group"
        },
        "profile": {
          "$ref": "objects.json#/definitions/users_user",
          "description": "Information about group if type = profile"
        },
        "type": {
          "$ref": "objects.json#/definitions/groups_owner_xtr_ban_info_type"
        }
      },
      "additionalProperties": false
    },
    "groups_owner_xtr_ban_info_type": {
      "type": "string",
      "description": "Owner type",
      "enum": [
        "group",
        "profile"
      ]
    },
    "groups_photo_size": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Image height",
          "minimum": 0,
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Image width",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_profile_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User id",
          "required": true
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "Url for user photo",
          "required": true
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "Url for user photo",
          "required": true
        },
        "first_name": {
          "type": "string",
          "description": "User first name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_role_options": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator"
      ]
    },
    "groups_sections_list_item": {
      "type": "object",
      "$ref": "objects.json#/definitions/base_object"
    },
    "groups_settings_twitter": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "loading",
            "sync"
          ],
          "required": true
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "groups_subject_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Subject ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Subject title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_token_permission_setting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "setting": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_user_xtr_role": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_full"
        },
        {
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/groups_member_role_permission"
              }
            },
            "role": {
              "$ref": "objects.json#/definitions/groups_role_options"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "leadForms_answer": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "required": true
        },
        "answer": {
          "$ref": "objects.json#/definitions/leadForms_answer_one_of",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_answer_item": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_answer_one_of": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/leadForms_answer_item"
        },
        {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/leadForms_answer_item"
          }
        }
      ]
    },
    "leadForms_form": {
      "type": "object",
      "properties": {
        "form_id": {
          "type": "integer",
          "required": true
        },
        "group_id": {
          "type": "integer",
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "photo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "confirmation": {
          "type": "string"
        },
        "site_link_url": {
          "type": "string",
          "format": "uri"
        },
        "policy_link_url": {
          "type": "string",
          "format": "uri"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/leadForms_question_item"
          }
        },
        "active": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "leads_count": {
          "type": "integer",
          "required": true
        },
        "pixel_code": {
          "type": "string"
        },
        "once_per_user": {
          "type": "integer"
        },
        "notify_admins": {
          "type": "string"
        },
        "notify_emails": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_lead": {
      "type": "object",
      "properties": {
        "lead_id": {
          "type": "integer",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "date": {
          "type": "integer",
          "required": true
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/leadForms_answer"
          },
          "required": true
        },
        "ad_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "leadForms_question_item": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string",
          "enum": [
            "input",
            "textarea",
            "radio",
            "checkbox",
            "select"
          ],
          "required": true
        },
        "label": {
          "type": "string"
        },
        "options": {
          "description": "Опции выбора для типов radio, checkbox, select",
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/leadForms_question_item_option"
          }
        }
      },
      "additionalProperties": false
    },
    "leadForms_question_item_option": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "likes_type": {
      "type": "string",
      "enum": [
        "post",
        "comment",
        "photo",
        "audio",
        "video",
        "note",
        "market",
        "photo_comment",
        "video_comment",
        "topic_comment",
        "market_comment",
        "sitepage",
        "textpost",
        "community_review",
        "story",
        "group_like"
      ]
    },
    "link_target_object": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Object type"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner ID",
          "entity": "owner",
          "format": "int64"
        },
        "item_id": {
          "type": "integer",
          "description": "Item ID"
        }
      },
      "additionalProperties": false
    },
    "market_currency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Currency ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Currency sign",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Currency title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_global_search_filters": {
      "type": "object",
      "properties": {
        "city": {
          "$ref": "objects.json#/definitions/base_city"
        },
        "country": {
          "$ref": "objects.json#/definitions/base_country"
        }
      },
      "additionalProperties": false
    },
    "market_item_owner_info": {
      "description": "Information about the group where the item is placed",
      "type": "object",
      "properties": {
        "avatar": {
          "description": "Avatar of the group",
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "name": {
          "description": "Name of the group",
          "type": "string"
        },
        "category": {
          "description": "Category of the item or description of the group",
          "type": "string"
        },
        "category_url": {
          "description": "Link to the section of the group",
          "type": "string"
        },
        "is_corporated_market": {
          "description": "Is the group is VK corporated market",
          "type": "boolean"
        },
        "market_type": {
          "description": "Type of the market group",
          "$ref": "objects.json#/definitions/market_owner_type"
        }
      },
      "additionalProperties": false
    },
    "market_item_promotion_info": {
      "description": "Information about promotion of the market item",
      "type": "object",
      "properties": {
        "is_available": {
          "description": "Can the item be promoted?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "market_market_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Market album ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Market album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Market album title",
          "required": true
        },
        "count": {
          "type": "integer",
          "description": "Items number",
          "minimum": 0,
          "required": true
        },
        "is_main": {
          "type": "boolean",
          "description": "Is album main for owner"
        },
        "is_hidden": {
          "type": "boolean",
          "description": "Is album hidden"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "updated_time": {
          "type": "integer",
          "description": "Date when album has been updated last time in Unixtime",
          "minimum": 0,
          "required": true
        },
        "type": {
          "type": "integer",
          "description": "Type of album",
          "enum": [
            0,
            1
          ],
          "enumNames": [
            "market",
            "market_services"
          ]
        },
        "is_blur_enabled": {
          "type": "boolean",
          "description": "Is album needed to be blurred (18+) or not"
        }
      },
      "additionalProperties": false
    },
    "market_market_category": {
      "type": "object",
      "$ref": "objects.json#/definitions/market_market_category_nested"
    },
    "market_market_category_nested": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "is_v2": {
          "type": "boolean",
          "description": "Is v2 category",
          "default": false
        },
        "parent": {
          "$ref": "objects.json#/definitions/market_market_category_nested"
        }
      },
      "additionalProperties": false
    },
    "market_market_category_tree": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "icon_name": {
          "type": "string",
          "description": "Icon name"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/market_market_category_tree"
          }
        },
        "view": {
          "$ref": "objects.json#/definitions/market_market_category_tree_view"
        },
        "url": {
          "type": "string",
          "description": "SEO-friendly URL to page with category's items"
        }
      },
      "additionalProperties": false
    },
    "market_market_category_tree_view": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "tab_root"
          ],
          "default": "tab_root"
        },
        "selected": {
          "type": "boolean",
          "default": false
        },
        "root_path": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Category names from current category up to root category"
          }
        }
      },
      "additionalProperties": false
    },
    "market_market_item": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the market item"
        },
        "availability": {
          "$ref": "objects.json#/definitions/market_market_item_availability",
          "required": true
        },
        "button_title": {
          "type": "string",
          "description": "Title for button for url"
        },
        "category": {
          "$ref": "objects.json#/definitions/market_market_category",
          "required": true
        },
        "category_v2": {
          "$ref": "objects.json#/definitions/market_market_category"
        },
        "date": {
          "type": "integer",
          "description": "Date when the item has been created in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Item description",
          "required": true
        },
        "external_id": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "description": "Item ID",
          "minimum": 0,
          "required": true
        },
        "is_favorite": {
          "type": "boolean"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Item owner's ID",
          "format": "int64",
          "required": true
        },
        "is_owner": {
          "type": "boolean"
        },
        "is_adult": {
          "type": "boolean"
        },
        "price": {
          "$ref": "objects.json#/definitions/market_price",
          "required": true
        },
        "thumb_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "title": {
          "type": "string",
          "description": "Item title",
          "required": true
        },
        "url": {
          "type": "string",
          "description": "URL to item"
        },
        "variants_grouping_id": {
          "type": "integer",
          "minimum": 0
        },
        "is_main_variant": {
          "type": "boolean"
        },
        "sku": {
          "type": "string",
          "maxLength": 50
        },
        "stock_amount": {
          "description": "Inventory balances",
          "type": "integer"
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Attach for post id"
        },
        "post_owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Attach for post owner id"
        }
      },
      "additionalProperties": false
    },
    "market_market_item_availability": {
      "type": "integer",
      "description": "Information whether the item is available",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "available",
        "removed",
        "unavailable"
      ]
    },
    "market_market_item_basic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Item ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Item owner's ID",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Item title",
          "required": true
        },
        "price": {
          "$ref": "objects.json#/definitions/market_price",
          "required": true
        },
        "thumb_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "is_favorite": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "market_market_item_basic_with_group": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/market_market_item_basic"
        },
        {
          "properties": {
            "is_group_verified": {
              "type": "boolean"
            },
            "group_name": {
              "type": "string"
            },
            "group_link": {
              "type": "string"
            },
            "is_owner": {
              "type": "boolean"
            },
            "is_adult": {
              "type": "boolean"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "market_market_item_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        {
          "properties": {
            "albums_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/photos_photo"
              }
            },
            "can_comment": {
              "description": "Information whether current use can comment the item",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_repost": {
              "description": "Information whether current use can repost the item",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes"
            },
            "reposts": {
              "$ref": "objects.json#/definitions/base_reposts_info"
            },
            "views_count": {
              "type": "integer",
              "description": "Views number"
            },
            "wishlist_item_id": {
              "type": "integer",
              "description": "Object identifier in wishlist of viewer"
            },
            "rating": {
              "type": "number",
              "description": "Rating of product",
              "minimum": 0,
              "maximum": 5
            },
            "orders_count": {
              "type": "integer",
              "description": "Count of product orders",
              "minimum": 0
            },
            "cancel_info": {
              "description": "Information for cancel and revert order",
              "$ref": "objects.json#/definitions/base_link"
            },
            "user_agreement_info": {
              "description": "User agreement info",
              "type": "string"
            },
            "ad_id": {
              "description": "Contains ad ID if it has",
              "type": "integer"
            },
            "owner_info": {
              "description": "Information about the group where the item is placed",
              "$ref": "objects.json#/definitions/market_item_owner_info"
            },
            "can_edit": {
              "description": "Can the item be updated by current user?",
              "type": "boolean"
            },
            "can_delete": {
              "description": "Can item be deleted by current user?",
              "type": "boolean"
            },
            "can_show_convert_to_service": {
              "description": "Can the item be converted from a product into a service?",
              "type": "boolean"
            },
            "promotion": {
              "description": "Information about promotion of the item",
              "$ref": "objects.json#/definitions/market_item_promotion_info"
            },
            "vk_pay_discount": {
              "description": "The amount of the discount if VK Pay is used for payment",
              "type": "integer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "market_order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "group_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "display_order_id": {
          "type": "string"
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "status": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "items_count": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "track_number": {
          "type": "string"
        },
        "track_link": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "merchant_comment": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "minimum": 0
        },
        "total_price": {
          "$ref": "objects.json#/definitions/market_price",
          "required": true
        },
        "discount": {
          "$ref": "objects.json#/definitions/market_price"
        },
        "preview_order_items": {
          "type": "array",
          "description": "Several order items for preview",
          "items": {
            "$ref": "objects.json#/definitions/market_order_item"
          }
        },
        "cancel_info": {
          "description": "Information for cancel and revert order",
          "$ref": "objects.json#/definitions/base_link"
        },
        "comment_for_user": {
          "description": "Seller comment for user",
          "type": "string"
        },
        "is_viewed_by_admin": {
          "type": "boolean"
        },
        "date_viewed": {
          "type": "integer",
          "minimum": 0
        },
        "can_add_review": {
          "type": "boolean",
          "description": "Extended field. Can current viewer add review for at least one item in this order"
        }
      },
      "additionalProperties": false
    },
    "market_order_item": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "item_id": {
          "type": "integer",
          "required": true
        },
        "price": {
          "$ref": "objects.json#/definitions/market_price",
          "required": true
        },
        "quantity": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "item": {
          "$ref": "objects.json#/definitions/market_market_item",
          "required": true
        },
        "title": {
          "type": "string"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "variants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "can_add_review": {
          "type": "boolean",
          "description": "Extended field. Can current viewer add review for this ordered item"
        }
      },
      "additionalProperties": false
    },
    "market_owner_type": {
      "description": "Type of the market group",
      "type": "string",
      "enum": [
        "base",
        "pro",
        "disabled"
      ]
    },
    "market_price": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount",
          "required": true
        },
        "amount_to": {
          "type": "string",
          "description": "Amount to for price_type=2"
        },
        "price_type": {
          "type": "integer",
          "enum": [
            0,
            2,
            3
          ],
          "enumNames": [
            "exact",
            "range",
            "by_agreement"
          ]
        },
        "price_unit": {
          "type": "integer",
          "enum": [
            0,
            2,
            3,
            4
          ],
          "enumNames": [
            "item",
            "hour",
            "m3",
            "m2"
          ]
        },
        "currency": {
          "$ref": "objects.json#/definitions/market_currency",
          "required": true
        },
        "discount_rate": {
          "type": "integer"
        },
        "old_amount": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Text",
          "required": true
        },
        "old_amount_text": {
          "type": "string",
          "description": "Textual representation of old price"
        }
      },
      "additionalProperties": false
    },
    "market_services_view_type": {
      "type": "integer",
      "description": "Type of view. 1 - cards, 2 - rows",
      "enum": [
        1,
        2
      ],
      "enumNames": [
        "cards",
        "rows"
      ]
    },
    "messages_action_one_of": {
      "type": "object",
      "$ref": "objects.json#/definitions/messages_message_action"
    },
    "messages_audio_message": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for audio message"
        },
        "transcript_error": {
          "type": "integer",
          "minimum": 1,
          "maximum": 11
        },
        "duration": {
          "type": "integer",
          "description": "Audio message duration in seconds",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Audio message ID",
          "minimum": 0,
          "required": true
        },
        "link_mp3": {
          "type": "string",
          "format": "uri",
          "description": "MP3 file URL",
          "required": true
        },
        "link_ogg": {
          "type": "string",
          "format": "uri",
          "description": "OGG file URL",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Audio message owner ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "waveform": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Sound visualisation",
            "minimum": 0
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_chat": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Chat creator ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Chat ID",
          "required": true
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50 px in width"
        },
        "push_settings": {
          "$ref": "objects.json#/definitions/messages_chat_push_settings"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "type": {
          "type": "string",
          "description": "Chat type",
          "required": true
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "User ID"
          },
          "required": true
        },
        "is_default_photo": {
          "type": "boolean",
          "description": "If provided photo is default"
        },
        "members_count": {
          "type": "integer",
          "description": "Count members in a chat",
          "required": true
        },
        "is_group_channel": {
          "type": "boolean",
          "description": "If chat is group channel"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_full": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Chat creator ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Chat ID",
          "required": true
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50 px in width"
        },
        "push_settings": {
          "$ref": "objects.json#/definitions/messages_chat_push_settings"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "type": {
          "type": "string",
          "description": "Chat type",
          "required": true
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_user_xtr_invited_by"
          },
          "required": true
        },
        "is_default_photo": {
          "type": "boolean",
          "description": "If provided photo is default"
        },
        "members_count": {
          "type": "integer",
          "description": "Count members in a chat",
          "required": true
        },
        "is_group_channel": {
          "type": "boolean",
          "description": "If chat is group channel"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_preview": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "minimum": 0
        },
        "joined": {
          "type": "boolean"
        },
        "local_id": {
          "type": "integer"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner"
          }
        },
        "members_count": {
          "type": "integer",
          "minimum": 0
        },
        "title": {
          "type": "string"
        },
        "is_member": {
          "type": "boolean"
        },
        "photo": {
          "$ref": "objects.json#/definitions/messages_chat_settings_photo"
        },
        "is_don": {
          "type": "boolean"
        },
        "is_nft": {
          "type": "boolean"
        },
        "is_group_channel": {
          "type": "boolean"
        },
        "button": {
          "$ref": "objects.json#/definitions/base_link_button"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_push_settings": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled"
        },
        "sound": {
          "description": "Information whether the sound is on",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_restrictions": {
      "type": "object",
      "properties": {
        "admins_promote_users": {
          "type": "boolean",
          "description": "Only admins can promote users to admins"
        },
        "only_admins_edit_info": {
          "type": "boolean",
          "description": "Only admins can change chat info"
        },
        "only_admins_edit_pin": {
          "type": "boolean",
          "description": "Only admins can edit pinned message"
        },
        "only_admins_invite": {
          "type": "boolean",
          "description": "Only admins can invite users to this chat"
        },
        "only_admins_kick": {
          "type": "boolean",
          "description": "Only admins can kick users from this chat"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings": {
      "type": "object",
      "properties": {
        "members_count": {
          "type": "integer"
        },
        "friends_count": {
          "type": "integer"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Chat title",
          "required": true
        },
        "pinned_message": {
          "$ref": "objects.json#/definitions/messages_pinned_message"
        },
        "state": {
          "$ref": "objects.json#/definitions/messages_chat_settings_state",
          "required": true
        },
        "photo": {
          "$ref": "objects.json#/definitions/messages_chat_settings_photo"
        },
        "admin_ids": {
          "type": "array",
          "description": "Ids of chat admins",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "Admin id"
          }
        },
        "active_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "Active member ID"
          }
        },
        "is_group_channel": {
          "type": "boolean"
        },
        "acl": {
          "$ref": "objects.json#/definitions/messages_chat_settings_acl",
          "required": true
        },
        "permissions": {
          "$ref": "objects.json#/definitions/messages_chat_settings_permissions"
        },
        "is_disappearing": {
          "type": "boolean"
        },
        "theme": {
          "type": "string"
        },
        "disappearing_chat_link": {
          "type": "string"
        },
        "is_service": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_acl": {
      "type": "object",
      "properties": {
        "can_change_info": {
          "type": "boolean",
          "description": "Can you change photo, description and name",
          "required": true
        },
        "can_change_invite_link": {
          "type": "boolean",
          "description": "Can you change invite link for this chat",
          "required": true
        },
        "can_change_pin": {
          "type": "boolean",
          "description": "Can you pin/unpin message for this chat",
          "required": true
        },
        "can_invite": {
          "type": "boolean",
          "description": "Can you invite other peers in chat",
          "required": true
        },
        "can_promote_users": {
          "type": "boolean",
          "description": "Can you promote simple users to chat admins",
          "required": true
        },
        "can_see_invite_link": {
          "type": "boolean",
          "description": "Can you see invite link for this chat",
          "required": true
        },
        "can_moderate": {
          "type": "boolean",
          "description": "Can you moderate (delete) other users' messages",
          "required": true
        },
        "can_copy_chat": {
          "type": "boolean",
          "description": "Can you copy chat",
          "required": true
        },
        "can_call": {
          "type": "boolean",
          "description": "Can you init group call in the chat",
          "required": true
        },
        "can_use_mass_mentions": {
          "type": "boolean",
          "description": "Can you use mass mentions",
          "required": true
        },
        "can_change_service_type": {
          "type": "boolean",
          "description": "Can you change chat service type"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_permissions": {
      "type": "object",
      "properties": {
        "invite": {
          "type": "string",
          "description": "Who can invite users to chat",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "change_info": {
          "type": "string",
          "description": "Who can change chat info",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "change_pin": {
          "type": "string",
          "description": "Who can change pinned message",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "use_mass_mentions": {
          "type": "string",
          "description": "Who can use mass mentions",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "see_invite_link": {
          "type": "string",
          "description": "Who can see invite link",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "call": {
          "type": "string",
          "description": "Who can make calls",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "change_admins": {
          "type": "string",
          "description": "Who can change admins",
          "enum": [
            "owner",
            "owner_and_admins"
          ]
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_photo": {
      "type": "object",
      "properties": {
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50px in width"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200px in width"
        },
        "is_default_photo": {
          "type": "boolean",
          "description": "If provided photo is default"
        },
        "is_default_call_photo": {
          "type": "boolean",
          "description": "If provided photo is default call photo"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_state": {
      "type": "string",
      "enum": [
        "in",
        "kicked",
        "left",
        "out"
      ]
    },
    "messages_conversation": {
      "type": "object",
      "properties": {
        "peer": {
          "$ref": "objects.json#/definitions/messages_conversation_peer",
          "required": true
        },
        "sort_id": {
          "$ref": "objects.json#/definitions/messages_conversation_sort_id"
        },
        "last_message_id": {
          "type": "integer",
          "minimum": 0,
          "description": "ID of the last message in conversation",
          "required": true
        },
        "last_conversation_message_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Conversation message ID of the last message in conversation"
        },
        "in_read": {
          "type": "integer",
          "minimum": 0,
          "description": "Last message user have read",
          "required": true
        },
        "out_read": {
          "type": "integer",
          "minimum": 0,
          "description": "Last outcoming message have been read by the opponent",
          "required": true
        },
        "unread_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Unread messages number"
        },
        "is_marked_unread": {
          "type": "boolean",
          "description": "Is this conversation uread"
        },
        "out_read_by": {
          "$ref": "objects.json#/definitions/messages_out_read_by"
        },
        "important": {
          "type": "boolean"
        },
        "unanswered": {
          "type": "boolean"
        },
        "special_service_type": {
          "type": "string",
          "enum": [
            "business_notify"
          ],
          "default": "business_notify"
        },
        "message_request_data": {
          "$ref": "objects.json#/definitions/messages_message_request_data"
        },
        "mentions": {
          "type": "array",
          "description": "Ids of messages with mentions",
          "items": {
            "type": "integer",
            "description": "Message id of message with mention"
          }
        },
        "current_keyboard": {
          "$ref": "objects.json#/definitions/messages_keyboard"
        },
        "push_settings": {
          "$ref": "objects.json#/definitions/messages_push_settings"
        },
        "can_write": {
          "$ref": "objects.json#/definitions/messages_conversation_can_write"
        },
        "chat_settings": {
          "$ref": "objects.json#/definitions/messages_chat_settings"
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_can_write": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean",
          "required": true
        },
        "reason": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_member": {
      "type": "object",
      "properties": {
        "can_kick": {
          "type": "boolean",
          "description": "Is it possible for user to kick this member"
        },
        "invited_by": {
          "type": "integer",
          "format": "int64",
          "entity": "owner"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_owner": {
          "type": "boolean"
        },
        "is_message_request": {
          "type": "boolean"
        },
        "join_date": {
          "type": "integer",
          "minimum": 0
        },
        "request_date": {
          "type": "integer",
          "minimum": 0,
          "description": "Message request date"
        },
        "member_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer",
          "required": true
        },
        "local_id": {
          "type": "integer"
        },
        "type": {
          "$ref": "objects.json#/definitions/messages_conversation_peer_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_peer_type": {
      "type": "string",
      "enum": [
        "chat",
        "email",
        "user",
        "group"
      ],
      "description": "Peer type"
    },
    "messages_conversation_sort_id": {
      "type": "object",
      "properties": {
        "major_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Major id for sorting conversations",
          "required": true
        },
        "minor_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Minor id for sorting conversations",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_with_message": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "objects.json#/definitions/messages_conversation",
          "required": true
        },
        "last_message": {
          "$ref": "objects.json#/definitions/messages_message"
        }
      },
      "additionalProperties": false
    },
    "messages_delete_full_response_item": {
      "type": "object",
      "properties": {
        "peer_id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer"
        },
        "message_id": {
          "type": "integer",
          "minimum": 0
        },
        "conversation_message_id": {
          "type": "integer",
          "minimum": 0
        },
        "response": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "error": {
          "$ref": "objects.json#/definitions/base_message_error"
        }
      },
      "additionalProperties": false
    },
    "messages_foreign_message": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Conversation message ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message was created",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "fwd_messages": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "objects.json#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "peer_id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer",
          "description": "Peer ID"
        },
        "reply_message": {
          "$ref": "objects.json#/definitions/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "was_listened": {
          "type": "boolean",
          "description": "Was the audio message inside already listened by you"
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        }
      },
      "additionalProperties": false
    },
    "messages_forward": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "description": "Messages owner_id",
          "entity": "owner",
          "format": "int64"
        },
        "peer_id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer",
          "description": "Messages peer_id"
        },
        "conversation_message_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Message conversation_message_id"
          }
        },
        "message_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Message message_id"
          }
        },
        "is_reply": {
          "type": "boolean",
          "description": "If you need to reply to a message"
        }
      },
      "additionalProperties": false
    },
    "messages_fwd_messages": {
      "type": "array",
      "description": "Forwarded messages",
      "items": {
        "$ref": "objects.json#/definitions/messages_foreign_message"
      }
    },
    "messages_getConversationById": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number",
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_conversation"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getConversationById_extended": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/messages_getConversationById"
        },
        {
          "type": "object",
          "properties": {
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/groups_group_full"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "messages_getConversationMembers": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_conversation_member"
          },
          "required": true
        },
        "count": {
          "type": "integer",
          "description": "Chat members count",
          "minimum": 0,
          "required": true
        },
        "chat_restrictions": {
          "$ref": "objects.json#/definitions/messages_chat_restrictions"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/users_user_full"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/groups_group_full"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_graffiti": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for graffiti"
        },
        "id": {
          "type": "integer",
          "description": "Graffiti ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti URL",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_history_attachment": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "objects.json#/definitions/messages_history_message_attachment",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Message sending time",
          "required": true
        },
        "message_id": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        },
        "message_expire_ttl": {
          "type": "integer",
          "description": "Message Exipire ttl"
        },
        "cmid": {
          "type": "integer",
          "description": "Conversation Message ID"
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "forward_level": {
          "type": "integer",
          "description": "Forward level (optional)"
        },
        "was_listened": {
          "type": "boolean"
        },
        "position": {
          "type": "integer",
          "description": "Attachment position in the Message"
        }
      },
      "additionalProperties": false
    },
    "messages_history_message_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        },
        "audio_message": {
          "$ref": "objects.json#/definitions/messages_audio_message"
        },
        "doc": {
          "$ref": "objects.json#/definitions/docs_doc"
        },
        "graffiti": {
          "$ref": "objects.json#/definitions/messages_graffiti"
        },
        "market": {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "type": {
          "$ref": "objects.json#/definitions/messages_history_message_attachment_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_history_message_attachment_type": {
      "type": "string",
      "description": "Attachments type",
      "enum": [
        "photo",
        "video",
        "audio",
        "doc",
        "link",
        "market",
        "wall",
        "share",
        "app_action",
        "graffiti",
        "audio_message"
      ]
    },
    "messages_keyboard": {
      "type": "object",
      "properties": {
        "one_time": {
          "type": "boolean",
          "description": "Should this keyboard disappear on first use",
          "required": true
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "objects.json#/definitions/messages_keyboard_button"
            }
          },
          "required": true
        },
        "author_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Community or bot, which set this keyboard"
        },
        "inline": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "objects.json#/definitions/messages_keyboard_button_property_action",
          "required": true
        },
        "color": {
          "type": "string",
          "enum": [
            "default",
            "positive",
            "negative",
            "primary"
          ],
          "description": "Button color"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_callback": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "callback"
          ],
          "default": "callback"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_location": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "location"
          ],
          "default": "location"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_open_app": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "app_id": {
          "type": "integer",
          "description": "Fragment value in app link like vk.com/app{app_id}_-654321#hash",
          "required": true
        },
        "hash": {
          "type": "string",
          "description": "Fragment value in app link like vk.com/app123456_-654321#{hash}"
        },
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Fragment value in app link like vk.com/app123456_{owner_id}#hash",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "open_app"
          ],
          "default": "open_app"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_open_link": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "link": {
          "type": "string",
          "description": "link for button",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "open_link"
          ],
          "default": "open_link"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_open_photo": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "open_photo"
          ],
          "default": "open_photo"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_text": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "text"
          ],
          "default": "text"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_vkpay": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Fragment value in app link like vk.com/app123456_-654321#{hash}",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "vkpay"
          ],
          "default": "vkpay"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_property_action": {
      "type": "object",
      "discriminator": {
        "propertyName": "type",
        "mapping": {
          "location": "objects.json#/definitions/messages_keyboard_button_action_location",
          "open_app": "objects.json#/definitions/messages_keyboard_button_action_open_app",
          "open_link": "objects.json#/definitions/messages_keyboard_button_action_open_link",
          "open_photo": "objects.json#/definitions/messages_keyboard_button_action_open_photo",
          "text": "objects.json#/definitions/messages_keyboard_button_action_text",
          "callback": "objects.json#/definitions/messages_keyboard_button_action_callback",
          "vkpay": "objects.json#/definitions/messages_keyboard_button_action_vkpay"
        }
      },
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_location"
        },
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_open_app"
        },
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_open_link"
        },
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_open_photo"
        },
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_text"
        },
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_callback"
        },
        {
          "$ref": "objects.json#/definitions/messages_keyboard_button_action_vkpay"
        }
      ]
    },
    "messages_last_activity": {
      "type": "object",
      "properties": {
        "online": {
          "description": "Information whether user is online",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "time": {
          "type": "integer",
          "description": "Time when user was online in Unixtime",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_longpoll_messages": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_message"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_longpoll_params": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "Server URL",
          "required": true
        },
        "key": {
          "type": "string",
          "description": "Key",
          "required": true
        },
        "ts": {
          "type": "integer",
          "description": "Timestamp",
          "required": true
        },
        "pts": {
          "type": "integer",
          "description": "Persistent timestamp"
        }
      },
      "additionalProperties": false
    },
    "messages_message": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "objects.json#/definitions/messages_action_one_of"
        },
        "admin_author_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Only for messages from community. Contains user ID of community admin, who sent this message."
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime",
          "required": true
        },
        "deleted": {
          "description": "Is it an deleted message",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "fwd_messages": {
          "$ref": "objects.json#/definitions/messages_fwd_messages"
        },
        "geo": {
          "$ref": "objects.json#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        },
        "important": {
          "type": "boolean",
          "description": "Is it an important message"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "is_cropped": {
          "type": "boolean",
          "description": "this message is cropped for bot"
        },
        "keyboard": {
          "$ref": "objects.json#/definitions/messages_keyboard"
        },
        "members_count": {
          "type": "integer",
          "description": "Members number"
        },
        "out": {
          "description": "Information whether the message is outcoming",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "payload": {
          "type": "string"
        },
        "peer_id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer",
          "description": "Peer ID",
          "required": true
        },
        "random_id": {
          "type": "integer",
          "description": "ID used for sending messages. It returned only for outgoing messages"
        },
        "ref": {
          "type": "string"
        },
        "ref_source": {
          "type": "string"
        },
        "reply_message": {
          "$ref": "objects.json#/definitions/messages_foreign_message"
        },
        "reaction_id": {
          "type": "integer",
          "description": "Reaction id set on message"
        },
        "reactions": {
          "type": "array",
          "description": "Actual reactions counters on this message",
          "items": {
            "$ref": "objects.json#/definitions/messages_reaction_counter_response_item"
          }
        },
        "last_reaction_id": {
          "type": "integer",
          "description": "Last reaction id set on this message"
        },
        "text": {
          "type": "string",
          "description": "Message text",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "was_listened": {
          "type": "boolean",
          "description": "Was the audio message inside already listened by you"
        },
        "pinned_at": {
          "type": "integer",
          "description": "Date when the message has been pinned in Unixtime"
        },
        "is_silent": {
          "type": "boolean",
          "description": "Is silent message, push without sound"
        }
      },
      "additionalProperties": false
    },
    "messages_message_action": {
      "type": "object",
      "properties": {
        "conversation_message_id": {
          "type": "integer",
          "description": "Message ID"
        },
        "email": {
          "type": "string",
          "description": "Email address for chat_invite_user or chat_kick_user actions"
        },
        "member_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "User or email peer ID"
        },
        "message": {
          "type": "string",
          "description": "Message body of related message"
        },
        "photo": {
          "$ref": "objects.json#/definitions/messages_message_action_photo"
        },
        "text": {
          "type": "string",
          "description": "New chat title for chat_create and chat_title_update actions"
        },
        "type": {
          "$ref": "objects.json#/definitions/messages_message_action_status",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_message_action_photo": {
      "type": "object",
      "properties": {
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50px in width",
          "required": true
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100px in width",
          "required": true
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200px in width",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_message_action_status": {
      "type": "string",
      "description": "Action status",
      "enum": [
        "chat_photo_update",
        "chat_photo_remove",
        "chat_create",
        "chat_title_update",
        "chat_invite_user",
        "chat_kick_user",
        "chat_pin_message",
        "chat_unpin_message",
        "chat_invite_user_by_link",
        "chat_invite_user_by_message_request",
        "chat_screenshot"
      ]
    },
    "messages_message_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        },
        "audio_message": {
          "$ref": "objects.json#/definitions/messages_audio_message"
        },
        "call": {
          "$ref": "objects.json#/definitions/calls_call"
        },
        "doc": {
          "$ref": "objects.json#/definitions/docs_doc"
        },
        "gift": {
          "$ref": "objects.json#/definitions/gifts_layout"
        },
        "graffiti": {
          "$ref": "objects.json#/definitions/messages_graffiti"
        },
        "market": {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        "market_market_album": {
          "$ref": "objects.json#/definitions/market_market_album"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "sticker": {
          "$ref": "objects.json#/definitions/base_sticker"
        },
        "story": {
          "$ref": "objects.json#/definitions/stories_story"
        },
        "type": {
          "$ref": "objects.json#/definitions/messages_message_attachment_type",
          "required": true
        },
        "wall_reply": {
          "$ref": "objects.json#/definitions/wall_wall_comment"
        },
        "poll": {
          "$ref": "objects.json#/definitions/polls_poll"
        }
      },
      "additionalProperties": false
    },
    "messages_message_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "video_playlist",
        "doc",
        "link",
        "market",
        "market_album",
        "gift",
        "sticker",
        "wall",
        "wall_reply",
        "article",
        "poll",
        "call",
        "graffiti",
        "audio_message"
      ]
    },
    "messages_message_request_data": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of message request"
        },
        "inviter_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message request sender id"
        },
        "request_date": {
          "type": "integer",
          "description": "Message request date"
        }
      },
      "additionalProperties": false
    },
    "messages_messages_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_message"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_out_read_by": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "member_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "Member IDs"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_pinned_message": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "id": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "objects.json#/definitions/base_geo"
        },
        "peer_id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer",
          "description": "Peer ID",
          "required": true
        },
        "reply_message": {
          "$ref": "objects.json#/definitions/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text",
          "required": true
        },
        "keyboard": {
          "$ref": "objects.json#/definitions/messages_keyboard"
        }
      },
      "additionalProperties": false
    },
    "messages_push_settings": {
      "type": "object",
      "properties": {
        "disabled_forever": {
          "type": "boolean",
          "description": "Information whether push notifications are disabled forever",
          "required": true
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until what notifications are disabled"
        },
        "no_sound": {
          "type": "boolean",
          "description": "Information whether the sound is on",
          "required": true
        },
        "disabled_mentions": {
          "type": "boolean",
          "description": "Information whether the mentions are disabled"
        },
        "disabled_mass_mentions": {
          "type": "boolean",
          "description": "Information whether the mass mentions (like '@all', '@online') are disabled"
        }
      },
      "additionalProperties": false
    },
    "messages_reaction_asset_item": {
      "type": "object",
      "properties": {
        "reaction_id": {
          "type": "integer",
          "required": true
        },
        "links": {
          "$ref": "objects.json#/definitions/messages_reaction_asset_item_links",
          "required": true,
          "description": "Liks to reactions assets for each asset type"
        }
      },
      "additionalProperties": false
    },
    "messages_reaction_asset_item_links": {
      "type": "object",
      "properties": {
        "big_animation": {
          "type": "string",
          "required": true,
          "description": "Big reaction animation json file"
        },
        "small_animation": {
          "type": "string",
          "required": true,
          "description": "Small reaction animation json file"
        },
        "static": {
          "type": "string",
          "required": true,
          "description": "Reaction image file"
        }
      },
      "additionalProperties": false
    },
    "messages_reaction_counter_response_item": {
      "type": "object",
      "properties": {
        "reaction_id": {
          "type": "integer",
          "required": true
        },
        "count": {
          "type": "integer",
          "required": true
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner"
          },
          "maxItems": 3,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_reaction_counters_response_item": {
      "type": "object",
      "properties": {
        "cmid": {
          "type": "integer",
          "required": true
        },
        "counters": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/messages_reaction_counter_response_item"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_reaction_response_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "reaction_id": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_send_user_ids_response_item": {
      "type": "object",
      "properties": {
        "peer_id": {
          "type": "integer",
          "format": "int64",
          "entity": "peer",
          "required": true
        },
        "message_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "conversation_message_id": {
          "type": "integer",
          "minimum": 0
        },
        "error": {
          "$ref": "objects.json#/definitions/base_message_error"
        }
      },
      "additionalProperties": false
    },
    "messages_template_action_type_names": {
      "type": "string",
      "description": "Template action type names",
      "enum": [
        "text",
        "start",
        "location",
        "vkpay",
        "open_app",
        "open_photo",
        "open_link",
        "callback",
        "intent_subscribe",
        "intent_unsubscribe",
        "open_modal_view"
      ]
    },
    "messages_user_type_for_xtr_invited_by": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "profile",
        "group"
      ]
    },
    "messages_user_xtr_invited_by": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_xtr_type"
        },
        {
          "properties": {
            "invited_by": {
              "type": "integer",
              "format": "int64",
              "entity": "owner",
              "description": "ID of the inviter"
            },
            "name": {
              "type": "string",
              "description": "Name of group"
            },
            "type": {
              "$ref": "objects.json#/definitions/messages_user_type_for_xtr_invited_by"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_base": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/base_comments_info"
        },
        {
          "properties": {
            "list": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/wall_wall_comment"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_filters": {
      "type": "string",
      "enum": [
        "post",
        "photo",
        "video",
        "topic",
        "note"
      ]
    },
    "newsfeed_comments_item": {
      "type": "object",
      "discriminator": {
        "propertyName": "type",
        "mapping": {
          "topic": "objects.json#/definitions/newsfeed_comments_item_type_topic",
          "photo": "objects.json#/definitions/newsfeed_comments_item_type_photo",
          "video": "objects.json#/definitions/newsfeed_comments_item_type_video",
          "notes": "objects.json#/definitions/newsfeed_comments_item_type_notes",
          "post": "objects.json#/definitions/newsfeed_comments_item_type_post",
          "market": "objects.json#/definitions/newsfeed_comments_item_type_market"
        }
      },
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_type_topic"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_type_photo"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_type_video"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_type_notes"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_type_post"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_type_market"
        }
      ]
    },
    "newsfeed_comments_item_base": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/newsfeed_newsfeed_item_type",
          "required": true
        },
        "source_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "date": {
          "type": "integer"
        },
        "post_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_comments_item_type_market": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_base"
        },
        {
          "properties": {
            "comments": {
              "$ref": "objects.json#/definitions/newsfeed_comments_base"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_item_type_notes": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_base"
        },
        {
          "properties": {
            "text": {
              "type": "string"
            },
            "comments": {
              "$ref": "objects.json#/definitions/newsfeed_comments_base"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_item_type_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_base"
        },
        {
          "properties": {
            "comments": {
              "$ref": "objects.json#/definitions/newsfeed_comments_base"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_item_type_post": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/wall_wallpost_full"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_base"
        },
        {
          "properties": {
            "from_id": {
              "type": "integer",
              "entity": "owner",
              "format": "int64"
            },
            "comments": {
              "$ref": "objects.json#/definitions/newsfeed_comments_base"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_item_type_topic": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_base"
        },
        {
          "properties": {
            "text": {
              "type": "string"
            },
            "comments": {
              "$ref": "objects.json#/definitions/newsfeed_comments_base"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_comments_item_type_video": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/video_video"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_comments_item_base"
        },
        {
          "properties": {
            "text": {
              "type": "string"
            },
            "comments": {
              "$ref": "objects.json#/definitions/newsfeed_comments_base"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes"
            },
            "type": {
              "type": "string",
              "enum": [
                "video",
                "music_video",
                "movie",
                "live",
                "short_video"
              ]
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_ignore_item_type": {
      "type": "string",
      "enum": [
        "wall",
        "tag",
        "profilephoto",
        "video",
        "photo",
        "audio"
      ],
      "enumNames": [
        "post on the wall",
        "tag on a photo",
        "profile photo",
        "video",
        "photo",
        "audio"
      ]
    },
    "newsfeed_item_audio": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "audio": {
              "$ref": "objects.json#/definitions/newsfeed_item_audio_audio"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_audio_audio": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Audios number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/audio_audio"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_base": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/newsfeed_newsfeed_item_type",
          "required": true
        },
        "source_id": {
          "type": "integer",
          "description": "Item source ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when item has been added in Unixtime",
          "required": true
        },
        "short_text_rate": {
          "type": "number",
          "description": "Preview length control parameter",
          "minimum": 0,
          "maximum": 1
        },
        "feedback": {
          "$ref": "objects.json#/definitions/newsfeed_item_wallpost_feedback"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "feed_id": {
              "type": "string",
              "description": "id of feed in digest"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/newsfeed_item_digest_item"
              }
            },
            "main_post_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "template": {
              "type": "string",
              "enum": [
                "list",
                "grid",
                "single"
              ],
              "description": "type of digest"
            },
            "header": {
              "$ref": "objects.json#/definitions/newsfeed_item_digest_header"
            },
            "footer": {
              "$ref": "objects.json#/definitions/newsfeed_item_digest_footer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_digest_button": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "style": {
          "type": "string",
          "enum": [
            "primary"
          ],
          "default": "primary"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_footer": {
      "type": "object",
      "properties": {
        "style": {
          "type": "string",
          "enum": [
            "text",
            "button"
          ],
          "required": true
        },
        "text": {
          "type": "string",
          "description": "text for invite to enable smart feed",
          "required": true
        },
        "button": {
          "$ref": "objects.json#/definitions/newsfeed_item_digest_button"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_full_item": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "text": {
              "type": "string"
            },
            "source_name": {
              "type": "string"
            },
            "attachment_index": {
              "type": "integer"
            },
            "attachment": {
              "$ref": "objects.json#/definitions/wall_wallpost_attachment"
            },
            "style": {
              "type": "string",
              "enum": [
                "default",
                "inversed",
                "spotlight"
              ]
            },
            "post": {
              "$ref": "objects.json#/definitions/newsfeed_item_wallpost",
              "required": true
            },
            "badge_text": {
              "type": "string",
              "description": "Optional red badge for posts in digest block"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_digest_header": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the header",
          "required": true
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the header, when title have two strings"
        },
        "badge_text": {
          "type": "string",
          "description": "Optional field for red badge in Trends feed blocks"
        },
        "style": {
          "type": "string",
          "enum": [
            "singleline",
            "multiline"
          ],
          "required": true
        },
        "button": {
          "$ref": "objects.json#/definitions/newsfeed_item_digest_button"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_item": {
      "type": "object",
      "$ref": "objects.json#/definitions/newsfeed_item_digest_full_item"
    },
    "newsfeed_item_friend": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "friends": {
              "$ref": "objects.json#/definitions/newsfeed_item_friend_friends"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_friend_friends": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of friends has been added"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_user_id"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_holiday_recommendations_block_header": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the header"
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the header"
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "action": {
          "$ref": "objects.json#/definitions/base_link_button_action"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/wall_carousel_base"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "photos": {
              "$ref": "objects.json#/definitions/newsfeed_item_photo_photos"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_photo_photos": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Photos number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_photo_tag": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/wall_carousel_base"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "photo_tags": {
              "$ref": "objects.json#/definitions/newsfeed_item_photo_tag_photo_tags"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_photo_tag_photo_tags": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_promo_button": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "text": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "action": {
              "$ref": "objects.json#/definitions/newsfeed_item_promo_button_action"
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/newsfeed_item_promo_button_image"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_promo_button_action": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_promo_button_image": {
      "type": "object",
      "properties": {
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_topic": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "comments": {
              "$ref": "objects.json#/definitions/base_comments_info"
            },
            "likes": {
              "$ref": "objects.json#/definitions/base_likes_info"
            },
            "post_id": {
              "type": "integer",
              "description": "Topic post ID",
              "required": true
            },
            "text": {
              "type": "string",
              "description": "Post text",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_video": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/wall_carousel_base"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "video": {
              "$ref": "objects.json#/definitions/newsfeed_item_video_video"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_video_video": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/video_video_full"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_wallpost": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/wall_carousel_base"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_base"
        },
        {
          "$ref": "objects.json#/definitions/wall_wallpost_full"
        },
        {
          "properties": []
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_wallpost_feedback": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/newsfeed_item_wallpost_feedback_type",
          "required": true
        },
        "question": {
          "type": "string",
          "required": true
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/newsfeed_item_wallpost_feedback_answer"
          }
        },
        "stars_count": {
          "type": "integer",
          "minimum": 2,
          "maximum": 5
        },
        "descriptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        "gratitude": {
          "type": "string"
        },
        "track_code": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_wallpost_feedback_answer": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "id": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_wallpost_feedback_type": {
      "type": "string",
      "enum": [
        "buttons",
        "stars"
      ]
    },
    "newsfeed_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "List title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_list_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_list"
        },
        {
          "properties": {
            "no_reposts": {
              "description": "Information whether reposts hiding is enabled",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "source_ids": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "description": "Users and communities IDs",
                "entity": "owner"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_newsfeed_item": {
      "type": "object",
      "discriminator": {
        "propertyName": "type",
        "mapping": {
          "post": "objects.json#/definitions/newsfeed_item_wallpost",
          "photo": "objects.json#/definitions/newsfeed_item_photo",
          "wall_photo": "objects.json#/definitions/newsfeed_item_photo",
          "photo_tag": "objects.json#/definitions/newsfeed_item_photo_tag",
          "friend": "objects.json#/definitions/newsfeed_item_friend",
          "audio": "objects.json#/definitions/newsfeed_item_audio",
          "video": "objects.json#/definitions/newsfeed_item_video",
          "topic": "objects.json#/definitions/newsfeed_item_topic",
          "digest": "objects.json#/definitions/newsfeed_item_digest",
          "promo_button": "objects.json#/definitions/newsfeed_item_promo_button"
        }
      },
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/newsfeed_item_wallpost"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_photo"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_photo_tag"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_friend"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_audio"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_video"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_topic"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_digest"
        },
        {
          "$ref": "objects.json#/definitions/newsfeed_item_promo_button"
        }
      ]
    },
    "newsfeed_newsfeed_item_type": {
      "type": "string",
      "description": "Item type",
      "enum": [
        "post",
        "photo",
        "photo_tag",
        "wall_photo",
        "friend",
        "audio",
        "video",
        "topic",
        "digest",
        "stories",
        "note",
        "audio_playlist",
        "clip"
      ]
    },
    "notes_note": {
      "type": "object",
      "properties": {
        "read_comments": {
          "type": "integer",
          "minimum": 0
        },
        "can_comment": {
          "description": "Information whether current user can comment the note",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Note text"
        },
        "text_wiki": {
          "type": "string",
          "description": "Note text in wiki format"
        },
        "title": {
          "type": "string",
          "description": "Note title",
          "required": true
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with note preview",
          "required": true
        },
        "privacy_view": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privacy_comment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "notes_note_comment": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the comment has beed added in Unixtime",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        },
        "message": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "nid": {
          "type": "integer",
          "description": "Note ID",
          "required": true
        },
        "oid": {
          "type": "integer",
          "description": "Note ID",
          "required": true
        },
        "reply_to": {
          "type": "integer",
          "description": "ID of replied comment "
        },
        "uid": {
          "type": "integer",
          "description": "Comment author's ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notifications_feedback": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wallpost_attachment"
          }
        },
        "from_id": {
          "type": "integer",
          "description": "Reply author's ID"
        },
        "geo": {
          "$ref": "objects.json#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Item ID"
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_likes_info"
        },
        "text": {
          "type": "string",
          "description": "Reply text"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        }
      },
      "additionalProperties": false
    },
    "notifications_notification": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the event has been occurred"
        },
        "feedback": {
          "$ref": "objects.json#/definitions/notifications_feedback"
        },
        "parent": {
          "$ref": "objects.json#/definitions/notifications_notification"
        },
        "reply": {
          "$ref": "objects.json#/definitions/notifications_reply"
        },
        "type": {
          "type": "string",
          "description": "Notification type"
        }
      },
      "additionalProperties": false
    },
    "notifications_notification_item": {
      "type": "object",
      "$ref": "objects.json#/definitions/notifications_notification"
    },
    "notifications_reply": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the reply has been created in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Reply ID"
        },
        "text": {
          "type": "integer",
          "description": "Reply text"
        }
      },
      "additionalProperties": false
    },
    "notifications_send_message_error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumNames": [
            "notifications disabled",
            "flood control per hour",
            "flood control per day",
            "app is not installed"
          ],
          "description": "Error code"
        },
        "description": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "notifications_send_message_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        },
        "status": {
          "type": "boolean",
          "description": "Notification status"
        },
        "error": {
          "$ref": "objects.json#/definitions/notifications_send_message_error"
        }
      },
      "additionalProperties": false
    },
    "oauth_error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error type",
          "required": true
        },
        "error_description": {
          "type": "string",
          "description": "Error description",
          "required": true
        },
        "redirect_uri": {
          "type": "string",
          "description": "URI for validation"
        }
      },
      "additionalProperties": false
    },
    "orders_amount": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/orders_amount_item"
          }
        },
        "currency": {
          "type": "string",
          "description": "Currency name"
        }
      },
      "additionalProperties": false
    },
    "orders_amount_item": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "description": "Votes amount in user's currency"
        },
        "description": {
          "type": "string",
          "description": "Amount description"
        },
        "votes": {
          "type": "string",
          "description": "Votes number"
        }
      },
      "additionalProperties": false
    },
    "orders_order": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount",
          "required": true
        },
        "app_order_id": {
          "type": "string",
          "description": "App order ID",
          "required": true
        },
        "cancel_transaction_id": {
          "type": "string",
          "description": "Cancel transaction ID"
        },
        "date": {
          "type": "string",
          "description": "Date of creation in Unixtime",
          "required": true
        },
        "id": {
          "type": "string",
          "description": "Order ID",
          "required": true
        },
        "item": {
          "type": "string",
          "description": "Order item",
          "required": true
        },
        "receiver_id": {
          "type": "string",
          "description": "Receiver ID",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "Order status",
          "enum": [
            "created",
            "charged",
            "refunded",
            "chargeable",
            "cancelled",
            "declined"
          ],
          "required": true
        },
        "transaction_id": {
          "type": "string",
          "description": "Transaction ID"
        },
        "user_id": {
          "type": "string",
          "description": "User ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_subscription": {
      "type": "object",
      "properties": {
        "cancel_reason": {
          "type": "string",
          "description": "Cancel reason"
        },
        "create_time": {
          "type": "integer",
          "description": "Date of creation in Unixtime",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Subscription ID",
          "required": true
        },
        "item_id": {
          "type": "string",
          "description": "Subscription order item",
          "required": true
        },
        "next_bill_time": {
          "type": "integer",
          "description": "Date of next bill in Unixtime"
        },
        "expire_time": {
          "type": "integer",
          "description": "Subscription expiration time in Unixtime"
        },
        "pending_cancel": {
          "type": "boolean",
          "description": "Pending cancel state"
        },
        "period": {
          "type": "integer",
          "description": "Subscription period",
          "required": true
        },
        "period_start_time": {
          "type": "integer",
          "description": "Date of last period start in Unixtime",
          "required": true
        },
        "price": {
          "type": "integer",
          "description": "Subscription price",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Subscription name"
        },
        "app_id": {
          "type": "integer",
          "description": "Subscription's application id"
        },
        "application_name": {
          "type": "string",
          "description": "Subscription's application name"
        },
        "photo_url": {
          "type": "string",
          "description": "Item photo image url"
        },
        "status": {
          "type": "string",
          "description": "Subscription status",
          "required": true
        },
        "test_mode": {
          "type": "boolean",
          "description": "Is test subscription"
        },
        "trial_expire_time": {
          "type": "integer",
          "description": "Date of trial expire in Unixtime"
        },
        "update_time": {
          "type": "integer",
          "description": "Date of last change in Unixtime",
          "required": true
        },
        "is_game": {
          "type": "boolean",
          "description": "Is game (not miniapp) subscription"
        }
      },
      "additionalProperties": false
    },
    "owner_state": {
      "type": "object",
      "properties": {
        "state": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumNames": [
            "banned",
            "adult",
            "hidden",
            "deleted",
            "blacklisted"
          ]
        },
        "description": {
          "type": "string",
          "description": "wiki text to describe user state"
        }
      },
      "additionalProperties": false
    },
    "pages_privacy_settings": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "community managers only",
        "community members only",
        "everyone"
      ]
    },
    "pages_wikipage": {
      "type": "object",
      "properties": {
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "creator_name": {
          "type": "string",
          "description": "Page creator name"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Page title",
          "required": true
        },
        "views": {
          "type": "integer",
          "description": "Views number",
          "required": true
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "objects.json#/definitions/pages_privacy_settings",
          "required": true
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "objects.json#/definitions/pages_privacy_settings",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_wikipage_full": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "description": "Date when the page has been created in Unixtime",
          "required": true
        },
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID",
          "entity": "owner",
          "format": "int64"
        },
        "current_user_can_edit": {
          "description": "Information whether current user can edit the page",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "current_user_can_edit_access": {
          "description": "Information whether current user can edit the page access settings",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "edited": {
          "type": "integer",
          "description": "Date when the page has been edited in Unixtime",
          "required": true
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID",
          "entity": "owner",
          "format": "int64"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "html": {
          "type": "string",
          "description": "Page content, HTML"
        },
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1,
          "required": true
        },
        "source": {
          "type": "string",
          "description": "Page content, wiki"
        },
        "title": {
          "type": "string",
          "description": "Page title",
          "required": true
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page preview",
          "required": true
        },
        "views": {
          "type": "integer",
          "description": "Views number",
          "required": true
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "objects.json#/definitions/pages_privacy_settings",
          "required": true
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "objects.json#/definitions/pages_privacy_settings",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL"
        },
        "parent": {
          "type": "string",
          "description": "Parent"
        },
        "parent2": {
          "type": "string",
          "description": "Parent2"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "pages_wikipage_history": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Version ID",
          "minimum": 0,
          "required": true
        },
        "length": {
          "type": "integer",
          "minimum": 0,
          "description": "Page size in bytes",
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when the page has been edited in Unixtime",
          "required": true
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID",
          "required": true
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_image": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Height of the photo in px."
        },
        "type": {
          "$ref": "objects.json#/definitions/photos_image_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Photo URL."
        },
        "width": {
          "type": "integer",
          "description": "Width of the photo in px."
        }
      },
      "additionalProperties": false
    },
    "photos_image_type": {
      "type": "string",
      "description": "Photo's type.",
      "enum": [
        "s",
        "m",
        "x",
        "l",
        "o",
        "p",
        "q",
        "r",
        "y",
        "z",
        "w",
        "base"
      ]
    },
    "photos_photo": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0,
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_image"
          }
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "can_comment": {
          "description": "Information whether current user can comment the photo",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "place": {
          "type": "string"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo_sizes"
          }
        },
        "square_crop": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "has_tags": {
          "type": "boolean",
          "description": "Whether photo has attached tag links",
          "required": true
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_likes"
        },
        "comments": {
          "$ref": "objects.json#/definitions/base_object_count"
        },
        "reposts": {
          "$ref": "objects.json#/definitions/base_reposts_info"
        },
        "tags": {
          "$ref": "objects.json#/definitions/base_object_count"
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "objects.json#/definitions/base_property_exists"
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        },
        "vertical_align": {
          "type": "string",
          "description": "Sets vertical alignment of a photo",
          "enum": [
            "top",
            "middle",
            "bottom"
          ]
        }
      },
      "additionalProperties": false
    },
    "photos_photo_album": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "id": {
          "type": "integer",
          "description": "Photo album ID",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0,
          "required": true
        },
        "thumb": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "title": {
          "type": "string",
          "description": "Photo album title",
          "required": true
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_album_full": {
      "type": "object",
      "properties": {
        "can_upload": {
          "description": "Information whether current user can upload photo to the album",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "comments_disabled": {
          "description": "Information whether album comments are disabled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime, not set for system albums",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "can_delete": {
          "type": "boolean",
          "description": "album can delete"
        },
        "id": {
          "type": "integer",
          "description": "Photo album ID",
          "required": true
        },
        "can_include_to_feed": {
          "type": "boolean",
          "description": "album can be selected to feed"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0,
          "required": true
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo_sizes"
          }
        },
        "thumb_id": {
          "type": "integer",
          "description": "Thumb photo ID",
          "minimum": 0
        },
        "thumb_is_last": {
          "description": "Information whether the album thumb is last photo",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "thumb_src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the thumb image"
        },
        "title": {
          "type": "string",
          "description": "Photo album title",
          "required": true
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime, not set for system albums",
          "minimum": 0
        },
        "upload_by_admins_only": {
          "description": "Information whether only community administrators can upload photos",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "photos_photo_falseable": {
      "type": "object",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "photos_photo_sizes": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Height in px",
          "minimum": 0,
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image"
        },
        "src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image"
        },
        "type": {
          "$ref": "objects.json#/definitions/photos_photo_sizes_type",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Width in px",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_sizes_type": {
      "type": "string",
      "description": "Size type",
      "enum": [
        "t",
        "s",
        "m",
        "x",
        "o",
        "p",
        "q",
        "r",
        "k",
        "l",
        "y",
        "z",
        "c",
        "w",
        "a",
        "b",
        "e",
        "i",
        "d",
        "j",
        "temp",
        "h",
        "g",
        "n",
        "f",
        "max",
        "base",
        "u",
        "v"
      ]
    },
    "photos_photo_tag": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Tag ID",
          "required": true
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator",
          "required": true
        },
        "tagged_name": {
          "type": "string",
          "description": "Tag description",
          "required": true
        },
        "description": {
          "description": "Tagged description.",
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "description": "Tagged user ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "viewed": {
          "description": "Information whether the tag is reviewed",
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner",
          "required": true
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner",
          "required": true
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner",
          "required": true
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_upload": {
      "type": "object",
      "properties": {
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "URL to upload photo",
          "required": true
        },
        "fallback_upload_url": {
          "type": "string",
          "format": "uri",
          "description": "Fallback URL if upload_url returned error"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "group_id": {
          "type": "integer",
          "description": "Group ID",
          "entity": "groups",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "photos_photo_xtr_tag_info": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0,
          "required": true
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo_sizes"
          }
        },
        "tag_created": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "tag_id": {
          "type": "integer",
          "description": "Tag ID"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "has_tags": {
          "type": "boolean",
          "description": "Whether photo has attached tag links"
        }
      },
      "additionalProperties": false
    },
    "photos_tags_suggestion_item": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_tags_suggestion_item_button"
          }
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo_tag"
          }
        },
        "track_code": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "photos_tags_suggestion_item_button": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "confirm",
            "decline",
            "show_tags"
          ]
        },
        "style": {
          "type": "string",
          "enum": [
            "primary",
            "secondary"
          ]
        }
      },
      "additionalProperties": false
    },
    "podcast_cover": {
      "type": "object",
      "properties": {
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/photos_photo_sizes"
          }
        }
      },
      "additionalProperties": false
    },
    "podcast_external_data": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Url of the podcast page"
        },
        "owner_url": {
          "type": "string",
          "description": "Url of the podcasts owner community"
        },
        "title": {
          "type": "string",
          "description": "Podcast title"
        },
        "owner_name": {
          "type": "string",
          "description": "Name of the podcasts owner community"
        },
        "cover": {
          "$ref": "objects.json#/definitions/podcast_cover",
          "description": "Podcast cover"
        }
      },
      "additionalProperties": false
    },
    "polls_answer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Answer ID",
          "minimum": 0,
          "required": true
        },
        "rate": {
          "type": "number",
          "description": "Answer rate in percents",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Answer text",
          "required": true
        },
        "votes": {
          "type": "integer",
          "description": "Votes number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_background": {
      "type": "object",
      "properties": {
        "angle": {
          "description": "Gradient angle with 0 on positive X axis",
          "type": "integer"
        },
        "color": {
          "type": "string",
          "description": "Hex color code without #"
        },
        "height": {
          "description": "Original height of pattern tile",
          "type": "integer",
          "minimum": 0
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "images": {
          "description": "Pattern tiles",
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "points": {
          "description": "Gradient points",
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_gradient_point"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "gradient",
            "tile"
          ]
        },
        "width": {
          "description": "Original with of pattern tile",
          "type": "integer",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "polls_fields_voters": {
      "type": "object",
      "properties": {
        "answer_id": {
          "type": "integer",
          "format": "int64",
          "description": "Answer ID"
        },
        "users": {
          "$ref": "objects.json#/definitions/polls_voters_fields_users"
        },
        "answer_offset": {
          "type": "string",
          "description": "Answer offset"
        }
      },
      "additionalProperties": false
    },
    "polls_friend": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "owner",
          "minimum": 0,
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_poll": {
      "type": "object",
      "properties": {
        "anonymous": {
          "$ref": "objects.json#/definitions/polls_poll_anonymous"
        },
        "friends": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/polls_friend"
          }
        },
        "multiple": {
          "description": "Information whether the poll with multiple choices",
          "type": "boolean",
          "required": true
        },
        "answer_id": {
          "type": "integer",
          "format": "int64",
          "description": "Current user's answer ID",
          "minimum": 0
        },
        "end_date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "answer_ids": {
          "type": "array",
          "description": "Current user's answer IDs",
          "items": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        },
        "closed": {
          "type": "boolean",
          "required": true
        },
        "is_board": {
          "type": "boolean",
          "required": true
        },
        "can_edit": {
          "type": "boolean",
          "required": true
        },
        "can_vote": {
          "type": "boolean",
          "required": true
        },
        "can_report": {
          "type": "boolean",
          "required": true
        },
        "can_share": {
          "type": "boolean",
          "required": true
        },
        "embed_hash": {
          "type": "string"
        },
        "photo": {
          "$ref": "objects.json#/definitions/polls_background"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/polls_answer"
          },
          "required": true
        },
        "created": {
          "type": "integer",
          "description": "Date when poll has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Poll ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Poll owner's ID",
          "format": "int64",
          "required": true
        },
        "author_id": {
          "type": "integer",
          "description": "Poll author's ID"
        },
        "question": {
          "type": "string",
          "description": "Poll question",
          "required": true
        },
        "background": {
          "$ref": "objects.json#/definitions/polls_background"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number",
          "minimum": 0,
          "required": true
        },
        "disable_unvote": {
          "type": "boolean",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_poll_anonymous": {
      "type": "boolean",
      "description": "Information whether the field is anonymous"
    },
    "polls_voters": {
      "type": "object",
      "properties": {
        "answer_id": {
          "type": "integer",
          "format": "int64",
          "description": "Answer ID"
        },
        "users": {
          "$ref": "objects.json#/definitions/polls_voters_users"
        },
        "answer_offset": {
          "type": "string",
          "description": "Answer offset"
        }
      },
      "additionalProperties": false
    },
    "polls_voters_fields_users": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Votes number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/users_user_full"
          }
        }
      },
      "additionalProperties": false
    },
    "polls_voters_users": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Votes number"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "entity": "profiles",
            "format": "int64",
            "description": "User ID"
          }
        }
      },
      "additionalProperties": false
    },
    "prettyCards_button_one_of": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "$ref": "objects.json#/definitions/base_link_button"
        },
        {
          "type": "string"
        }
      ]
    },
    "prettyCards_prettyCard": {
      "type": "object",
      "properties": {
        "button": {
          "description": "Button key",
          "$ref": "objects.json#/definitions/prettyCards_button_one_of"
        },
        "button_text": {
          "type": "string",
          "description": "Button text in current language"
        },
        "card_id": {
          "type": "string",
          "description": "Card ID (long int returned as string)",
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        },
        "link_url": {
          "type": "string",
          "description": "Link URL",
          "required": true
        },
        "photo": {
          "type": "string",
          "description": "Photo ID (format \"<owner_id>_<media_id>\")",
          "required": true
        },
        "price": {
          "type": "string",
          "description": "Price if set (decimal number returned as string)"
        },
        "price_old": {
          "type": "string",
          "description": "Old price if set (decimal number returned as string)"
        },
        "title": {
          "type": "string",
          "description": "Title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_prettyCardOrError": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/prettyCards_prettyCard"
        },
        {
          "$ref": "objects.json#/definitions/base_error"
        }
      ]
    },
    "search_hint": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "objects.json#/definitions/apps_app"
        },
        "description": {
          "type": "string",
          "description": "Object description",
          "required": true
        },
        "global": {
          "description": "Information whether the object has been found globally",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "group": {
          "$ref": "objects.json#/definitions/groups_group"
        },
        "profile": {
          "$ref": "objects.json#/definitions/users_user_min"
        },
        "section": {
          "$ref": "objects.json#/definitions/search_hint_section"
        },
        "type": {
          "$ref": "objects.json#/definitions/search_hint_type",
          "required": true
        },
        "link": {
          "$ref": "objects.json#/definitions/base_link"
        }
      },
      "additionalProperties": false
    },
    "search_hint_section": {
      "type": "string",
      "description": "Section title",
      "enum": [
        "groups",
        "events",
        "publics",
        "correspondents",
        "people",
        "friends",
        "mutual_friends",
        "promo"
      ]
    },
    "search_hint_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "group",
        "profile",
        "vk_app",
        "app",
        "html5_game",
        "link"
      ]
    },
    "secure_giveEventSticker_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "status": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "secure_level": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "secure_setCounter_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "result": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_sms_notification": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string",
          "description": "Application ID"
        },
        "date": {
          "type": "string",
          "description": "Date when message has been sent in Unixtime"
        },
        "id": {
          "type": "string",
          "description": "Notification ID"
        },
        "message": {
          "type": "string",
          "description": "Messsage text"
        },
        "user_id": {
          "type": "string",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "secure_token_checked": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when access_token has been generated in Unixtime"
        },
        "expire": {
          "type": "integer",
          "description": "Date when access_token will expire in Unixtime"
        },
        "success": {
          "description": "Returns if successfully processed",
          "type": "integer",
          "default": 1
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "secure_transaction": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Transaction date in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Transaction ID"
        },
        "uid_from": {
          "type": "integer",
          "description": "From ID"
        },
        "uid_to": {
          "type": "integer",
          "description": "To ID"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number"
        }
      },
      "additionalProperties": false
    },
    "stats_activity": {
      "type": "object",
      "description": "Activity stats",
      "properties": {
        "comments": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "copies": {
          "type": "integer",
          "minimum": 0,
          "description": "Reposts number"
        },
        "hidden": {
          "type": "integer",
          "minimum": 0,
          "description": "Hidden from news count"
        },
        "likes": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "subscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "New subscribers count"
        },
        "unsubscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "Unsubscribed count"
        }
      },
      "additionalProperties": false
    },
    "stats_city": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Visitors number",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "City name"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        }
      },
      "additionalProperties": false
    },
    "stats_country": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Country code"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "name": {
          "type": "string",
          "description": "Country name"
        },
        "value": {
          "type": "integer",
          "description": "Country ID"
        }
      },
      "additionalProperties": false
    },
    "stats_period": {
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "objects.json#/definitions/stats_activity"
        },
        "period_from": {
          "$ref": "objects.json#/definitions/stats_period_from_one_of"
        },
        "period_to": {
          "$ref": "objects.json#/definitions/stats_period_to_one_of"
        },
        "reach": {
          "$ref": "objects.json#/definitions/stats_reach_one_of"
        },
        "visitors": {
          "$ref": "objects.json#/definitions/stats_visitors_one_of"
        }
      },
      "additionalProperties": false
    },
    "stats_period_from_one_of": {
      "type": "integer",
      "description": "Unix timestamp"
    },
    "stats_period_to_one_of": {
      "type": "integer",
      "description": "Unix timestamp"
    },
    "stats_reach": {
      "type": "object",
      "description": "Reach stats",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_country"
          }
        },
        "mobile_reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count from mobile devices"
        },
        "reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count"
        },
        "reach_subscribers": {
          "type": "integer",
          "minimum": 0,
          "description": "Subscribers reach count"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "stats_reach_one_of": {
      "type": "object",
      "$ref": "objects.json#/definitions/stats_reach"
    },
    "stats_sex_age": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "value": {
          "type": "string",
          "description": "Sex/age value",
          "required": true
        },
        "reach": {
          "type": "integer"
        },
        "reach_subscribers": {
          "type": "integer"
        },
        "count_subscribers": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "stats_views": {
      "type": "object",
      "description": "Views stats",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_country"
          }
        },
        "mobile_views": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of views from mobile devices"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number"
        },
        "visitors": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        }
      },
      "additionalProperties": false
    },
    "stats_visitors_one_of": {
      "type": "object",
      "$ref": "objects.json#/definitions/stats_views"
    },
    "stats_wallpost_stat": {
      "type": "object",
      "properties": {
        "post_id": {
          "type": "integer"
        },
        "hide": {
          "type": "integer",
          "description": "Hidings number"
        },
        "join_group": {
          "type": "integer",
          "description": "People have joined the group"
        },
        "links": {
          "type": "integer",
          "description": "Link clickthrough"
        },
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach"
        },
        "reach_subscribers_count": {
          "type": "integer"
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach"
        },
        "reach_total_count": {
          "type": "integer"
        },
        "reach_viral": {
          "type": "integer"
        },
        "reach_ads": {
          "type": "integer"
        },
        "report": {
          "type": "integer",
          "description": "Reports number"
        },
        "to_group": {
          "type": "integer",
          "description": "Clickthrough to community"
        },
        "unsubscribe": {
          "type": "integer",
          "description": "Unsubscribed members"
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "status_status": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Status text",
          "required": true
        },
        "audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        }
      },
      "additionalProperties": false
    },
    "stickers_image_set": {
      "type": "object",
      "properties": {
        "base_url": {
          "type": "string",
          "format": "uri",
          "description": "Base URL for images in set",
          "required": true
        },
        "version": {
          "type": "integer",
          "description": "Version number to be appended to the image URL"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          }
        }
      },
      "additionalProperties": false
    },
    "storage_value": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "store_product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id of the product",
          "required": true
        },
        "type": {
          "type": "string",
          "description": "Product type",
          "enum": [
            "stickers"
          ],
          "required": true
        },
        "is_new": {
          "type": "boolean",
          "description": "Information whether sticker product wasn't used after being purchased"
        },
        "copyright": {
          "type": "string",
          "description": "Product copyright information"
        },
        "base_id": {
          "type": "integer",
          "description": "Id of the base pack (for sticker pack styles)"
        },
        "style_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Array of style ids available for the sticker pack"
        },
        "purchased": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether the product is purchased (1 - yes, 0 - no)"
        },
        "active": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether the product is active (1 - yes, 0 - no)"
        },
        "promoted": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether the product is promoted (1 - yes, 0 - no)"
        },
        "purchase_date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date (Unix time) when the product was purchased"
        },
        "title": {
          "type": "string",
          "description": "Title of the product"
        },
        "stickers": {
          "$ref": "objects.json#/definitions/base_stickers_list"
        },
        "style_sticker_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Array of style sticker ids (for sticker pack styles)"
        },
        "icon": {
          "$ref": "objects.json#/definitions/store_product_icon",
          "description": "Array of icon images or icon set object of the product (for stickers product type)"
        },
        "previews": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/base_image"
          },
          "description": "Array of preview images of the product (for stickers product type)"
        },
        "has_animation": {
          "type": "boolean",
          "description": "Information whether the product is an animated sticker pack (for stickers product type)"
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the product"
        },
        "payment_region": {
          "type": "string"
        },
        "is_vmoji": {
          "type": "boolean",
          "description": "Information whether sticker pack is a vmoji pack"
        },
        "title_lang_key": {
          "type": "string"
        },
        "description_lang_key": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "additionalProperties": false
    },
    "store_product_icon": {
      "type": "object",
      "$ref": "objects.json#/definitions/stickers_image_set"
    },
    "store_stickers_keyword": {
      "type": "object",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": true
        },
        "user_stickers": {
          "$ref": "objects.json#/definitions/store_stickers_keyword_stickers"
        },
        "promoted_stickers": {
          "$ref": "objects.json#/definitions/store_stickers_keyword_stickers"
        },
        "stickers": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/store_stickers_keyword_sticker"
          }
        }
      },
      "additionalProperties": false
    },
    "store_stickers_keyword_sticker": {
      "type": "object",
      "properties": {
        "pack_id": {
          "type": "integer",
          "description": "Pack id",
          "required": true
        },
        "sticker_id": {
          "type": "integer",
          "description": "Sticker id",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "store_stickers_keyword_stickers": {
      "type": "object",
      "$ref": "objects.json#/definitions/base_stickers_list"
    },
    "stories_clickable_area": {
      "type": "object",
      "properties": {
        "x": {
          "type": "integer",
          "required": true
        },
        "y": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_clickable_sticker": {
      "type": "object",
      "properties": {
        "clickable_area": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stories_clickable_area"
          },
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Clickable sticker ID",
          "required": true
        },
        "hashtag": {
          "type": "string"
        },
        "link_object": {
          "$ref": "objects.json#/definitions/base_link"
        },
        "mention": {
          "type": "string"
        },
        "tooltip_text": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "story_id": {
          "type": "integer"
        },
        "clip_id": {
          "type": "integer"
        },
        "question": {
          "type": "string"
        },
        "question_button": {
          "type": "string"
        },
        "place_id": {
          "type": "integer"
        },
        "market_item": {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        "audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        },
        "audio_start_time": {
          "type": "integer"
        },
        "style": {
          "type": "string",
          "enum": [
            "transparent",
            "blue_gradient",
            "red_gradient",
            "underline",
            "blue",
            "green",
            "white",
            "question_reply",
            "light",
            "impressive"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "hashtag",
            "mention",
            "link",
            "question",
            "place",
            "market_item",
            "music",
            "story_reply",
            "owner",
            "post",
            "poll",
            "sticker",
            "app",
            "situational_theme",
            "playlist",
            "clip"
          ],
          "required": true
        },
        "subtype": {
          "type": "string",
          "enum": [
            "market_item",
            "aliexpress_product"
          ]
        },
        "post_owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "post_id": {
          "type": "integer"
        },
        "poll": {
          "$ref": "objects.json#/definitions/polls_poll"
        },
        "color": {
          "type": "string",
          "description": "Color, hex format"
        },
        "sticker_id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "sticker_pack_id": {
          "type": "integer",
          "description": "Sticker pack ID"
        },
        "app": {
          "$ref": "objects.json#/definitions/apps_app_min"
        },
        "app_context": {
          "type": "string",
          "description": "Additional context for app sticker"
        },
        "has_new_interactions": {
          "type": "boolean",
          "description": "Whether current user has unread interaction with this app"
        },
        "is_broadcast_notify_allowed": {
          "type": "boolean",
          "description": "Whether current user allowed broadcast notify from this app"
        },
        "situational_theme_id": {
          "type": "integer"
        },
        "situational_app_url": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "stories_clickable_stickers": {
      "type": "object",
      "properties": {
        "clickable_stickers": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stories_clickable_sticker"
          },
          "required": true
        },
        "original_height": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "original_width": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_feed_item": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "promo_stories",
            "stories",
            "live_active",
            "live_finished",
            "app_grouped_stories",
            "discover"
          ],
          "description": "Type of Feed Item",
          "required": true
        },
        "id": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "stories": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stories_story"
          },
          "description": "Author stories"
        },
        "grouped": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stories_feed_item"
          },
          "description": "Grouped stories of various authors (for types community_grouped_stories/app_grouped_stories type)"
        },
        "app": {
          "$ref": "objects.json#/definitions/apps_app_min",
          "description": "App, which stories has been grouped (for type app_grouped_stories)"
        },
        "promo_data": {
          "$ref": "objects.json#/definitions/stories_promo_block",
          "description": "Additional data for promo stories (for type promo_stories)"
        },
        "track_code": {
          "type": "string"
        },
        "has_unseen": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "stories_promo_block": {
      "type": "object",
      "description": "Additional data for promo stories",
      "properties": {
        "name": {
          "type": "string",
          "description": "Promo story title",
          "required": true
        },
        "photo_50": {
          "type": "string",
          "description": "RL of square photo of the story with 50 pixels in width",
          "required": true
        },
        "photo_100": {
          "type": "string",
          "description": "RL of square photo of the story with 100 pixels in width",
          "required": true
        },
        "not_animated": {
          "type": "boolean",
          "description": "Hide animation for promo story",
          "required": true
        },
        "is_advice": {
          "type": "boolean",
          "description": "Promo story from advice",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_replies": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Replies number.",
          "minimum": 0,
          "required": true
        },
        "new": {
          "type": "integer",
          "description": "New replies number."
        }
      },
      "additionalProperties": false
    },
    "stories_stat_category": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string",
          "required": true
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/stories_stat_line"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_stat_line": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "counter": {
          "type": "integer",
          "minimum": 0
        },
        "is_unavailable": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "stories_story": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "can_comment": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can comment the story (0 - no, 1 - yes)."
        },
        "can_reply": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can reply to the story (0 - no, 1 - yes)."
        },
        "can_see": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can see the story (0 - no, 1 - yes)."
        },
        "can_like": {
          "type": "boolean",
          "description": "Information whether current user can like the story."
        },
        "can_share": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can share the story (0 - no, 1 - yes)."
        },
        "can_hide": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can hide the story (0 - no, 1 - yes)."
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when story has been added in Unixtime."
        },
        "expires_at": {
          "type": "integer",
          "minimum": 0,
          "description": "Story expiration time. Unixtime."
        },
        "id": {
          "type": "integer",
          "description": "Story ID.",
          "required": true
        },
        "is_deleted": {
          "type": "boolean",
          "description": "Information whether the story is deleted (false - no, true - yes)."
        },
        "is_expired": {
          "type": "boolean",
          "description": "Information whether the story is expired (false - no, true - yes)."
        },
        "link": {
          "$ref": "objects.json#/definitions/stories_story_link"
        },
        "owner_id": {
          "type": "integer",
          "description": "Story owner's ID.",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "parent_story": {
          "$ref": "objects.json#/definitions/stories_story"
        },
        "parent_story_access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "parent_story_id": {
          "type": "integer",
          "description": "Parent story ID."
        },
        "parent_story_owner_id": {
          "type": "integer",
          "description": "Parent story owner's ID."
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "replies": {
          "description": "Replies counters to current story.",
          "$ref": "objects.json#/definitions/stories_replies"
        },
        "seen": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user has seen the story or not (0 - no, 1 - yes)."
        },
        "type": {
          "$ref": "objects.json#/definitions/stories_story_type"
        },
        "clickable_stickers": {
          "$ref": "objects.json#/definitions/stories_clickable_stickers"
        },
        "video": {
          "$ref": "objects.json#/definitions/video_video_full"
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number."
        },
        "can_ask": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether story has question sticker and current user can send question to the author"
        },
        "can_ask_anonymous": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether story has question sticker and current user can send anonymous question to the author"
        },
        "narratives_count": {
          "type": "integer"
        },
        "first_narrative_title": {
          "type": "string"
        },
        "can_use_in_narrative": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "stories_story_link": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Link text",
          "required": true
        },
        "url": {
          "type": "string",
          "description": "Link URL",
          "required": true
        },
        "link_url_target": {
          "type": "string",
          "description": "How to open url"
        }
      },
      "additionalProperties": false
    },
    "stories_story_stats": {
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "bans": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "open_link": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "replies": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "shares": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "subscribers": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "views": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        },
        "likes": {
          "$ref": "objects.json#/definitions/stories_story_stats_stat",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_story_stats_stat": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Stat value",
          "minimum": 0
        },
        "state": {
          "$ref": "objects.json#/definitions/stories_story_stats_state",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_story_stats_state": {
      "type": "string",
      "description": "Statistic state",
      "enum": [
        "on",
        "off",
        "hidden"
      ]
    },
    "stories_story_type": {
      "type": "string",
      "description": "Story type.",
      "enum": [
        "photo",
        "video",
        "live_active",
        "live_finished"
      ]
    },
    "stories_upload_link_text": {
      "type": "string",
      "enum": [
        "to_store",
        "vote",
        "more",
        "book",
        "order",
        "enroll",
        "fill",
        "signup",
        "buy",
        "ticket",
        "write",
        "open",
        "learn_more",
        "view",
        "go_to",
        "contact",
        "watch",
        "play",
        "install",
        "read",
        "calendar"
      ]
    },
    "stories_upload_result": {
      "type": "object",
      "properties": {
        "upload_result": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "stories_viewers_item": {
      "type": "object",
      "properties": {
        "is_liked": {
          "type": "boolean",
          "description": "user has like for this object",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "description": "user id",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "user": {
          "$ref": "objects.json#/definitions/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "streaming_stats": {
      "type": "object",
      "properties": {
        "event_type": {
          "type": "string",
          "description": "Events type",
          "required": true,
          "enum": [
            "post",
            "comment",
            "share"
          ]
        },
        "stats": {
          "type": "array",
          "description": "Statistics",
          "required": true,
          "items": {
            "$ref": "objects.json#/definitions/streaming_stats_point"
          }
        }
      },
      "additionalProperties": false
    },
    "streaming_stats_point": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "required": true
        },
        "value": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_buttonFields": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "button"
          ],
          "default": "button"
        },
        "text": {
          "type": "string",
          "description": "Надпись на кнопке"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_buttonSubmitFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "button_submit"
          ],
          "default": "button_submit"
        },
        "id": {
          "type": "number"
        },
        "disabled": {
          "type": "boolean"
        },
        "text": {
          "type": "string",
          "description": "Надпись на кнопке"
        },
        "target_screen": {
          "type": "string",
          "description": "Индекс экрана для перехода"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_buttonSupportFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "support_button"
          ],
          "default": "support_button"
        },
        "id": {
          "type": "number"
        },
        "text": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_buttonUnblockFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "unblock_button"
          ],
          "default": "unblock_button"
        },
        "id": {
          "type": "number"
        },
        "text": {
          "type": "string",
          "description": "Надпись на кнопке"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_contentBlockFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "ban_reason_content"
          ],
          "default": "ban_reason_content"
        },
        "content_type": {
          "type": "string",
          "description": "Тип контента",
          "enum": [
            "post",
            "message"
          ]
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_eventsListFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "events_list"
          ],
          "default": "events_list"
        },
        "header": {
          "type": "string",
          "description": "Заголовок над пунктами"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/support_unblock_screen_eventsListFields_item"
          }
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_eventsListFields_item": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "Дата блокировки"
        },
        "reason": {
          "type": "string",
          "description": "Причина блокировки"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_headerFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "header"
          ],
          "default": "header"
        },
        "text": {
          "type": "string",
          "description": "Текст заголовка"
        },
        "subheader": {
          "type": "string",
          "description": "Текст подзаголовка"
        },
        "image": {
          "type": "string",
          "description": "Картинка над текстом"
        },
        "gradient": {
          "type": "boolean",
          "description": "Нужен ли градиент  на фоне заголовка"
        },
        "exit_btn": {
          "type": "boolean",
          "description": "Нужна ли кнопка выхода"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_item": {
      "type": "object",
      "from_version": "5.203",
      "discriminator": {
        "propertyName": "type",
        "mapping": {
          "text_bordered": "#/definitions/support_unblock_screen_textBorderedFields",
          "text_background": "#/definitions/support_unblock_screen_textBackgroundFields",
          "button_submit": "#/definitions/support_unblock_screen_buttonSubmitFields",
          "unblock_button": "#/definitions/support_unblock_screen_buttonUnblockFields",
          "header": "#/definitions/support_unblock_screen_headerFields",
          "modal_button": "#/definitions/support_unblock_screen_modalButtonFields",
          "tutorial": "#/definitions/support_unblock_screen_tutorialFields",
          "stepper": "#/definitions/support_unblock_screen_stepperFields",
          "final_button": "#/definitions/support_unblock_screen_buttonFields",
          "ban_reason_content": "#/definitions/support_unblock_screen_contentBlockFields",
          "sliders": "#/definitions/support_unblock_screen_slidersFields",
          "support_button": "#/definitions/support_unblock_screen_buttonSupportFields",
          "events_list": "#/definitions/support_unblock_screen_eventsListFields"
        }
      },
      "oneOf": [
        {
          "$ref": "#/definitions/support_unblock_screen_textBorderedFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_textBackgroundFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_buttonUnblockFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_buttonSubmitFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_headerFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_modalButtonFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_tutorialFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_stepperFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_buttonFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_contentBlockFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_slidersFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_eventsListFields"
        },
        {
          "$ref": "#/definitions/support_unblock_screen_buttonSupportFields"
        }
      ]
    },
    "support_unblock_screen_modalButtonFields": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "modal_button"
          ],
          "default": "modal_button"
        },
        "label": {
          "type": "string",
          "description": "Надпись на кнопке"
        },
        "modal": {
          "$ref": "#/definitions/support_unblock_screen_modalButton_modalContent"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_modalButton_modalContent": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_slidersFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "sliders"
          ],
          "default": "sliders"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/support_unblock_screen_slidersFields_item"
          }
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_slidersFields_item": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "short_desc": {
          "type": "string",
          "description": "Краткое описание, выпадающее при нажатии"
        },
        "target_screen": {
          "type": "string",
          "description": "Экран, на который происходит переход; обычно содержимое другого экрана - просто заголовок с текстом и кнопкой"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_stepperFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "stepper"
          ],
          "default": "stepper"
        },
        "target": {
          "type": "string",
          "description": "Экран, на который происходит переход после ответа на все вопросы"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/support_unblock_screen_stepperQuestions"
          }
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_stepperQuestions": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Текст вопроса",
          "required": true
        },
        "yes_desc": {
          "type": [
            "string"
          ],
          "description": "Текст, отображаемый при нажатии на да",
          "required": false
        },
        "no_desc": {
          "type": [
            "string"
          ],
          "description": "Текст, отображаемый при нажатии на нет",
          "required": false
        },
        "target_screen": {
          "type": "string",
          "description": "Экран, на который происходит переход; обычно содержимое другого экрана - просто заголовок с текстом и кнопкой",
          "required": true
        },
        "step": {
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_textBackgroundFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "text_background"
          ],
          "default": "text_background"
        },
        "text": {
          "type": "string",
          "description": "Текст"
        },
        "bg_image": {
          "type": "string",
          "description": "Полный URL фонового изображения"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_textBorderedFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "text_bordered"
          ],
          "default": "text_bordered"
        },
        "text": {
          "type": "string",
          "description": "Текст"
        },
        "notify_btn": {
          "type": "boolean",
          "description": "Нужна ли кнопка 'Получить уведомление'"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_tutorialAnswers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Текст ответа"
        },
        "is_right": {
          "type": "boolean",
          "description": "Является ли вариант ответа правильным"
        },
        "explanation": {
          "type": "string",
          "description": "Текст, который отображается при выборе этого варианта"
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_tutorialFields": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "required": true,
          "enum": [
            "tutorial"
          ],
          "default": "tutorial"
        },
        "target": {
          "type": "string",
          "description": "Экран, на который происходит переход после ответа на все вопросы"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/support_unblock_screen_tutorialQuestions"
          }
        }
      },
      "additionalProperties": false
    },
    "support_unblock_screen_tutorialQuestions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Текст вопроса"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/support_unblock_screen_tutorialAnswers"
          }
        }
      },
      "additionalProperties": false
    },
    "users_career": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "city_name": {
          "type": "string",
          "description": "City name"
        },
        "company": {
          "type": "string",
          "description": "Company name"
        },
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "entity": "groups",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "description": "Career ID"
        },
        "position": {
          "type": "string",
          "description": "Position"
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "additionalProperties": false
    },
    "users_exports": {
      "type": "object",
      "properties": {
        "facebook": {
          "type": "integer"
        },
        "livejournal": {
          "type": "integer"
        },
        "twitter": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "users_fields": {
      "type": "string",
      "enum": [
        "first_name_nom",
        "first_name_gen",
        "first_name_dat",
        "first_name_acc",
        "first_name_ins",
        "first_name_abl",
        "last_name_nom",
        "last_name_gen",
        "last_name_dat",
        "last_name_acc",
        "last_name_ins",
        "last_name_abl",
        "photo_id",
        "verified",
        "sex",
        "bdate",
        "bdate_visibility",
        "city",
        "country",
        "home_town",
        "has_photo",
        "photo",
        "photo_rec",
        "photo_50",
        "photo_100",
        "photo_200_orig",
        "photo_200",
        "photo_400",
        "photo_400_orig",
        "photo_big",
        "photo_medium",
        "photo_medium_rec",
        "photo_max",
        "photo_max_orig",
        "photo_max_size",
        "third_party_buttons",
        "online",
        "lists",
        "domain",
        "has_mobile",
        "contacts",
        "language",
        "site",
        "education",
        "universities",
        "schools",
        "status",
        "last_seen",
        "followers_count",
        "counters",
        "common_count",
        "online_info",
        "occupation",
        "nickname",
        "relatives",
        "relation",
        "personal",
        "connections",
        "exports",
        "wall_comments",
        "wall_default",
        "activities",
        "activity",
        "interests",
        "music",
        "movies",
        "tv",
        "books",
        "is_no_index",
        "no_index",
        "games",
        "about",
        "quotes",
        "can_post",
        "can_see_all_posts",
        "can_see_audio",
        "can_see_gifts",
        "work",
        "places",
        "can_write_private_message",
        "can_send_friend_request",
        "can_upload_doc",
        "can_ban",
        "is_favorite",
        "is_hidden_from_feed",
        "timezone",
        "screen_name",
        "maiden_name",
        "crop_photo",
        "is_friend",
        "is_best_friend",
        "friend_status",
        "career",
        "military",
        "blacklisted",
        "blacklisted_by_me",
        "can_subscribe_posts",
        "descriptions",
        "trending",
        "mutual",
        "friendship_weeks",
        "can_invite_to_chats",
        "stories_archive_count",
        "has_unseen_stories",
        "video_live",
        "video_live_level",
        "video_live_count",
        "clips_count",
        "service_description",
        "can_see_wishes",
        "is_subscribed_podcasts",
        "can_subscribe_podcasts",
        "animated_avatar",
        "owner_state",
        "is_esia_verified",
        "is_esia_linked",
        "is_tinkoff_linked",
        "is_tinkoff_verified",
        "is_sber_verified",
        "oauth_linked",
        "oauth_verification",
        "is_sber_linked"
      ]
    },
    "users_last_seen": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "integer",
          "description": "Type of the platform that used for the last authorization"
        },
        "time": {
          "type": "integer",
          "description": "Last visit date (in Unix time)"
        }
      },
      "additionalProperties": false
    },
    "users_military": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID",
          "required": true
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "id": {
          "type": "integer",
          "description": "Military ID"
        },
        "unit": {
          "type": "string",
          "description": "Unit name",
          "required": true
        },
        "unit_id": {
          "type": "integer",
          "description": "Unit ID",
          "required": true
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "additionalProperties": false
    },
    "users_occupation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of school, university, company group",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Name of occupation"
        },
        "type": {
          "enum": [
            "school",
            "university",
            "work"
          ],
          "type": "string",
          "description": "Type of occupation"
        },
        "graduate_year": {
          "type": "integer"
        },
        "country_id": {
          "type": "integer"
        },
        "city_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "users_online_info": {
      "type": "object",
      "properties": {
        "visible": {
          "type": "boolean",
          "description": "Whether you can see real online status of user or not",
          "required": true
        },
        "last_seen": {
          "type": "integer",
          "description": "Last time we saw user being active",
          "minimum": 0
        },
        "is_online": {
          "type": "boolean",
          "description": "Whether user is currently online or not"
        },
        "app_id": {
          "type": "integer",
          "description": "Application id from which user is currently online or was last seen online",
          "minimum": 0
        },
        "is_mobile": {
          "type": "boolean",
          "description": "Is user online from desktop app or mobile app"
        },
        "status": {
          "type": "string",
          "description": "In case user online is not visible, it indicates approximate timeframe of user online",
          "enum": [
            "recently",
            "last_week",
            "last_month",
            "long_ago",
            "not_show"
          ]
        }
      },
      "additionalProperties": false
    },
    "users_personal": {
      "type": "object",
      "properties": {
        "alcohol": {
          "type": "integer",
          "description": "User's views on alcohol"
        },
        "inspired_by": {
          "type": "string",
          "description": "User's inspired by"
        },
        "langs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "User's languages"
          }
        },
        "langs_full": {
          "type": "array",
          "description": "User's languages with full info",
          "items": {
            "$ref": "objects.json#/definitions/database_language_full"
          }
        },
        "life_main": {
          "type": "integer",
          "description": "User's personal priority in life"
        },
        "people_main": {
          "type": "integer",
          "description": "User's personal priority in people"
        },
        "political": {
          "type": "integer",
          "description": "User's political views"
        },
        "religion": {
          "type": "string",
          "description": "User's religion"
        },
        "religion_id": {
          "type": "integer",
          "description": "User's religion id"
        },
        "smoking": {
          "type": "integer",
          "description": "User's views on smoking"
        }
      },
      "additionalProperties": false
    },
    "users_relative": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string",
          "description": "Date of child birthday (format dd.mm.yyyy)"
        },
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Relative ID"
        },
        "name": {
          "type": "string",
          "description": "Name of relative"
        },
        "type": {
          "type": "string",
          "description": "Relative type",
          "enum": [
            "parent",
            "child",
            "grandparent",
            "grandchild",
            "sibling"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_school": {
      "type": "object",
      "properties": {
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "class": {
          "type": "string",
          "description": "School class letter"
        },
        "class_id": {
          "type": "integer",
          "description": "School class id"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "id": {
          "type": "string",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School name"
        },
        "type": {
          "type": "integer",
          "description": "School type ID"
        },
        "type_str": {
          "type": "string",
          "description": "School type name"
        },
        "year_from": {
          "type": "integer",
          "description": "Year the user started to study"
        },
        "year_graduated": {
          "type": "integer",
          "description": "Graduation year"
        },
        "year_to": {
          "type": "integer",
          "description": "Year the user finished to study"
        },
        "speciality": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "users_subscriptions_item": {
      "type": "object",
      "discriminator": {
        "propertyName": "type",
        "mapping": {
          "group": "objects.json#/definitions/groups_group_full",
          "page": "objects.json#/definitions/groups_group_full",
          "event": "objects.json#/definitions/groups_group_full",
          "profile": "objects.json#/definitions/users_user_full",
          "email": "objects.json#/definitions/users_user_full"
        }
      },
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/users_user_full"
        },
        {
          "$ref": "objects.json#/definitions/groups_group_full"
        }
      ]
    },
    "users_university": {
      "type": "object",
      "properties": {
        "chair": {
          "type": "integer",
          "description": "Chair ID"
        },
        "chair_name": {
          "type": "string",
          "description": "Chair name"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "education_form": {
          "type": "string",
          "description": "Education form"
        },
        "education_form_id": {
          "type": "integer",
          "description": "Education form id"
        },
        "education_status": {
          "type": "string",
          "description": "Education status"
        },
        "education_status_id": {
          "type": "integer",
          "description": "Education status id"
        },
        "faculty": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "faculty_name": {
          "type": "string",
          "description": "Faculty name"
        },
        "graduation": {
          "type": "integer",
          "description": "Graduation year"
        },
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "name": {
          "type": "string",
          "description": "University name"
        },
        "university_group_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "users_user": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_min"
        },
        {
          "properties": {
            "sex": {
              "$ref": "objects.json#/definitions/base_sex",
              "description": "User sex"
            },
            "screen_name": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "photo_50": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 50 pixels in width"
            },
            "photo_100": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 100 pixels in width"
            },
            "online_info": {
              "$ref": "objects.json#/definitions/users_online_info"
            },
            "online": {
              "description": "Information whether the user is online",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "online_mobile": {
              "description": "Information whether the user is online in mobile site or application",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "online_app": {
              "type": "integer",
              "description": "Application ID"
            },
            "verified": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether the user is verified"
            },
            "trending": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether the user has a \"fire\" pictogram."
            },
            "friend_status": {
              "$ref": "objects.json#/definitions/friends_friend_status_status"
            },
            "mutual": {
              "$ref": "objects.json#/definitions/friends_requests_mutual"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "users_user_connections": {
      "type": "object",
      "properties": {
        "skype": {
          "type": "string",
          "description": "User's Skype nickname",
          "required": true
        },
        "facebook": {
          "type": "string",
          "description": "User's Facebook account",
          "required": true
        },
        "facebook_name": {
          "type": "string",
          "description": "User's Facebook name"
        },
        "twitter": {
          "type": "string",
          "description": "User's Twitter account",
          "required": true
        },
        "livejournal": {
          "type": "string",
          "description": "User's Livejournal account"
        },
        "instagram": {
          "type": "string",
          "description": "User's Instagram account",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_user_counters": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "integer",
          "description": "Albums number"
        },
        "badges": {
          "type": "integer",
          "description": "Badges number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "followers": {
          "type": "integer",
          "description": "Followers number"
        },
        "friends": {
          "type": "integer",
          "description": "Friends number"
        },
        "gifts": {
          "type": "integer",
          "description": "Gifts number"
        },
        "groups": {
          "type": "integer",
          "description": "Communities number"
        },
        "notes": {
          "type": "integer",
          "description": "Notes number"
        },
        "online_friends": {
          "type": "integer",
          "description": "Online friends number"
        },
        "pages": {
          "type": "integer",
          "description": "Public pages number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "subscriptions": {
          "type": "integer",
          "description": "Subscriptions number"
        },
        "user_photos": {
          "type": "integer",
          "description": "Number of photos with user"
        },
        "user_videos": {
          "type": "integer",
          "description": "Number of videos with user"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        },
        "video_playlists": {
          "type": "integer",
          "description": "Playlists number"
        },
        "new_photo_tags": {
          "type": "integer"
        },
        "new_recognition_tags": {
          "type": "integer"
        },
        "mutual_friends": {
          "type": "integer"
        },
        "friends_followers": {
          "type": "integer"
        },
        "posts": {
          "type": "integer"
        },
        "articles": {
          "type": "integer"
        },
        "wishes": {
          "type": "integer"
        },
        "podcasts": {
          "type": "integer"
        },
        "clips": {
          "type": "integer",
          "format": "int64"
        },
        "clips_followers": {
          "type": "integer",
          "format": "int64"
        },
        "videos_followers": {
          "type": "integer",
          "format": "int64",
          "description": "Videos followers number"
        },
        "clips_views": {
          "type": "integer",
          "format": "int64"
        },
        "clips_likes": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "users_user_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user"
        },
        {
          "properties": {
            "first_name_nom": {
              "type": "string",
              "description": "User's first name in nominative case"
            },
            "first_name_gen": {
              "type": "string",
              "description": "User's first name in genitive case"
            },
            "first_name_dat": {
              "type": "string",
              "description": "User's first name in dative case"
            },
            "first_name_acc": {
              "type": "string",
              "description": "User's first name in accusative case"
            },
            "first_name_ins": {
              "type": "string",
              "description": "User's first name in instrumental case"
            },
            "first_name_abl": {
              "type": "string",
              "description": "User's first name in prepositional case"
            },
            "last_name_nom": {
              "type": "string",
              "description": "User's last name in nominative case"
            },
            "last_name_gen": {
              "type": "string",
              "description": "User's last name in genitive case"
            },
            "last_name_dat": {
              "type": "string",
              "description": "User's last name in dative case"
            },
            "last_name_acc": {
              "type": "string",
              "description": "User's last name in accusative case"
            },
            "last_name_ins": {
              "type": "string",
              "description": "User's last name in instrumental case"
            },
            "last_name_abl": {
              "type": "string",
              "description": "User's last name in prepositional case"
            },
            "nickname": {
              "type": "string",
              "description": "User nickname"
            },
            "maiden_name": {
              "type": "string",
              "description": "User maiden name"
            },
            "contact_name": {
              "type": "string",
              "description": "User contact name"
            },
            "domain": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "bdate": {
              "type": "string",
              "description": "User's date of birth"
            },
            "city": {
              "$ref": "objects.json#/definitions/base_city"
            },
            "country": {
              "$ref": "objects.json#/definitions/base_country"
            },
            "timezone": {
              "type": "number",
              "description": "User's timezone"
            },
            "owner_state": {
              "$ref": "objects.json#/definitions/owner_state"
            },
            "photo_200": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 200 pixels in width"
            },
            "photo_max": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with maximum width"
            },
            "photo_200_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo with 200 pixels in width"
            },
            "photo_400_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo with 400 pixels in width"
            },
            "photo_max_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo of maximum size"
            },
            "photo_id": {
              "type": "string",
              "description": "ID of the user's main photo"
            },
            "has_photo": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether the user has main photo"
            },
            "has_mobile": {
              "description": "Information whether the user specified his phone number",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_friend": {
              "description": "Information whether the user is a friend of current user",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_best_friend": {
              "description": "Information whether the user is a best friend of current user",
              "type": "boolean"
            },
            "wall_comments": {
              "description": "Information whether current user can comment wall posts",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_post": {
              "description": "Information whether current user can post on the user's wall",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see other users' audio on the wall",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_see_audio": {
              "description": "Information whether current user can see the user's audio",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "type": {
              "$ref": "objects.json#/definitions/users_user_type"
            },
            "email": {
              "type": "string"
            },
            "skype": {
              "type": "string"
            },
            "facebook": {
              "type": "string"
            },
            "facebook_name": {
              "type": "string"
            },
            "twitter": {
              "type": "string"
            },
            "livejournal": {
              "type": "string"
            },
            "instagram": {
              "type": "string"
            },
            "test": {
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "video_live": {
              "$ref": "objects.json#/definitions/video_live_info"
            },
            "is_video_live_notifications_blocked": {
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_service": {
              "type": "boolean"
            },
            "service_description": {
              "type": "string"
            },
            "photo_rec": {
              "$ref": "objects.json#/definitions/photos_photo_falseable"
            },
            "photo_medium": {
              "$ref": "objects.json#/definitions/photos_photo_falseable"
            },
            "photo_medium_rec": {
              "$ref": "objects.json#/definitions/photos_photo_falseable"
            },
            "photo": {
              "type": "string"
            },
            "photo_big": {
              "type": "string"
            },
            "photo_400": {
              "type": "string"
            },
            "photo_max_size": {
              "$ref": "objects.json#/definitions/photos_photo"
            },
            "language": {
              "type": "string"
            },
            "stories_archive_count": {
              "type": "integer"
            },
            "has_unseen_stories": {
              "type": "boolean"
            },
            "wall_default": {
              "type": "string",
              "enum": [
                "owner",
                "all"
              ]
            },
            "can_call": {
              "description": "Information whether current user can call",
              "type": "boolean"
            },
            "can_call_from_group": {
              "description": "Information whether group can call user",
              "type": "boolean"
            },
            "can_see_wishes": {
              "description": "Information whether current user can see the user's wishes",
              "type": "boolean"
            },
            "can_see_gifts": {
              "description": "Information whether current user can see the user's gifts",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "interests": {
              "type": "string"
            },
            "books": {
              "type": "string"
            },
            "tv": {
              "type": "string"
            },
            "quotes": {
              "type": "string"
            },
            "about": {
              "type": "string"
            },
            "games": {
              "type": "string"
            },
            "movies": {
              "type": "string"
            },
            "activities": {
              "type": "string"
            },
            "music": {
              "type": "string"
            },
            "can_write_private_message": {
              "description": "Information whether current user can write private message",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_send_friend_request": {
              "description": "Information whether current user can send a friend request",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_be_invited_group": {
              "type": "boolean",
              "description": "Information whether current user can be invited to the community"
            },
            "mobile_phone": {
              "type": "string",
              "description": "User's mobile phone number"
            },
            "home_phone": {
              "type": "string",
              "description": "User's additional phone number"
            },
            "site": {
              "type": "string",
              "description": "User's website"
            },
            "status_audio": {
              "$ref": "objects.json#/definitions/audio_audio"
            },
            "status": {
              "type": "string",
              "description": "User's status"
            },
            "activity": {
              "type": "string",
              "description": "User's status"
            },
            "status_app": {
              "$ref": "objects.json#/definitions/apps_app_min"
            },
            "last_seen": {
              "$ref": "objects.json#/definitions/users_last_seen"
            },
            "exports": {
              "$ref": "objects.json#/definitions/users_exports"
            },
            "crop_photo": {
              "$ref": "objects.json#/definitions/base_crop_photo"
            },
            "followers_count": {
              "type": "integer",
              "description": "Number of user's followers",
              "minimum": 0
            },
            "video_live_level": {
              "type": "integer",
              "description": "User level in live streams achievements",
              "minimum": 0
            },
            "video_live_count": {
              "type": "integer",
              "description": "Number of user's live streams",
              "minimum": 0
            },
            "clips_count": {
              "type": "integer",
              "description": "Number of user's clips",
              "minimum": 0
            },
            "blacklisted": {
              "description": "Information whether current user is in the requested user's blacklist.",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "blacklisted_by_me": {
              "description": "Information whether the requested user is in current user's blacklist",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_favorite": {
              "description": "Information whether the requested user is in faves of current user",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "is_hidden_from_feed": {
              "description": "Information whether the requested user is hidden from current user's newsfeed",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "common_count": {
              "type": "integer",
              "description": "Number of common friends with current user",
              "minimum": 0
            },
            "occupation": {
              "$ref": "objects.json#/definitions/users_occupation"
            },
            "career": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/users_career"
              }
            },
            "military": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/users_military"
              }
            },
            "university": {
              "type": "integer",
              "description": "University ID"
            },
            "university_name": {
              "type": "string",
              "description": "University name"
            },
            "university_group_id": {
              "type": "integer"
            },
            "faculty": {
              "type": "integer",
              "description": "Faculty ID"
            },
            "faculty_name": {
              "type": "string",
              "description": "Faculty name"
            },
            "graduation": {
              "type": "integer",
              "description": "Graduation year"
            },
            "education_form": {
              "type": "string",
              "description": "Education form"
            },
            "education_status": {
              "type": "string",
              "description": "User's education status"
            },
            "home_town": {
              "type": "string",
              "description": "User hometown"
            },
            "relation": {
              "$ref": "objects.json#/definitions/users_user_relation",
              "description": "User relationship status"
            },
            "relation_partner": {
              "$ref": "objects.json#/definitions/users_user_min"
            },
            "personal": {
              "$ref": "objects.json#/definitions/users_personal"
            },
            "universities": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/users_university"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/users_school"
              }
            },
            "relatives": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/users_relative"
              }
            },
            "is_subscribed_podcasts": {
              "description": "Information whether current user is subscribed to podcasts",
              "type": "boolean"
            },
            "can_subscribe_podcasts": {
              "description": "Owner in whitelist or not",
              "type": "boolean"
            },
            "can_subscribe_posts": {
              "description": "Can subscribe to wall",
              "type": "boolean"
            },
            "counters": {
              "$ref": "objects.json#/definitions/users_user_counters"
            },
            "access_key": {
              "type": "string"
            },
            "can_upload_doc": {
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_ban": {
              "description": "Information whether the user can be baned (added to black list) by me",
              "type": "boolean"
            },
            "hash": {
              "type": "string"
            },
            "is_no_index": {
              "type": "boolean",
              "description": "Access to user profile is restricted for search engines"
            },
            "contact_id": {
              "type": "integer",
              "description": "Contact person ID"
            },
            "is_message_request": {
              "type": "boolean"
            },
            "descriptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "lists": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "IDs of friend lists with user"
              }
            }
          },
          "additionalProperties": false
        }
      ],
      "additionalProperties": false
    },
    "users_user_min": {
      "type": "object",
      "properties": {
        "deactivated": {
          "type": "string",
          "description": "Returns if a profile is deleted or blocked"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "hidden": {
          "type": "integer",
          "description": "Returns if a profile is hidden."
        },
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "User ID",
          "required": true
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "can_access_closed": {
          "type": "boolean"
        },
        "is_closed": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "users_user_relation": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "enumNames": [
        "not specified",
        "single",
        "in a relationship",
        "engaged",
        "married",
        "complicated",
        "actively searching",
        "in love",
        "in a civil union"
      ]
    },
    "users_user_settings_xtr": {
      "type": "object",
      "properties": {
        "connections": {
          "$ref": "objects.json#/definitions/users_user_connections"
        },
        "bdate": {
          "type": "string",
          "description": "User's date of birth"
        },
        "bdate_visibility": {
          "type": "integer",
          "minimum": 0,
          "description": "Information whether user's birthdate are hidden"
        },
        "city": {
          "$ref": "objects.json#/definitions/base_city"
        },
        "country": {
          "$ref": "objects.json#/definitions/base_country"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "home_town": {
          "type": "string",
          "description": "User's hometown",
          "required": true
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "maiden_name": {
          "type": "string",
          "description": "User maiden name"
        },
        "name_request": {
          "$ref": "objects.json#/definitions/account_name_request"
        },
        "personal": {
          "$ref": "objects.json#/definitions/users_personal"
        },
        "phone": {
          "type": "string",
          "description": "User phone number with some hidden digits"
        },
        "relation": {
          "$ref": "objects.json#/definitions/users_user_relation",
          "description": "User relationship status"
        },
        "relation_partner": {
          "$ref": "objects.json#/definitions/users_user_min"
        },
        "relation_pending": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether relation status is pending"
        },
        "relation_requests": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/users_user_min"
          }
        },
        "screen_name": {
          "type": "string",
          "description": "Domain name of the user's page"
        },
        "sex": {
          "$ref": "objects.json#/definitions/base_sex",
          "description": "User sex"
        },
        "status": {
          "type": "string",
          "description": "User status",
          "required": true
        },
        "status_audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        },
        "interests": {
          "$ref": "objects.json#/definitions/account_user_settings_interests"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "users_user_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "profile"
      ]
    },
    "users_user_xtr_type": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_full"
        },
        {
          "properties": {
            "type": {
              "$ref": "objects.json#/definitions/users_user_type"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "users_users_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Users number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "entity": "profiles",
            "format": "int64"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_domain_resolved": {
      "type": "object",
      "properties": {
        "object_id": {
          "type": "integer",
          "description": "Object ID"
        },
        "group_id": {
          "type": "integer",
          "description": "Group ID",
          "entity": "groups",
          "format": "int64"
        },
        "type": {
          "$ref": "objects.json#/definitions/utils_domain_resolved_type"
        }
      },
      "additionalProperties": false
    },
    "utils_domain_resolved_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "user",
        "group",
        "application",
        "page",
        "vk_app",
        "community_application"
      ]
    },
    "utils_last_shortened_link": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "short_url": {
          "type": "string",
          "format": "uri",
          "description": "Short link URL"
        },
        "timestamp": {
          "type": "integer",
          "description": "Creation time in Unixtime"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Full URL"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      },
      "additionalProperties": false
    },
    "utils_link_checked": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        },
        "status": {
          "$ref": "objects.json#/definitions/utils_link_checked_status"
        }
      },
      "additionalProperties": false
    },
    "utils_link_checked_status": {
      "type": "string",
      "description": "Link status",
      "enum": [
        "not_banned",
        "banned",
        "processing"
      ]
    },
    "utils_link_stats": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/utils_stats"
          }
        }
      },
      "additionalProperties": false
    },
    "utils_link_stats_extended": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/utils_stats_extended"
          }
        }
      },
      "additionalProperties": false
    },
    "utils_short_link": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "short_url": {
          "type": "string",
          "format": "uri",
          "description": "Short link URL"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Full URL"
        }
      },
      "additionalProperties": false
    },
    "utils_stats": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_city": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_country": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_extended": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/utils_stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/utils_stats_country"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/utils_stats_sex_age"
          }
        },
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_sex_age": {
      "type": "object",
      "properties": {
        "age_range": {
          "type": "string",
          "description": "Age denotation"
        },
        "female": {
          "type": "integer",
          "description": " Views by female users"
        },
        "male": {
          "type": "integer",
          "description": " Views by male users"
        }
      },
      "additionalProperties": false
    },
    "video_episode": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "minimum": 0,
          "description": "Seconds from start of the video"
        },
        "text": {
          "type": "string",
          "description": "Description of episode"
        }
      },
      "additionalProperties": false
    },
    "video_live_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "label": {
          "type": "string",
          "required": true
        },
        "sublist": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/video_live_category"
          }
        }
      },
      "additionalProperties": false
    },
    "video_live_info": {
      "type": "object",
      "properties": {
        "enabled": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "required": true
        },
        "is_notifications_blocked": {
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "video_live_settings": {
      "description": "Video live settings",
      "type": "object",
      "properties": {
        "can_rewind": {
          "description": "If user car rewind live or not",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "is_endless": {
          "description": "If live is endless or not",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "max_duration": {
          "description": "Max possible time for rewind",
          "type": "integer"
        },
        "is_clips_live": {
          "description": "If live in clips apps",
          "$ref": "objects.json#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "video_save_result": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID",
          "entity": "owner",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the video uploading"
        },
        "video_id": {
          "type": "integer",
          "description": "Video ID"
        }
      },
      "additionalProperties": false
    },
    "video_stream_input_params": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "key": {
          "type": "string"
        },
        "okmp_url": {
          "type": "string",
          "format": "uri"
        },
        "webrtc_url": {
          "type": "string",
          "format": "uri"
        }
      },
      "additionalProperties": false
    },
    "video_video": {
      "type": "object",
      "properties": {
        "response_type": {
          "type": "string",
          "default": "min",
          "enum": [
            "min",
            "full"
          ]
        },
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime",
          "minimum": 0
        },
        "can_comment": {
          "description": "Information whether current user can comment the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_delete": {
          "description": "Information whether current user can delete the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_like": {
          "description": "Information whether current user can like the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_repost": {
          "type": "integer",
          "minimum": 1,
          "maximum": 3,
          "description": "Information whether current user can repost the video"
        },
        "can_subscribe": {
          "description": "Information whether current user can subscribe to author of the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_add_to_faves": {
          "description": "Information whether current user can add the video to favourites",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_attach_link": {
          "description": "Information whether current user can attach action button to the video",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_edit_privacy": {
          "description": "Information whether current user can edit the video privacy",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "is_private": {
          "description": "1 if video is private",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds",
          "minimum": 0
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/video_video_image"
          }
        },
        "first_frame": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/video_video_image"
          }
        },
        "width": {
          "type": "integer",
          "minimum": 0,
          "description": "Video width"
        },
        "height": {
          "type": "integer",
          "minimum": 0,
          "description": "Video height"
        },
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Video ID"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Video owner ID",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Id of the user who uploaded the video if it was uploaded to a group by member",
          "entity": "owner",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Whether video is added to bookmarks"
        },
        "player": {
          "type": "string",
          "format": "uri",
          "description": "Video embed URL"
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "objects.json#/definitions/base_property_exists"
        },
        "converting": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "1 if  video is being converted"
        },
        "added": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "1 if video is added to user's albums"
        },
        "is_subscribed": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "1 if user is subscribed to author of the video"
        },
        "track_code": {
          "type": "string"
        },
        "repeat": {
          "description": "Information whether the video is repeated",
          "$ref": "objects.json#/definitions/base_property_exists"
        },
        "type": {
          "type": "string",
          "enum": [
            "video",
            "music_video",
            "movie",
            "live",
            "short_video"
          ]
        },
        "views": {
          "type": "integer",
          "description": "Number of views",
          "minimum": 0
        },
        "local_views": {
          "type": "integer",
          "description": "If video is external, number of views on vk",
          "minimum": 0
        },
        "content_restricted": {
          "type": "integer",
          "minimum": 0,
          "description": "Restriction code"
        },
        "content_restricted_message": {
          "type": "string",
          "description": "Restriction text"
        },
        "balance": {
          "type": "integer",
          "description": "Live donations balance",
          "minimum": 0
        },
        "live": {
          "description": "1 if the video is a live stream",
          "$ref": "objects.json#/definitions/base_property_exists"
        },
        "upcoming": {
          "description": "1 if the video is an upcoming stream",
          "$ref": "objects.json#/definitions/base_property_exists"
        },
        "live_start_time": {
          "description": "Date in Unixtime when the live stream is scheduled to start by the author",
          "type": "integer",
          "minimum": 0
        },
        "live_notify": {
          "description": "Whether current user is subscribed to the upcoming live stream notification (if not subscribed to the author)",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "spectators": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of spectators of the stream"
        },
        "platform": {
          "type": "string",
          "description": "External platform"
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_likes"
        },
        "reposts": {
          "$ref": "objects.json#/definitions/base_reposts_info"
        }
      },
      "additionalProperties": false
    },
    "video_video_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Album title",
          "required": true
        },
        "track_code": {
          "type": "string",
          "description": "Album trackcode",
          "required": false
        },
        "response_type": {
          "type": "string",
          "default": "min",
          "enum": [
            "min",
            "full"
          ]
        }
      },
      "additionalProperties": false
    },
    "video_video_album_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/video_video_album"
        },
        {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 0,
              "description": "Total number of videos in album",
              "required": true
            },
            "image": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/video_video_image"
              },
              "description": "Album cover image in different sizes"
            },
            "image_blur": {
              "$ref": "objects.json#/definitions/base_property_exists",
              "description": "Need blur album thumb or not"
            },
            "is_system": {
              "$ref": "objects.json#/definitions/base_property_exists",
              "description": "Information whether album is system"
            },
            "updated_time": {
              "type": "integer",
              "description": "Date when the album has been updated last time in Unixtime",
              "minimum": 0,
              "required": true
            },
            "can_edit": {
              "description": "Is user can edit playlist",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_delete": {
              "description": "Is user can delete playlist",
              "$ref": "objects.json#/definitions/base_bool_int"
            },
            "can_upload": {
              "description": "Is user can upload video to playlist",
              "$ref": "objects.json#/definitions/base_bool_int"
            }
          },
          "additionalProperties": false
        }
      ],
      "additionalProperties": false
    },
    "video_video_files": {
      "type": "object",
      "properties": {
        "external": {
          "type": "string",
          "format": "uri",
          "description": "URL of the external player"
        },
        "mp4_144": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 144p quality"
        },
        "mp4_240": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 240p quality"
        },
        "mp4_360": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 360p quality"
        },
        "mp4_480": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 480p quality"
        },
        "mp4_720": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 720p quality"
        },
        "mp4_1080": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 1080p quality"
        },
        "mp4_1440": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 2K quality"
        },
        "mp4_2160": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 4K quality"
        },
        "flv_320": {
          "type": "string",
          "format": "uri",
          "description": "URL of the flv file with 320p quality"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "video_video_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/video_video"
        },
        {
          "properties": {
            "files": {
              "$ref": "objects.json#/definitions/video_video_files"
            },
            "trailer": {
              "$ref": "objects.json#/definitions/video_video_files"
            },
            "episodes": {
              "description": "List of video episodes with timecodes",
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/video_episode"
              }
            },
            "live_settings": {
              "description": "Settings for live stream",
              "$ref": "objects.json#/definitions/video_live_settings"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "video_video_image": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/base_image"
        },
        {
          "properties": {
            "with_padding": {
              "$ref": "objects.json#/definitions/base_property_exists"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "wall_app_post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID"
        },
        "name": {
          "type": "string",
          "description": "Application name"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 604 px in width"
        }
      },
      "additionalProperties": false
    },
    "wall_attached_note": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "read_comments": {
          "type": "integer",
          "description": "Read comments number",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Note title",
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Note text"
        },
        "privacy_view": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privacy_comment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "can_comment": {
          "type": "integer"
        },
        "text_wiki": {
          "type": "string",
          "description": "Note wiki text"
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with note preview",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_carousel_base": {
      "type": "object",
      "properties": {
        "carousel_offset": {
          "type": "integer",
          "minimum": 0,
          "description": "Index of current carousel element"
        }
      },
      "additionalProperties": false
    },
    "wall_comment_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        },
        "doc": {
          "$ref": "objects.json#/definitions/docs_doc"
        },
        "link": {
          "$ref": "objects.json#/definitions/base_link"
        },
        "market": {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        "market_market_album": {
          "$ref": "objects.json#/definitions/market_market_album"
        },
        "note": {
          "$ref": "objects.json#/definitions/wall_attached_note"
        },
        "page": {
          "$ref": "objects.json#/definitions/pages_wikipage_full"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "sticker": {
          "$ref": "objects.json#/definitions/base_sticker"
        },
        "type": {
          "$ref": "objects.json#/definitions/wall_comment_attachment_type",
          "required": true
        },
        "video": {
          "$ref": "objects.json#/definitions/video_video"
        },
        "graffiti": {
          "$ref": "objects.json#/definitions/wall_graffiti"
        }
      },
      "additionalProperties": false
    },
    "wall_comment_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "audio_playlist",
        "video",
        "doc",
        "link",
        "note",
        "page",
        "market_market_album",
        "market",
        "sticker",
        "graffiti"
      ]
    },
    "wall_geo": {
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "string",
          "description": "Coordinates as string. <latitude> <longtitude>"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        },
        "type": {
          "type": "string",
          "description": "Place type",
          "enum": [
            "place",
            "point"
          ]
        }
      },
      "additionalProperties": false
    },
    "wall_get_filter": {
      "description": "Filter to apply: 'owner' - posts by the wall owner, 'others' - posts by someone else, 'all' - posts by the wall owner and others (default), 'postponed' - timed posts (only available for calls with an 'access_token'), 'suggests' - suggested posts on a community wall",
      "type": "string",
      "enum": [
        "owner",
        "others",
        "all",
        "postponed",
        "suggests",
        "archived",
        "donut"
      ]
    },
    "wall_graffiti": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Graffiti ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_586": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 586 px in width"
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti URL"
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0
        },
        "access_key": {
          "type": "string",
          "description": "Access key for graffiti"
        }
      },
      "additionalProperties": false
    },
    "wall_post_copyright": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "link": {
          "format": "uri",
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_post_source": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Additional data"
        },
        "platform": {
          "type": "string",
          "description": "Platform name"
        },
        "type": {
          "$ref": "objects.json#/definitions/wall_post_source_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to an external site used to publish the post"
        },
        "link": {
          "$ref": "objects.json#/definitions/base_link"
        }
      },
      "additionalProperties": false
    },
    "wall_post_source_type": {
      "type": "string",
      "description": "Type of post source",
      "enum": [
        "vk",
        "widget",
        "api",
        "rss",
        "sms",
        "mvk"
      ]
    },
    "wall_post_type": {
      "type": "string",
      "description": "Post type",
      "enum": [
        "post",
        "copy",
        "reply",
        "postpone",
        "suggest",
        "post_ads",
        "photo",
        "video"
      ]
    },
    "wall_posted_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 604 px in width"
        }
      },
      "additionalProperties": false
    },
    "wall_views": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Count"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Author ID",
          "required": true
        },
        "can_edit": {
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "post_id": {
          "type": "integer"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "parents_stack": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "photo_id": {
          "type": "integer"
        },
        "video_id": {
          "type": "integer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wallpost_attachment"
          }
        },
        "donut": {
          "$ref": "objects.json#/definitions/wall_wall_comment_donut"
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_likes_info"
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        },
        "reply_to_user": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Replied user ID"
        },
        "reply_to_comment": {
          "type": "integer",
          "description": "Replied comment ID"
        },
        "thread": {
          "$ref": "objects.json#/definitions/comment_thread"
        },
        "deleted": {
          "type": "boolean"
        },
        "pid": {
          "type": "integer",
          "minimum": 0,
          "description": "Photo ID"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment_donut": {
      "type": "object",
      "properties": {
        "is_don": {
          "description": "Means commentator is donator",
          "type": "boolean"
        },
        "placeholder": {
          "$ref": "objects.json#/definitions/wall_wall_comment_donut_placeholder"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment_donut_placeholder": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_wall_item": {
      "type": "object",
      "$ref": "objects.json#/definitions/wall_wallpost_full"
    },
    "wall_wallpost": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key to private object"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "deleted_reason": {
          "type": "string"
        },
        "deleted_details": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wallpost_attachment"
          }
        },
        "copyright": {
          "$ref": "objects.json#/definitions/wall_post_copyright",
          "description": "Information about the source of the post"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "edited": {
          "type": "integer",
          "minimum": 0,
          "description": "Date of editing in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID",
          "entity": "owner",
          "format": "int64"
        },
        "geo": {
          "$ref": "objects.json#/definitions/wall_geo"
        },
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "is_archived": {
          "type": "boolean",
          "description": "Is post archived, only for post owners"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Information whether the post in favorites list"
        },
        "likes": {
          "description": "Count of likes",
          "$ref": "objects.json#/definitions/base_likes_info"
        },
        "owner_id": {
          "type": "integer",
          "description": "Wall owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "post_id": {
          "type": "integer",
          "description": "If post type 'reply', contains original post ID"
        },
        "parents_stack": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "If post type 'reply', contains original parent IDs stack"
        },
        "post_source": {
          "$ref": "objects.json#/definitions/wall_post_source"
        },
        "post_type": {
          "$ref": "objects.json#/definitions/wall_post_type"
        },
        "reposts": {
          "$ref": "objects.json#/definitions/base_reposts_info"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID",
          "entity": "owner",
          "format": "int64"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "views": {
          "description": "Count of views",
          "$ref": "objects.json#/definitions/wall_views"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_attachment": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the audio"
        },
        "album": {
          "$ref": "objects.json#/definitions/photos_photo_album"
        },
        "app": {
          "$ref": "objects.json#/definitions/wall_app_post"
        },
        "audio": {
          "$ref": "objects.json#/definitions/audio_audio"
        },
        "doc": {
          "$ref": "objects.json#/definitions/docs_doc"
        },
        "event": {
          "$ref": "objects.json#/definitions/events_event_attach"
        },
        "group": {
          "$ref": "objects.json#/definitions/groups_group_attach"
        },
        "graffiti": {
          "$ref": "objects.json#/definitions/wall_graffiti"
        },
        "link": {
          "$ref": "objects.json#/definitions/base_link"
        },
        "market": {
          "$ref": "objects.json#/definitions/market_market_item"
        },
        "market_album": {
          "$ref": "objects.json#/definitions/market_market_album"
        },
        "note": {
          "$ref": "objects.json#/definitions/notes_note"
        },
        "page": {
          "$ref": "objects.json#/definitions/pages_wikipage_full"
        },
        "photo": {
          "$ref": "objects.json#/definitions/photos_photo"
        },
        "poll": {
          "$ref": "objects.json#/definitions/polls_poll"
        },
        "posted_photo": {
          "$ref": "objects.json#/definitions/wall_posted_photo"
        },
        "type": {
          "$ref": "objects.json#/definitions/wall_wallpost_attachment_type",
          "required": true
        },
        "video": {
          "$ref": "objects.json#/definitions/video_video_full"
        },
        "video_playlist": {
          "$ref": "objects.json#/definitions/video_video_album_full"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "photos_list",
        "posted_photo",
        "audio",
        "audio_playlist",
        "video",
        "video_playlist",
        "doc",
        "link",
        "graffiti",
        "note",
        "app",
        "poll",
        "page",
        "album",
        "market_album",
        "market",
        "event",
        "donut_link",
        "article",
        "textlive",
        "textpost",
        "textpost_publish",
        "situational_theme",
        "group",
        "sticker",
        "podcast"
      ]
    },
    "wall_wallpost_comments_donut": {
      "type": "object",
      "properties": {
        "placeholder": {
          "$ref": "objects.json#/definitions/wall_wallpost_comments_donut_placeholder"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_comments_donut_placeholder": {
      "description": "Info about paid comments feature",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_donut": {
      "description": "Info about paid wall post",
      "type": "object",
      "properties": {
        "is_donut": {
          "description": "Post only for dons",
          "type": "boolean",
          "required": true
        },
        "paid_duration": {
          "description": "Value of this field need to pass in wall.post/edit in donut_paid_duration",
          "type": "integer"
        },
        "placeholder": {
          "description": "If placeholder was respond, text and all attachments will be hidden",
          "$ref": "objects.json#/definitions/wall_wallpost_donut_placeholder"
        },
        "can_publish_free_copy": {
          "description": "Says whether group admin can post free copy of this donut post",
          "type": "boolean"
        },
        "edit_mode": {
          "description": "Says what user can edit in post about donut properties",
          "type": "string",
          "enum": [
            "all",
            "duration"
          ]
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_donut_placeholder": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/wall_carousel_base"
        },
        {
          "$ref": "objects.json#/definitions/wall_wallpost"
        },
        {
          "properties": {
            "copy_history": {
              "type": "array",
              "items": {
                "$ref": "objects.json#/definitions/wall_wallpost_full"
              }
            },
            "can_edit": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether current user can edit the post"
            },
            "created_by": {
              "type": "integer",
              "description": "Post creator ID (if post still can be edited)",
              "entity": "owner",
              "format": "int64"
            },
            "can_delete": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether current user can delete the post"
            },
            "can_pin": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether current user can pin the post"
            },
            "donut": {
              "$ref": "objects.json#/definitions/wall_wallpost_donut"
            },
            "is_pinned": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether the post is pinned"
            },
            "comments": {
              "$ref": "objects.json#/definitions/base_comments_info"
            },
            "marked_as_ads": {
              "$ref": "objects.json#/definitions/base_bool_int",
              "description": "Information whether the post is marked as ads"
            },
            "topic_id": {
              "type": "integer",
              "minimum": 0,
              "description": "Topic ID. Allowed values can be obtained from newsfeed.getPostTopics method",
              "enum": [
                0,
                1,
                7,
                12,
                16,
                19,
                21,
                23,
                25,
                26,
                32,
                43
              ],
              "enumNames": [
                "empty_topic",
                "art",
                "it",
                "games",
                "music",
                "photo",
                "science_and_tech",
                "sport",
                "travel",
                "tv_and_cinema",
                "humor",
                "fashion"
              ]
            },
            "short_text_rate": {
              "type": "number",
              "description": "Preview length control parameter",
              "minimum": 0,
              "maximum": 1
            },
            "hash": {
              "type": "string",
              "description": "Hash for sharing"
            },
            "type": {
              "$ref": "objects.json#/definitions/wall_post_type"
            },
            "feedback": {
              "$ref": "objects.json#/definitions/newsfeed_item_wallpost_feedback"
            },
            "to_id": {
              "type": "integer",
              "entity": "owner",
              "format": "int64"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "widgets_comment_media": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "integer",
          "description": "Media item ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Media owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "thumb_src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image (type=photo only)"
        },
        "type": {
          "$ref": "objects.json#/definitions/widgets_comment_media_type"
        }
      },
      "additionalProperties": false
    },
    "widgets_comment_media_type": {
      "type": "string",
      "description": "Media type",
      "enum": [
        "audio",
        "photo",
        "video"
      ]
    },
    "widgets_comment_replies": {
      "type": "object",
      "properties": {
        "can_post": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "replies": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/widgets_comment_replies_item"
          }
        },
        "groups_can_post": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether groups can comment the post"
        },
        "can_view": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can view the comments"
        }
      },
      "additionalProperties": false
    },
    "widgets_comment_replies_item": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "integer",
          "description": "Comment ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime"
        },
        "likes": {
          "$ref": "objects.json#/definitions/widgets_widget_likes"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "user": {
          "$ref": "objects.json#/definitions/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "widgets_widget_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_comment_attachment"
          }
        },
        "owner_id": {
          "type": "integer",
          "description": "Wall owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "can_delete": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether current user can delete the comment"
        },
        "comments": {
          "$ref": "objects.json#/definitions/widgets_comment_replies"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "description": "Comment author ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_likes_info"
        },
        "media": {
          "$ref": "objects.json#/definitions/widgets_comment_media"
        },
        "post_source": {
          "$ref": "objects.json#/definitions/wall_post_source"
        },
        "post_type": {
          "type": "string",
          "description": "Post type",
          "required": true
        },
        "reposts": {
          "$ref": "objects.json#/definitions/base_reposts_info"
        },
        "text": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner",
          "required": true
        },
        "user": {
          "$ref": "objects.json#/definitions/users_user_full"
        },
        "is_favorite": {
          "$ref": "objects.json#/definitions/base_bool_int",
          "description": "Information whether the post in favorites list"
        },
        "short_text_rate": {
          "type": "number",
          "description": "Preview length control parameter",
          "minimum": 0,
          "maximum": 1
        }
      },
      "additionalProperties": false
    },
    "widgets_widget_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        }
      },
      "additionalProperties": false
    },
    "widgets_widget_page": {
      "type": "object",
      "properties": {
        "comments": {
          "$ref": "objects.json#/definitions/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when widgets on the page has been initialized firstly in Unixtime"
        },
        "description": {
          "type": "string",
          "description": "Page description"
        },
        "id": {
          "type": "integer",
          "description": "Page ID"
        },
        "likes": {
          "$ref": "objects.json#/definitions/base_object_count"
        },
        "page_id": {
          "type": "string",
          "description": "page_id parameter value"
        },
        "photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Page absolute URL"
        }
      },
      "additionalProperties": false
    }
  }
}
